
Tetris.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002634  080001e4  080001e4  000101e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a0  08002818  08002818  00012818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080028b8  080028b8  000200f0  2**0
                  CONTENTS
  4 .ARM          00000000  080028b8  080028b8  000200f0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080028b8  080028b8  000200f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080028b8  080028b8  000128b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080028bc  080028bc  000128bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000f0  20000000  080028c0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  200000f0  080029b0  000200f0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000124  080029b0  00020124  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200f0  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000e278  00000000  00000000  00020119  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000263a  00000000  00000000  0002e391  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000007b0  00000000  00000000  000309d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000006a8  00000000  00000000  00031180  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0001a144  00000000  00000000  00031828  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00008fd9  00000000  00000000  0004b96c  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0007cc00  00000000  00000000  00054945  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000d1545  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002208  00000000  00000000  000d15c0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001e4 <__do_global_dtors_aux>:
 80001e4:	b510      	push	{r4, lr}
 80001e6:	4c05      	ldr	r4, [pc, #20]	; (80001fc <__do_global_dtors_aux+0x18>)
 80001e8:	7823      	ldrb	r3, [r4, #0]
 80001ea:	b933      	cbnz	r3, 80001fa <__do_global_dtors_aux+0x16>
 80001ec:	4b04      	ldr	r3, [pc, #16]	; (8000200 <__do_global_dtors_aux+0x1c>)
 80001ee:	b113      	cbz	r3, 80001f6 <__do_global_dtors_aux+0x12>
 80001f0:	4804      	ldr	r0, [pc, #16]	; (8000204 <__do_global_dtors_aux+0x20>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	2301      	movs	r3, #1
 80001f8:	7023      	strb	r3, [r4, #0]
 80001fa:	bd10      	pop	{r4, pc}
 80001fc:	200000f0 	.word	0x200000f0
 8000200:	00000000 	.word	0x00000000
 8000204:	08002800 	.word	0x08002800

08000208 <frame_dummy>:
 8000208:	b508      	push	{r3, lr}
 800020a:	4b03      	ldr	r3, [pc, #12]	; (8000218 <frame_dummy+0x10>)
 800020c:	b11b      	cbz	r3, 8000216 <frame_dummy+0xe>
 800020e:	4903      	ldr	r1, [pc, #12]	; (800021c <frame_dummy+0x14>)
 8000210:	4803      	ldr	r0, [pc, #12]	; (8000220 <frame_dummy+0x18>)
 8000212:	f3af 8000 	nop.w
 8000216:	bd08      	pop	{r3, pc}
 8000218:	00000000 	.word	0x00000000
 800021c:	200000f4 	.word	0x200000f4
 8000220:	08002800 	.word	0x08002800

08000224 <HAL_Init>:
 8000224:	b580      	push	{r7, lr}
 8000226:	af00      	add	r7, sp, #0
 8000228:	4b08      	ldr	r3, [pc, #32]	; (800024c <HAL_Init+0x28>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	4a07      	ldr	r2, [pc, #28]	; (800024c <HAL_Init+0x28>)
 800022e:	f043 0310 	orr.w	r3, r3, #16
 8000232:	6013      	str	r3, [r2, #0]
 8000234:	2003      	movs	r0, #3
 8000236:	f000 f929 	bl	800048c <HAL_NVIC_SetPriorityGrouping>
 800023a:	2000      	movs	r0, #0
 800023c:	f000 f808 	bl	8000250 <HAL_InitTick>
 8000240:	f001 fb90 	bl	8001964 <HAL_MspInit>
 8000244:	2300      	movs	r3, #0
 8000246:	4618      	mov	r0, r3
 8000248:	bd80      	pop	{r7, pc}
 800024a:	bf00      	nop
 800024c:	40022000 	.word	0x40022000

08000250 <HAL_InitTick>:
 8000250:	b580      	push	{r7, lr}
 8000252:	b082      	sub	sp, #8
 8000254:	af00      	add	r7, sp, #0
 8000256:	6078      	str	r0, [r7, #4]
 8000258:	4b12      	ldr	r3, [pc, #72]	; (80002a4 <HAL_InitTick+0x54>)
 800025a:	681a      	ldr	r2, [r3, #0]
 800025c:	4b12      	ldr	r3, [pc, #72]	; (80002a8 <HAL_InitTick+0x58>)
 800025e:	781b      	ldrb	r3, [r3, #0]
 8000260:	4619      	mov	r1, r3
 8000262:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000266:	fbb3 f3f1 	udiv	r3, r3, r1
 800026a:	fbb2 f3f3 	udiv	r3, r2, r3
 800026e:	4618      	mov	r0, r3
 8000270:	f000 f933 	bl	80004da <HAL_SYSTICK_Config>
 8000274:	4603      	mov	r3, r0
 8000276:	2b00      	cmp	r3, #0
 8000278:	d001      	beq.n	800027e <HAL_InitTick+0x2e>
 800027a:	2301      	movs	r3, #1
 800027c:	e00e      	b.n	800029c <HAL_InitTick+0x4c>
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	2b0f      	cmp	r3, #15
 8000282:	d80a      	bhi.n	800029a <HAL_InitTick+0x4a>
 8000284:	2200      	movs	r2, #0
 8000286:	6879      	ldr	r1, [r7, #4]
 8000288:	f04f 30ff 	mov.w	r0, #4294967295
 800028c:	f000 f909 	bl	80004a2 <HAL_NVIC_SetPriority>
 8000290:	4a06      	ldr	r2, [pc, #24]	; (80002ac <HAL_InitTick+0x5c>)
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	6013      	str	r3, [r2, #0]
 8000296:	2300      	movs	r3, #0
 8000298:	e000      	b.n	800029c <HAL_InitTick+0x4c>
 800029a:	2301      	movs	r3, #1
 800029c:	4618      	mov	r0, r3
 800029e:	3708      	adds	r7, #8
 80002a0:	46bd      	mov	sp, r7
 80002a2:	bd80      	pop	{r7, pc}
 80002a4:	20000088 	.word	0x20000088
 80002a8:	20000004 	.word	0x20000004
 80002ac:	20000000 	.word	0x20000000

080002b0 <HAL_IncTick>:
 80002b0:	b480      	push	{r7}
 80002b2:	af00      	add	r7, sp, #0
 80002b4:	4b05      	ldr	r3, [pc, #20]	; (80002cc <HAL_IncTick+0x1c>)
 80002b6:	781b      	ldrb	r3, [r3, #0]
 80002b8:	461a      	mov	r2, r3
 80002ba:	4b05      	ldr	r3, [pc, #20]	; (80002d0 <HAL_IncTick+0x20>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	4413      	add	r3, r2
 80002c0:	4a03      	ldr	r2, [pc, #12]	; (80002d0 <HAL_IncTick+0x20>)
 80002c2:	6013      	str	r3, [r2, #0]
 80002c4:	bf00      	nop
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bc80      	pop	{r7}
 80002ca:	4770      	bx	lr
 80002cc:	20000004 	.word	0x20000004
 80002d0:	2000011c 	.word	0x2000011c

080002d4 <HAL_GetTick>:
 80002d4:	b480      	push	{r7}
 80002d6:	af00      	add	r7, sp, #0
 80002d8:	4b02      	ldr	r3, [pc, #8]	; (80002e4 <HAL_GetTick+0x10>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	4618      	mov	r0, r3
 80002de:	46bd      	mov	sp, r7
 80002e0:	bc80      	pop	{r7}
 80002e2:	4770      	bx	lr
 80002e4:	2000011c 	.word	0x2000011c

080002e8 <HAL_Delay>:
 80002e8:	b580      	push	{r7, lr}
 80002ea:	b084      	sub	sp, #16
 80002ec:	af00      	add	r7, sp, #0
 80002ee:	6078      	str	r0, [r7, #4]
 80002f0:	f7ff fff0 	bl	80002d4 <HAL_GetTick>
 80002f4:	60b8      	str	r0, [r7, #8]
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	60fb      	str	r3, [r7, #12]
 80002fa:	68fb      	ldr	r3, [r7, #12]
 80002fc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000300:	d005      	beq.n	800030e <HAL_Delay+0x26>
 8000302:	4b09      	ldr	r3, [pc, #36]	; (8000328 <HAL_Delay+0x40>)
 8000304:	781b      	ldrb	r3, [r3, #0]
 8000306:	461a      	mov	r2, r3
 8000308:	68fb      	ldr	r3, [r7, #12]
 800030a:	4413      	add	r3, r2
 800030c:	60fb      	str	r3, [r7, #12]
 800030e:	bf00      	nop
 8000310:	f7ff ffe0 	bl	80002d4 <HAL_GetTick>
 8000314:	4602      	mov	r2, r0
 8000316:	68bb      	ldr	r3, [r7, #8]
 8000318:	1ad3      	subs	r3, r2, r3
 800031a:	68fa      	ldr	r2, [r7, #12]
 800031c:	429a      	cmp	r2, r3
 800031e:	d8f7      	bhi.n	8000310 <HAL_Delay+0x28>
 8000320:	bf00      	nop
 8000322:	3710      	adds	r7, #16
 8000324:	46bd      	mov	sp, r7
 8000326:	bd80      	pop	{r7, pc}
 8000328:	20000004 	.word	0x20000004

0800032c <NVIC_SetPriorityGrouping>:
 800032c:	b480      	push	{r7}
 800032e:	b085      	sub	sp, #20
 8000330:	af00      	add	r7, sp, #0
 8000332:	6078      	str	r0, [r7, #4]
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	f003 0307 	and.w	r3, r3, #7
 800033a:	60fb      	str	r3, [r7, #12]
 800033c:	4b0c      	ldr	r3, [pc, #48]	; (8000370 <NVIC_SetPriorityGrouping+0x44>)
 800033e:	68db      	ldr	r3, [r3, #12]
 8000340:	60bb      	str	r3, [r7, #8]
 8000342:	68ba      	ldr	r2, [r7, #8]
 8000344:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000348:	4013      	ands	r3, r2
 800034a:	60bb      	str	r3, [r7, #8]
 800034c:	68fb      	ldr	r3, [r7, #12]
 800034e:	021a      	lsls	r2, r3, #8
 8000350:	68bb      	ldr	r3, [r7, #8]
 8000352:	4313      	orrs	r3, r2
 8000354:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000358:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800035c:	60bb      	str	r3, [r7, #8]
 800035e:	4a04      	ldr	r2, [pc, #16]	; (8000370 <NVIC_SetPriorityGrouping+0x44>)
 8000360:	68bb      	ldr	r3, [r7, #8]
 8000362:	60d3      	str	r3, [r2, #12]
 8000364:	bf00      	nop
 8000366:	3714      	adds	r7, #20
 8000368:	46bd      	mov	sp, r7
 800036a:	bc80      	pop	{r7}
 800036c:	4770      	bx	lr
 800036e:	bf00      	nop
 8000370:	e000ed00 	.word	0xe000ed00

08000374 <NVIC_GetPriorityGrouping>:
 8000374:	b480      	push	{r7}
 8000376:	af00      	add	r7, sp, #0
 8000378:	4b04      	ldr	r3, [pc, #16]	; (800038c <NVIC_GetPriorityGrouping+0x18>)
 800037a:	68db      	ldr	r3, [r3, #12]
 800037c:	0a1b      	lsrs	r3, r3, #8
 800037e:	f003 0307 	and.w	r3, r3, #7
 8000382:	4618      	mov	r0, r3
 8000384:	46bd      	mov	sp, r7
 8000386:	bc80      	pop	{r7}
 8000388:	4770      	bx	lr
 800038a:	bf00      	nop
 800038c:	e000ed00 	.word	0xe000ed00

08000390 <NVIC_SetPriority>:
 8000390:	b480      	push	{r7}
 8000392:	b083      	sub	sp, #12
 8000394:	af00      	add	r7, sp, #0
 8000396:	4603      	mov	r3, r0
 8000398:	6039      	str	r1, [r7, #0]
 800039a:	71fb      	strb	r3, [r7, #7]
 800039c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80003a0:	2b00      	cmp	r3, #0
 80003a2:	da0b      	bge.n	80003bc <NVIC_SetPriority+0x2c>
 80003a4:	683b      	ldr	r3, [r7, #0]
 80003a6:	b2da      	uxtb	r2, r3
 80003a8:	490c      	ldr	r1, [pc, #48]	; (80003dc <NVIC_SetPriority+0x4c>)
 80003aa:	79fb      	ldrb	r3, [r7, #7]
 80003ac:	f003 030f 	and.w	r3, r3, #15
 80003b0:	3b04      	subs	r3, #4
 80003b2:	0112      	lsls	r2, r2, #4
 80003b4:	b2d2      	uxtb	r2, r2
 80003b6:	440b      	add	r3, r1
 80003b8:	761a      	strb	r2, [r3, #24]
 80003ba:	e009      	b.n	80003d0 <NVIC_SetPriority+0x40>
 80003bc:	683b      	ldr	r3, [r7, #0]
 80003be:	b2da      	uxtb	r2, r3
 80003c0:	4907      	ldr	r1, [pc, #28]	; (80003e0 <NVIC_SetPriority+0x50>)
 80003c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80003c6:	0112      	lsls	r2, r2, #4
 80003c8:	b2d2      	uxtb	r2, r2
 80003ca:	440b      	add	r3, r1
 80003cc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80003d0:	bf00      	nop
 80003d2:	370c      	adds	r7, #12
 80003d4:	46bd      	mov	sp, r7
 80003d6:	bc80      	pop	{r7}
 80003d8:	4770      	bx	lr
 80003da:	bf00      	nop
 80003dc:	e000ed00 	.word	0xe000ed00
 80003e0:	e000e100 	.word	0xe000e100

080003e4 <NVIC_EncodePriority>:
 80003e4:	b480      	push	{r7}
 80003e6:	b089      	sub	sp, #36	; 0x24
 80003e8:	af00      	add	r7, sp, #0
 80003ea:	60f8      	str	r0, [r7, #12]
 80003ec:	60b9      	str	r1, [r7, #8]
 80003ee:	607a      	str	r2, [r7, #4]
 80003f0:	68fb      	ldr	r3, [r7, #12]
 80003f2:	f003 0307 	and.w	r3, r3, #7
 80003f6:	61fb      	str	r3, [r7, #28]
 80003f8:	69fb      	ldr	r3, [r7, #28]
 80003fa:	f1c3 0307 	rsb	r3, r3, #7
 80003fe:	2b04      	cmp	r3, #4
 8000400:	bf28      	it	cs
 8000402:	2304      	movcs	r3, #4
 8000404:	61bb      	str	r3, [r7, #24]
 8000406:	69fb      	ldr	r3, [r7, #28]
 8000408:	3304      	adds	r3, #4
 800040a:	2b06      	cmp	r3, #6
 800040c:	d902      	bls.n	8000414 <NVIC_EncodePriority+0x30>
 800040e:	69fb      	ldr	r3, [r7, #28]
 8000410:	3b03      	subs	r3, #3
 8000412:	e000      	b.n	8000416 <NVIC_EncodePriority+0x32>
 8000414:	2300      	movs	r3, #0
 8000416:	617b      	str	r3, [r7, #20]
 8000418:	f04f 32ff 	mov.w	r2, #4294967295
 800041c:	69bb      	ldr	r3, [r7, #24]
 800041e:	fa02 f303 	lsl.w	r3, r2, r3
 8000422:	43da      	mvns	r2, r3
 8000424:	68bb      	ldr	r3, [r7, #8]
 8000426:	401a      	ands	r2, r3
 8000428:	697b      	ldr	r3, [r7, #20]
 800042a:	409a      	lsls	r2, r3
 800042c:	f04f 31ff 	mov.w	r1, #4294967295
 8000430:	697b      	ldr	r3, [r7, #20]
 8000432:	fa01 f303 	lsl.w	r3, r1, r3
 8000436:	43d9      	mvns	r1, r3
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	400b      	ands	r3, r1
 800043c:	4313      	orrs	r3, r2
 800043e:	4618      	mov	r0, r3
 8000440:	3724      	adds	r7, #36	; 0x24
 8000442:	46bd      	mov	sp, r7
 8000444:	bc80      	pop	{r7}
 8000446:	4770      	bx	lr

08000448 <SysTick_Config>:
 8000448:	b580      	push	{r7, lr}
 800044a:	b082      	sub	sp, #8
 800044c:	af00      	add	r7, sp, #0
 800044e:	6078      	str	r0, [r7, #4]
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	3b01      	subs	r3, #1
 8000454:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000458:	d301      	bcc.n	800045e <SysTick_Config+0x16>
 800045a:	2301      	movs	r3, #1
 800045c:	e00f      	b.n	800047e <SysTick_Config+0x36>
 800045e:	4a0a      	ldr	r2, [pc, #40]	; (8000488 <SysTick_Config+0x40>)
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	3b01      	subs	r3, #1
 8000464:	6053      	str	r3, [r2, #4]
 8000466:	210f      	movs	r1, #15
 8000468:	f04f 30ff 	mov.w	r0, #4294967295
 800046c:	f7ff ff90 	bl	8000390 <NVIC_SetPriority>
 8000470:	4b05      	ldr	r3, [pc, #20]	; (8000488 <SysTick_Config+0x40>)
 8000472:	2200      	movs	r2, #0
 8000474:	609a      	str	r2, [r3, #8]
 8000476:	4b04      	ldr	r3, [pc, #16]	; (8000488 <SysTick_Config+0x40>)
 8000478:	2207      	movs	r2, #7
 800047a:	601a      	str	r2, [r3, #0]
 800047c:	2300      	movs	r3, #0
 800047e:	4618      	mov	r0, r3
 8000480:	3708      	adds	r7, #8
 8000482:	46bd      	mov	sp, r7
 8000484:	bd80      	pop	{r7, pc}
 8000486:	bf00      	nop
 8000488:	e000e010 	.word	0xe000e010

0800048c <HAL_NVIC_SetPriorityGrouping>:
 800048c:	b580      	push	{r7, lr}
 800048e:	b082      	sub	sp, #8
 8000490:	af00      	add	r7, sp, #0
 8000492:	6078      	str	r0, [r7, #4]
 8000494:	6878      	ldr	r0, [r7, #4]
 8000496:	f7ff ff49 	bl	800032c <NVIC_SetPriorityGrouping>
 800049a:	bf00      	nop
 800049c:	3708      	adds	r7, #8
 800049e:	46bd      	mov	sp, r7
 80004a0:	bd80      	pop	{r7, pc}

080004a2 <HAL_NVIC_SetPriority>:
 80004a2:	b580      	push	{r7, lr}
 80004a4:	b086      	sub	sp, #24
 80004a6:	af00      	add	r7, sp, #0
 80004a8:	4603      	mov	r3, r0
 80004aa:	60b9      	str	r1, [r7, #8]
 80004ac:	607a      	str	r2, [r7, #4]
 80004ae:	73fb      	strb	r3, [r7, #15]
 80004b0:	2300      	movs	r3, #0
 80004b2:	617b      	str	r3, [r7, #20]
 80004b4:	f7ff ff5e 	bl	8000374 <NVIC_GetPriorityGrouping>
 80004b8:	6178      	str	r0, [r7, #20]
 80004ba:	687a      	ldr	r2, [r7, #4]
 80004bc:	68b9      	ldr	r1, [r7, #8]
 80004be:	6978      	ldr	r0, [r7, #20]
 80004c0:	f7ff ff90 	bl	80003e4 <NVIC_EncodePriority>
 80004c4:	4602      	mov	r2, r0
 80004c6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80004ca:	4611      	mov	r1, r2
 80004cc:	4618      	mov	r0, r3
 80004ce:	f7ff ff5f 	bl	8000390 <NVIC_SetPriority>
 80004d2:	bf00      	nop
 80004d4:	3718      	adds	r7, #24
 80004d6:	46bd      	mov	sp, r7
 80004d8:	bd80      	pop	{r7, pc}

080004da <HAL_SYSTICK_Config>:
 80004da:	b580      	push	{r7, lr}
 80004dc:	b082      	sub	sp, #8
 80004de:	af00      	add	r7, sp, #0
 80004e0:	6078      	str	r0, [r7, #4]
 80004e2:	6878      	ldr	r0, [r7, #4]
 80004e4:	f7ff ffb0 	bl	8000448 <SysTick_Config>
 80004e8:	4603      	mov	r3, r0
 80004ea:	4618      	mov	r0, r3
 80004ec:	3708      	adds	r7, #8
 80004ee:	46bd      	mov	sp, r7
 80004f0:	bd80      	pop	{r7, pc}
	...

080004f4 <HAL_RCC_OscConfig>:
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b086      	sub	sp, #24
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	6078      	str	r0, [r7, #4]
 80004fc:	2300      	movs	r3, #0
 80004fe:	613b      	str	r3, [r7, #16]
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	f003 0301 	and.w	r3, r3, #1
 8000508:	2b00      	cmp	r3, #0
 800050a:	f000 8087 	beq.w	800061c <HAL_RCC_OscConfig+0x128>
 800050e:	4b92      	ldr	r3, [pc, #584]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 8000510:	685b      	ldr	r3, [r3, #4]
 8000512:	f003 030c 	and.w	r3, r3, #12
 8000516:	2b04      	cmp	r3, #4
 8000518:	d00c      	beq.n	8000534 <HAL_RCC_OscConfig+0x40>
 800051a:	4b8f      	ldr	r3, [pc, #572]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 800051c:	685b      	ldr	r3, [r3, #4]
 800051e:	f003 030c 	and.w	r3, r3, #12
 8000522:	2b08      	cmp	r3, #8
 8000524:	d112      	bne.n	800054c <HAL_RCC_OscConfig+0x58>
 8000526:	4b8c      	ldr	r3, [pc, #560]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 8000528:	685b      	ldr	r3, [r3, #4]
 800052a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800052e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8000532:	d10b      	bne.n	800054c <HAL_RCC_OscConfig+0x58>
 8000534:	4b88      	ldr	r3, [pc, #544]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800053c:	2b00      	cmp	r3, #0
 800053e:	d06c      	beq.n	800061a <HAL_RCC_OscConfig+0x126>
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	685b      	ldr	r3, [r3, #4]
 8000544:	2b00      	cmp	r3, #0
 8000546:	d168      	bne.n	800061a <HAL_RCC_OscConfig+0x126>
 8000548:	2301      	movs	r3, #1
 800054a:	e22d      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	685b      	ldr	r3, [r3, #4]
 8000550:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8000554:	d106      	bne.n	8000564 <HAL_RCC_OscConfig+0x70>
 8000556:	4b80      	ldr	r3, [pc, #512]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	4a7f      	ldr	r2, [pc, #508]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 800055c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000560:	6013      	str	r3, [r2, #0]
 8000562:	e02e      	b.n	80005c2 <HAL_RCC_OscConfig+0xce>
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	685b      	ldr	r3, [r3, #4]
 8000568:	2b00      	cmp	r3, #0
 800056a:	d10c      	bne.n	8000586 <HAL_RCC_OscConfig+0x92>
 800056c:	4b7a      	ldr	r3, [pc, #488]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	4a79      	ldr	r2, [pc, #484]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 8000572:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000576:	6013      	str	r3, [r2, #0]
 8000578:	4b77      	ldr	r3, [pc, #476]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	4a76      	ldr	r2, [pc, #472]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 800057e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000582:	6013      	str	r3, [r2, #0]
 8000584:	e01d      	b.n	80005c2 <HAL_RCC_OscConfig+0xce>
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	685b      	ldr	r3, [r3, #4]
 800058a:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800058e:	d10c      	bne.n	80005aa <HAL_RCC_OscConfig+0xb6>
 8000590:	4b71      	ldr	r3, [pc, #452]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	4a70      	ldr	r2, [pc, #448]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 8000596:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800059a:	6013      	str	r3, [r2, #0]
 800059c:	4b6e      	ldr	r3, [pc, #440]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	4a6d      	ldr	r2, [pc, #436]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 80005a2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80005a6:	6013      	str	r3, [r2, #0]
 80005a8:	e00b      	b.n	80005c2 <HAL_RCC_OscConfig+0xce>
 80005aa:	4b6b      	ldr	r3, [pc, #428]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	4a6a      	ldr	r2, [pc, #424]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 80005b0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80005b4:	6013      	str	r3, [r2, #0]
 80005b6:	4b68      	ldr	r3, [pc, #416]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	4a67      	ldr	r2, [pc, #412]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 80005bc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80005c0:	6013      	str	r3, [r2, #0]
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	685b      	ldr	r3, [r3, #4]
 80005c6:	2b00      	cmp	r3, #0
 80005c8:	d013      	beq.n	80005f2 <HAL_RCC_OscConfig+0xfe>
 80005ca:	f7ff fe83 	bl	80002d4 <HAL_GetTick>
 80005ce:	6138      	str	r0, [r7, #16]
 80005d0:	e008      	b.n	80005e4 <HAL_RCC_OscConfig+0xf0>
 80005d2:	f7ff fe7f 	bl	80002d4 <HAL_GetTick>
 80005d6:	4602      	mov	r2, r0
 80005d8:	693b      	ldr	r3, [r7, #16]
 80005da:	1ad3      	subs	r3, r2, r3
 80005dc:	2b64      	cmp	r3, #100	; 0x64
 80005de:	d901      	bls.n	80005e4 <HAL_RCC_OscConfig+0xf0>
 80005e0:	2303      	movs	r3, #3
 80005e2:	e1e1      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 80005e4:	4b5c      	ldr	r3, [pc, #368]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80005ec:	2b00      	cmp	r3, #0
 80005ee:	d0f0      	beq.n	80005d2 <HAL_RCC_OscConfig+0xde>
 80005f0:	e014      	b.n	800061c <HAL_RCC_OscConfig+0x128>
 80005f2:	f7ff fe6f 	bl	80002d4 <HAL_GetTick>
 80005f6:	6138      	str	r0, [r7, #16]
 80005f8:	e008      	b.n	800060c <HAL_RCC_OscConfig+0x118>
 80005fa:	f7ff fe6b 	bl	80002d4 <HAL_GetTick>
 80005fe:	4602      	mov	r2, r0
 8000600:	693b      	ldr	r3, [r7, #16]
 8000602:	1ad3      	subs	r3, r2, r3
 8000604:	2b64      	cmp	r3, #100	; 0x64
 8000606:	d901      	bls.n	800060c <HAL_RCC_OscConfig+0x118>
 8000608:	2303      	movs	r3, #3
 800060a:	e1cd      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 800060c:	4b52      	ldr	r3, [pc, #328]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000614:	2b00      	cmp	r3, #0
 8000616:	d1f0      	bne.n	80005fa <HAL_RCC_OscConfig+0x106>
 8000618:	e000      	b.n	800061c <HAL_RCC_OscConfig+0x128>
 800061a:	bf00      	nop
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	f003 0302 	and.w	r3, r3, #2
 8000624:	2b00      	cmp	r3, #0
 8000626:	d063      	beq.n	80006f0 <HAL_RCC_OscConfig+0x1fc>
 8000628:	4b4b      	ldr	r3, [pc, #300]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 800062a:	685b      	ldr	r3, [r3, #4]
 800062c:	f003 030c 	and.w	r3, r3, #12
 8000630:	2b00      	cmp	r3, #0
 8000632:	d00b      	beq.n	800064c <HAL_RCC_OscConfig+0x158>
 8000634:	4b48      	ldr	r3, [pc, #288]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 8000636:	685b      	ldr	r3, [r3, #4]
 8000638:	f003 030c 	and.w	r3, r3, #12
 800063c:	2b08      	cmp	r3, #8
 800063e:	d11c      	bne.n	800067a <HAL_RCC_OscConfig+0x186>
 8000640:	4b45      	ldr	r3, [pc, #276]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 8000642:	685b      	ldr	r3, [r3, #4]
 8000644:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8000648:	2b00      	cmp	r3, #0
 800064a:	d116      	bne.n	800067a <HAL_RCC_OscConfig+0x186>
 800064c:	4b42      	ldr	r3, [pc, #264]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	f003 0302 	and.w	r3, r3, #2
 8000654:	2b00      	cmp	r3, #0
 8000656:	d005      	beq.n	8000664 <HAL_RCC_OscConfig+0x170>
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	691b      	ldr	r3, [r3, #16]
 800065c:	2b01      	cmp	r3, #1
 800065e:	d001      	beq.n	8000664 <HAL_RCC_OscConfig+0x170>
 8000660:	2301      	movs	r3, #1
 8000662:	e1a1      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 8000664:	4b3c      	ldr	r3, [pc, #240]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	695b      	ldr	r3, [r3, #20]
 8000670:	00db      	lsls	r3, r3, #3
 8000672:	4939      	ldr	r1, [pc, #228]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 8000674:	4313      	orrs	r3, r2
 8000676:	600b      	str	r3, [r1, #0]
 8000678:	e03a      	b.n	80006f0 <HAL_RCC_OscConfig+0x1fc>
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	691b      	ldr	r3, [r3, #16]
 800067e:	2b00      	cmp	r3, #0
 8000680:	d020      	beq.n	80006c4 <HAL_RCC_OscConfig+0x1d0>
 8000682:	4b36      	ldr	r3, [pc, #216]	; (800075c <HAL_RCC_OscConfig+0x268>)
 8000684:	2201      	movs	r2, #1
 8000686:	601a      	str	r2, [r3, #0]
 8000688:	f7ff fe24 	bl	80002d4 <HAL_GetTick>
 800068c:	6138      	str	r0, [r7, #16]
 800068e:	e008      	b.n	80006a2 <HAL_RCC_OscConfig+0x1ae>
 8000690:	f7ff fe20 	bl	80002d4 <HAL_GetTick>
 8000694:	4602      	mov	r2, r0
 8000696:	693b      	ldr	r3, [r7, #16]
 8000698:	1ad3      	subs	r3, r2, r3
 800069a:	2b02      	cmp	r3, #2
 800069c:	d901      	bls.n	80006a2 <HAL_RCC_OscConfig+0x1ae>
 800069e:	2303      	movs	r3, #3
 80006a0:	e182      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 80006a2:	4b2d      	ldr	r3, [pc, #180]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	f003 0302 	and.w	r3, r3, #2
 80006aa:	2b00      	cmp	r3, #0
 80006ac:	d0f0      	beq.n	8000690 <HAL_RCC_OscConfig+0x19c>
 80006ae:	4b2a      	ldr	r3, [pc, #168]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 80006b0:	681b      	ldr	r3, [r3, #0]
 80006b2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	695b      	ldr	r3, [r3, #20]
 80006ba:	00db      	lsls	r3, r3, #3
 80006bc:	4926      	ldr	r1, [pc, #152]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 80006be:	4313      	orrs	r3, r2
 80006c0:	600b      	str	r3, [r1, #0]
 80006c2:	e015      	b.n	80006f0 <HAL_RCC_OscConfig+0x1fc>
 80006c4:	4b25      	ldr	r3, [pc, #148]	; (800075c <HAL_RCC_OscConfig+0x268>)
 80006c6:	2200      	movs	r2, #0
 80006c8:	601a      	str	r2, [r3, #0]
 80006ca:	f7ff fe03 	bl	80002d4 <HAL_GetTick>
 80006ce:	6138      	str	r0, [r7, #16]
 80006d0:	e008      	b.n	80006e4 <HAL_RCC_OscConfig+0x1f0>
 80006d2:	f7ff fdff 	bl	80002d4 <HAL_GetTick>
 80006d6:	4602      	mov	r2, r0
 80006d8:	693b      	ldr	r3, [r7, #16]
 80006da:	1ad3      	subs	r3, r2, r3
 80006dc:	2b02      	cmp	r3, #2
 80006de:	d901      	bls.n	80006e4 <HAL_RCC_OscConfig+0x1f0>
 80006e0:	2303      	movs	r3, #3
 80006e2:	e161      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 80006e4:	4b1c      	ldr	r3, [pc, #112]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	f003 0302 	and.w	r3, r3, #2
 80006ec:	2b00      	cmp	r3, #0
 80006ee:	d1f0      	bne.n	80006d2 <HAL_RCC_OscConfig+0x1de>
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	681b      	ldr	r3, [r3, #0]
 80006f4:	f003 0308 	and.w	r3, r3, #8
 80006f8:	2b00      	cmp	r3, #0
 80006fa:	d039      	beq.n	8000770 <HAL_RCC_OscConfig+0x27c>
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	699b      	ldr	r3, [r3, #24]
 8000700:	2b00      	cmp	r3, #0
 8000702:	d019      	beq.n	8000738 <HAL_RCC_OscConfig+0x244>
 8000704:	4b16      	ldr	r3, [pc, #88]	; (8000760 <HAL_RCC_OscConfig+0x26c>)
 8000706:	2201      	movs	r2, #1
 8000708:	601a      	str	r2, [r3, #0]
 800070a:	f7ff fde3 	bl	80002d4 <HAL_GetTick>
 800070e:	6138      	str	r0, [r7, #16]
 8000710:	e008      	b.n	8000724 <HAL_RCC_OscConfig+0x230>
 8000712:	f7ff fddf 	bl	80002d4 <HAL_GetTick>
 8000716:	4602      	mov	r2, r0
 8000718:	693b      	ldr	r3, [r7, #16]
 800071a:	1ad3      	subs	r3, r2, r3
 800071c:	2b02      	cmp	r3, #2
 800071e:	d901      	bls.n	8000724 <HAL_RCC_OscConfig+0x230>
 8000720:	2303      	movs	r3, #3
 8000722:	e141      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 8000724:	4b0c      	ldr	r3, [pc, #48]	; (8000758 <HAL_RCC_OscConfig+0x264>)
 8000726:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000728:	f003 0302 	and.w	r3, r3, #2
 800072c:	2b00      	cmp	r3, #0
 800072e:	d0f0      	beq.n	8000712 <HAL_RCC_OscConfig+0x21e>
 8000730:	2001      	movs	r0, #1
 8000732:	f000 fab1 	bl	8000c98 <RCC_Delay>
 8000736:	e01b      	b.n	8000770 <HAL_RCC_OscConfig+0x27c>
 8000738:	4b09      	ldr	r3, [pc, #36]	; (8000760 <HAL_RCC_OscConfig+0x26c>)
 800073a:	2200      	movs	r2, #0
 800073c:	601a      	str	r2, [r3, #0]
 800073e:	f7ff fdc9 	bl	80002d4 <HAL_GetTick>
 8000742:	6138      	str	r0, [r7, #16]
 8000744:	e00e      	b.n	8000764 <HAL_RCC_OscConfig+0x270>
 8000746:	f7ff fdc5 	bl	80002d4 <HAL_GetTick>
 800074a:	4602      	mov	r2, r0
 800074c:	693b      	ldr	r3, [r7, #16]
 800074e:	1ad3      	subs	r3, r2, r3
 8000750:	2b02      	cmp	r3, #2
 8000752:	d907      	bls.n	8000764 <HAL_RCC_OscConfig+0x270>
 8000754:	2303      	movs	r3, #3
 8000756:	e127      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 8000758:	40021000 	.word	0x40021000
 800075c:	42420000 	.word	0x42420000
 8000760:	42420480 	.word	0x42420480
 8000764:	4b92      	ldr	r3, [pc, #584]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000766:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000768:	f003 0302 	and.w	r3, r3, #2
 800076c:	2b00      	cmp	r3, #0
 800076e:	d1ea      	bne.n	8000746 <HAL_RCC_OscConfig+0x252>
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	681b      	ldr	r3, [r3, #0]
 8000774:	f003 0304 	and.w	r3, r3, #4
 8000778:	2b00      	cmp	r3, #0
 800077a:	f000 80a6 	beq.w	80008ca <HAL_RCC_OscConfig+0x3d6>
 800077e:	2300      	movs	r3, #0
 8000780:	75fb      	strb	r3, [r7, #23]
 8000782:	4b8b      	ldr	r3, [pc, #556]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000784:	69db      	ldr	r3, [r3, #28]
 8000786:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800078a:	2b00      	cmp	r3, #0
 800078c:	d10d      	bne.n	80007aa <HAL_RCC_OscConfig+0x2b6>
 800078e:	4b88      	ldr	r3, [pc, #544]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000790:	69db      	ldr	r3, [r3, #28]
 8000792:	4a87      	ldr	r2, [pc, #540]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000794:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000798:	61d3      	str	r3, [r2, #28]
 800079a:	4b85      	ldr	r3, [pc, #532]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 800079c:	69db      	ldr	r3, [r3, #28]
 800079e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80007a2:	60fb      	str	r3, [r7, #12]
 80007a4:	68fb      	ldr	r3, [r7, #12]
 80007a6:	2301      	movs	r3, #1
 80007a8:	75fb      	strb	r3, [r7, #23]
 80007aa:	4b82      	ldr	r3, [pc, #520]	; (80009b4 <HAL_RCC_OscConfig+0x4c0>)
 80007ac:	681b      	ldr	r3, [r3, #0]
 80007ae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80007b2:	2b00      	cmp	r3, #0
 80007b4:	d118      	bne.n	80007e8 <HAL_RCC_OscConfig+0x2f4>
 80007b6:	4b7f      	ldr	r3, [pc, #508]	; (80009b4 <HAL_RCC_OscConfig+0x4c0>)
 80007b8:	681b      	ldr	r3, [r3, #0]
 80007ba:	4a7e      	ldr	r2, [pc, #504]	; (80009b4 <HAL_RCC_OscConfig+0x4c0>)
 80007bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80007c0:	6013      	str	r3, [r2, #0]
 80007c2:	f7ff fd87 	bl	80002d4 <HAL_GetTick>
 80007c6:	6138      	str	r0, [r7, #16]
 80007c8:	e008      	b.n	80007dc <HAL_RCC_OscConfig+0x2e8>
 80007ca:	f7ff fd83 	bl	80002d4 <HAL_GetTick>
 80007ce:	4602      	mov	r2, r0
 80007d0:	693b      	ldr	r3, [r7, #16]
 80007d2:	1ad3      	subs	r3, r2, r3
 80007d4:	2b64      	cmp	r3, #100	; 0x64
 80007d6:	d901      	bls.n	80007dc <HAL_RCC_OscConfig+0x2e8>
 80007d8:	2303      	movs	r3, #3
 80007da:	e0e5      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 80007dc:	4b75      	ldr	r3, [pc, #468]	; (80009b4 <HAL_RCC_OscConfig+0x4c0>)
 80007de:	681b      	ldr	r3, [r3, #0]
 80007e0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80007e4:	2b00      	cmp	r3, #0
 80007e6:	d0f0      	beq.n	80007ca <HAL_RCC_OscConfig+0x2d6>
 80007e8:	687b      	ldr	r3, [r7, #4]
 80007ea:	68db      	ldr	r3, [r3, #12]
 80007ec:	2b01      	cmp	r3, #1
 80007ee:	d106      	bne.n	80007fe <HAL_RCC_OscConfig+0x30a>
 80007f0:	4b6f      	ldr	r3, [pc, #444]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 80007f2:	6a1b      	ldr	r3, [r3, #32]
 80007f4:	4a6e      	ldr	r2, [pc, #440]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 80007f6:	f043 0301 	orr.w	r3, r3, #1
 80007fa:	6213      	str	r3, [r2, #32]
 80007fc:	e02d      	b.n	800085a <HAL_RCC_OscConfig+0x366>
 80007fe:	687b      	ldr	r3, [r7, #4]
 8000800:	68db      	ldr	r3, [r3, #12]
 8000802:	2b00      	cmp	r3, #0
 8000804:	d10c      	bne.n	8000820 <HAL_RCC_OscConfig+0x32c>
 8000806:	4b6a      	ldr	r3, [pc, #424]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000808:	6a1b      	ldr	r3, [r3, #32]
 800080a:	4a69      	ldr	r2, [pc, #420]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 800080c:	f023 0301 	bic.w	r3, r3, #1
 8000810:	6213      	str	r3, [r2, #32]
 8000812:	4b67      	ldr	r3, [pc, #412]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000814:	6a1b      	ldr	r3, [r3, #32]
 8000816:	4a66      	ldr	r2, [pc, #408]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000818:	f023 0304 	bic.w	r3, r3, #4
 800081c:	6213      	str	r3, [r2, #32]
 800081e:	e01c      	b.n	800085a <HAL_RCC_OscConfig+0x366>
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	68db      	ldr	r3, [r3, #12]
 8000824:	2b05      	cmp	r3, #5
 8000826:	d10c      	bne.n	8000842 <HAL_RCC_OscConfig+0x34e>
 8000828:	4b61      	ldr	r3, [pc, #388]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 800082a:	6a1b      	ldr	r3, [r3, #32]
 800082c:	4a60      	ldr	r2, [pc, #384]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 800082e:	f043 0304 	orr.w	r3, r3, #4
 8000832:	6213      	str	r3, [r2, #32]
 8000834:	4b5e      	ldr	r3, [pc, #376]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000836:	6a1b      	ldr	r3, [r3, #32]
 8000838:	4a5d      	ldr	r2, [pc, #372]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 800083a:	f043 0301 	orr.w	r3, r3, #1
 800083e:	6213      	str	r3, [r2, #32]
 8000840:	e00b      	b.n	800085a <HAL_RCC_OscConfig+0x366>
 8000842:	4b5b      	ldr	r3, [pc, #364]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000844:	6a1b      	ldr	r3, [r3, #32]
 8000846:	4a5a      	ldr	r2, [pc, #360]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000848:	f023 0301 	bic.w	r3, r3, #1
 800084c:	6213      	str	r3, [r2, #32]
 800084e:	4b58      	ldr	r3, [pc, #352]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000850:	6a1b      	ldr	r3, [r3, #32]
 8000852:	4a57      	ldr	r2, [pc, #348]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000854:	f023 0304 	bic.w	r3, r3, #4
 8000858:	6213      	str	r3, [r2, #32]
 800085a:	687b      	ldr	r3, [r7, #4]
 800085c:	68db      	ldr	r3, [r3, #12]
 800085e:	2b00      	cmp	r3, #0
 8000860:	d015      	beq.n	800088e <HAL_RCC_OscConfig+0x39a>
 8000862:	f7ff fd37 	bl	80002d4 <HAL_GetTick>
 8000866:	6138      	str	r0, [r7, #16]
 8000868:	e00a      	b.n	8000880 <HAL_RCC_OscConfig+0x38c>
 800086a:	f7ff fd33 	bl	80002d4 <HAL_GetTick>
 800086e:	4602      	mov	r2, r0
 8000870:	693b      	ldr	r3, [r7, #16]
 8000872:	1ad3      	subs	r3, r2, r3
 8000874:	f241 3288 	movw	r2, #5000	; 0x1388
 8000878:	4293      	cmp	r3, r2
 800087a:	d901      	bls.n	8000880 <HAL_RCC_OscConfig+0x38c>
 800087c:	2303      	movs	r3, #3
 800087e:	e093      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 8000880:	4b4b      	ldr	r3, [pc, #300]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000882:	6a1b      	ldr	r3, [r3, #32]
 8000884:	f003 0302 	and.w	r3, r3, #2
 8000888:	2b00      	cmp	r3, #0
 800088a:	d0ee      	beq.n	800086a <HAL_RCC_OscConfig+0x376>
 800088c:	e014      	b.n	80008b8 <HAL_RCC_OscConfig+0x3c4>
 800088e:	f7ff fd21 	bl	80002d4 <HAL_GetTick>
 8000892:	6138      	str	r0, [r7, #16]
 8000894:	e00a      	b.n	80008ac <HAL_RCC_OscConfig+0x3b8>
 8000896:	f7ff fd1d 	bl	80002d4 <HAL_GetTick>
 800089a:	4602      	mov	r2, r0
 800089c:	693b      	ldr	r3, [r7, #16]
 800089e:	1ad3      	subs	r3, r2, r3
 80008a0:	f241 3288 	movw	r2, #5000	; 0x1388
 80008a4:	4293      	cmp	r3, r2
 80008a6:	d901      	bls.n	80008ac <HAL_RCC_OscConfig+0x3b8>
 80008a8:	2303      	movs	r3, #3
 80008aa:	e07d      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 80008ac:	4b40      	ldr	r3, [pc, #256]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 80008ae:	6a1b      	ldr	r3, [r3, #32]
 80008b0:	f003 0302 	and.w	r3, r3, #2
 80008b4:	2b00      	cmp	r3, #0
 80008b6:	d1ee      	bne.n	8000896 <HAL_RCC_OscConfig+0x3a2>
 80008b8:	7dfb      	ldrb	r3, [r7, #23]
 80008ba:	2b01      	cmp	r3, #1
 80008bc:	d105      	bne.n	80008ca <HAL_RCC_OscConfig+0x3d6>
 80008be:	4b3c      	ldr	r3, [pc, #240]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 80008c0:	69db      	ldr	r3, [r3, #28]
 80008c2:	4a3b      	ldr	r2, [pc, #236]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 80008c4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80008c8:	61d3      	str	r3, [r2, #28]
 80008ca:	687b      	ldr	r3, [r7, #4]
 80008cc:	69db      	ldr	r3, [r3, #28]
 80008ce:	2b00      	cmp	r3, #0
 80008d0:	d069      	beq.n	80009a6 <HAL_RCC_OscConfig+0x4b2>
 80008d2:	4b37      	ldr	r3, [pc, #220]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 80008d4:	685b      	ldr	r3, [r3, #4]
 80008d6:	f003 030c 	and.w	r3, r3, #12
 80008da:	2b08      	cmp	r3, #8
 80008dc:	d061      	beq.n	80009a2 <HAL_RCC_OscConfig+0x4ae>
 80008de:	687b      	ldr	r3, [r7, #4]
 80008e0:	69db      	ldr	r3, [r3, #28]
 80008e2:	2b02      	cmp	r3, #2
 80008e4:	d146      	bne.n	8000974 <HAL_RCC_OscConfig+0x480>
 80008e6:	4b34      	ldr	r3, [pc, #208]	; (80009b8 <HAL_RCC_OscConfig+0x4c4>)
 80008e8:	2200      	movs	r2, #0
 80008ea:	601a      	str	r2, [r3, #0]
 80008ec:	f7ff fcf2 	bl	80002d4 <HAL_GetTick>
 80008f0:	6138      	str	r0, [r7, #16]
 80008f2:	e008      	b.n	8000906 <HAL_RCC_OscConfig+0x412>
 80008f4:	f7ff fcee 	bl	80002d4 <HAL_GetTick>
 80008f8:	4602      	mov	r2, r0
 80008fa:	693b      	ldr	r3, [r7, #16]
 80008fc:	1ad3      	subs	r3, r2, r3
 80008fe:	2b02      	cmp	r3, #2
 8000900:	d901      	bls.n	8000906 <HAL_RCC_OscConfig+0x412>
 8000902:	2303      	movs	r3, #3
 8000904:	e050      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 8000906:	4b2a      	ldr	r3, [pc, #168]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000908:	681b      	ldr	r3, [r3, #0]
 800090a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800090e:	2b00      	cmp	r3, #0
 8000910:	d1f0      	bne.n	80008f4 <HAL_RCC_OscConfig+0x400>
 8000912:	687b      	ldr	r3, [r7, #4]
 8000914:	6a1b      	ldr	r3, [r3, #32]
 8000916:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800091a:	d108      	bne.n	800092e <HAL_RCC_OscConfig+0x43a>
 800091c:	4b24      	ldr	r3, [pc, #144]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 800091e:	685b      	ldr	r3, [r3, #4]
 8000920:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8000924:	687b      	ldr	r3, [r7, #4]
 8000926:	689b      	ldr	r3, [r3, #8]
 8000928:	4921      	ldr	r1, [pc, #132]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 800092a:	4313      	orrs	r3, r2
 800092c:	604b      	str	r3, [r1, #4]
 800092e:	4b20      	ldr	r3, [pc, #128]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000930:	685b      	ldr	r3, [r3, #4]
 8000932:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8000936:	687b      	ldr	r3, [r7, #4]
 8000938:	6a19      	ldr	r1, [r3, #32]
 800093a:	687b      	ldr	r3, [r7, #4]
 800093c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800093e:	430b      	orrs	r3, r1
 8000940:	491b      	ldr	r1, [pc, #108]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000942:	4313      	orrs	r3, r2
 8000944:	604b      	str	r3, [r1, #4]
 8000946:	4b1c      	ldr	r3, [pc, #112]	; (80009b8 <HAL_RCC_OscConfig+0x4c4>)
 8000948:	2201      	movs	r2, #1
 800094a:	601a      	str	r2, [r3, #0]
 800094c:	f7ff fcc2 	bl	80002d4 <HAL_GetTick>
 8000950:	6138      	str	r0, [r7, #16]
 8000952:	e008      	b.n	8000966 <HAL_RCC_OscConfig+0x472>
 8000954:	f7ff fcbe 	bl	80002d4 <HAL_GetTick>
 8000958:	4602      	mov	r2, r0
 800095a:	693b      	ldr	r3, [r7, #16]
 800095c:	1ad3      	subs	r3, r2, r3
 800095e:	2b02      	cmp	r3, #2
 8000960:	d901      	bls.n	8000966 <HAL_RCC_OscConfig+0x472>
 8000962:	2303      	movs	r3, #3
 8000964:	e020      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 8000966:	4b12      	ldr	r3, [pc, #72]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000968:	681b      	ldr	r3, [r3, #0]
 800096a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800096e:	2b00      	cmp	r3, #0
 8000970:	d0f0      	beq.n	8000954 <HAL_RCC_OscConfig+0x460>
 8000972:	e018      	b.n	80009a6 <HAL_RCC_OscConfig+0x4b2>
 8000974:	4b10      	ldr	r3, [pc, #64]	; (80009b8 <HAL_RCC_OscConfig+0x4c4>)
 8000976:	2200      	movs	r2, #0
 8000978:	601a      	str	r2, [r3, #0]
 800097a:	f7ff fcab 	bl	80002d4 <HAL_GetTick>
 800097e:	6138      	str	r0, [r7, #16]
 8000980:	e008      	b.n	8000994 <HAL_RCC_OscConfig+0x4a0>
 8000982:	f7ff fca7 	bl	80002d4 <HAL_GetTick>
 8000986:	4602      	mov	r2, r0
 8000988:	693b      	ldr	r3, [r7, #16]
 800098a:	1ad3      	subs	r3, r2, r3
 800098c:	2b02      	cmp	r3, #2
 800098e:	d901      	bls.n	8000994 <HAL_RCC_OscConfig+0x4a0>
 8000990:	2303      	movs	r3, #3
 8000992:	e009      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 8000994:	4b06      	ldr	r3, [pc, #24]	; (80009b0 <HAL_RCC_OscConfig+0x4bc>)
 8000996:	681b      	ldr	r3, [r3, #0]
 8000998:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800099c:	2b00      	cmp	r3, #0
 800099e:	d1f0      	bne.n	8000982 <HAL_RCC_OscConfig+0x48e>
 80009a0:	e001      	b.n	80009a6 <HAL_RCC_OscConfig+0x4b2>
 80009a2:	2301      	movs	r3, #1
 80009a4:	e000      	b.n	80009a8 <HAL_RCC_OscConfig+0x4b4>
 80009a6:	2300      	movs	r3, #0
 80009a8:	4618      	mov	r0, r3
 80009aa:	3718      	adds	r7, #24
 80009ac:	46bd      	mov	sp, r7
 80009ae:	bd80      	pop	{r7, pc}
 80009b0:	40021000 	.word	0x40021000
 80009b4:	40007000 	.word	0x40007000
 80009b8:	42420060 	.word	0x42420060

080009bc <HAL_RCC_ClockConfig>:
 80009bc:	b580      	push	{r7, lr}
 80009be:	b084      	sub	sp, #16
 80009c0:	af00      	add	r7, sp, #0
 80009c2:	6078      	str	r0, [r7, #4]
 80009c4:	6039      	str	r1, [r7, #0]
 80009c6:	2300      	movs	r3, #0
 80009c8:	60fb      	str	r3, [r7, #12]
 80009ca:	4b7e      	ldr	r3, [pc, #504]	; (8000bc4 <HAL_RCC_ClockConfig+0x208>)
 80009cc:	681b      	ldr	r3, [r3, #0]
 80009ce:	f003 0307 	and.w	r3, r3, #7
 80009d2:	683a      	ldr	r2, [r7, #0]
 80009d4:	429a      	cmp	r2, r3
 80009d6:	d910      	bls.n	80009fa <HAL_RCC_ClockConfig+0x3e>
 80009d8:	4b7a      	ldr	r3, [pc, #488]	; (8000bc4 <HAL_RCC_ClockConfig+0x208>)
 80009da:	681b      	ldr	r3, [r3, #0]
 80009dc:	f023 0207 	bic.w	r2, r3, #7
 80009e0:	4978      	ldr	r1, [pc, #480]	; (8000bc4 <HAL_RCC_ClockConfig+0x208>)
 80009e2:	683b      	ldr	r3, [r7, #0]
 80009e4:	4313      	orrs	r3, r2
 80009e6:	600b      	str	r3, [r1, #0]
 80009e8:	4b76      	ldr	r3, [pc, #472]	; (8000bc4 <HAL_RCC_ClockConfig+0x208>)
 80009ea:	681b      	ldr	r3, [r3, #0]
 80009ec:	f003 0307 	and.w	r3, r3, #7
 80009f0:	683a      	ldr	r2, [r7, #0]
 80009f2:	429a      	cmp	r2, r3
 80009f4:	d001      	beq.n	80009fa <HAL_RCC_ClockConfig+0x3e>
 80009f6:	2301      	movs	r3, #1
 80009f8:	e0e0      	b.n	8000bbc <HAL_RCC_ClockConfig+0x200>
 80009fa:	687b      	ldr	r3, [r7, #4]
 80009fc:	681b      	ldr	r3, [r3, #0]
 80009fe:	f003 0302 	and.w	r3, r3, #2
 8000a02:	2b00      	cmp	r3, #0
 8000a04:	d020      	beq.n	8000a48 <HAL_RCC_ClockConfig+0x8c>
 8000a06:	687b      	ldr	r3, [r7, #4]
 8000a08:	681b      	ldr	r3, [r3, #0]
 8000a0a:	f003 0304 	and.w	r3, r3, #4
 8000a0e:	2b00      	cmp	r3, #0
 8000a10:	d005      	beq.n	8000a1e <HAL_RCC_ClockConfig+0x62>
 8000a12:	4b6d      	ldr	r3, [pc, #436]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000a14:	685b      	ldr	r3, [r3, #4]
 8000a16:	4a6c      	ldr	r2, [pc, #432]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000a18:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8000a1c:	6053      	str	r3, [r2, #4]
 8000a1e:	687b      	ldr	r3, [r7, #4]
 8000a20:	681b      	ldr	r3, [r3, #0]
 8000a22:	f003 0308 	and.w	r3, r3, #8
 8000a26:	2b00      	cmp	r3, #0
 8000a28:	d005      	beq.n	8000a36 <HAL_RCC_ClockConfig+0x7a>
 8000a2a:	4b67      	ldr	r3, [pc, #412]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000a2c:	685b      	ldr	r3, [r3, #4]
 8000a2e:	4a66      	ldr	r2, [pc, #408]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000a30:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8000a34:	6053      	str	r3, [r2, #4]
 8000a36:	4b64      	ldr	r3, [pc, #400]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000a38:	685b      	ldr	r3, [r3, #4]
 8000a3a:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8000a3e:	687b      	ldr	r3, [r7, #4]
 8000a40:	689b      	ldr	r3, [r3, #8]
 8000a42:	4961      	ldr	r1, [pc, #388]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000a44:	4313      	orrs	r3, r2
 8000a46:	604b      	str	r3, [r1, #4]
 8000a48:	687b      	ldr	r3, [r7, #4]
 8000a4a:	681b      	ldr	r3, [r3, #0]
 8000a4c:	f003 0301 	and.w	r3, r3, #1
 8000a50:	2b00      	cmp	r3, #0
 8000a52:	d06a      	beq.n	8000b2a <HAL_RCC_ClockConfig+0x16e>
 8000a54:	687b      	ldr	r3, [r7, #4]
 8000a56:	685b      	ldr	r3, [r3, #4]
 8000a58:	2b01      	cmp	r3, #1
 8000a5a:	d107      	bne.n	8000a6c <HAL_RCC_ClockConfig+0xb0>
 8000a5c:	4b5a      	ldr	r3, [pc, #360]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000a5e:	681b      	ldr	r3, [r3, #0]
 8000a60:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000a64:	2b00      	cmp	r3, #0
 8000a66:	d115      	bne.n	8000a94 <HAL_RCC_ClockConfig+0xd8>
 8000a68:	2301      	movs	r3, #1
 8000a6a:	e0a7      	b.n	8000bbc <HAL_RCC_ClockConfig+0x200>
 8000a6c:	687b      	ldr	r3, [r7, #4]
 8000a6e:	685b      	ldr	r3, [r3, #4]
 8000a70:	2b02      	cmp	r3, #2
 8000a72:	d107      	bne.n	8000a84 <HAL_RCC_ClockConfig+0xc8>
 8000a74:	4b54      	ldr	r3, [pc, #336]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000a76:	681b      	ldr	r3, [r3, #0]
 8000a78:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000a7c:	2b00      	cmp	r3, #0
 8000a7e:	d109      	bne.n	8000a94 <HAL_RCC_ClockConfig+0xd8>
 8000a80:	2301      	movs	r3, #1
 8000a82:	e09b      	b.n	8000bbc <HAL_RCC_ClockConfig+0x200>
 8000a84:	4b50      	ldr	r3, [pc, #320]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000a86:	681b      	ldr	r3, [r3, #0]
 8000a88:	f003 0302 	and.w	r3, r3, #2
 8000a8c:	2b00      	cmp	r3, #0
 8000a8e:	d101      	bne.n	8000a94 <HAL_RCC_ClockConfig+0xd8>
 8000a90:	2301      	movs	r3, #1
 8000a92:	e093      	b.n	8000bbc <HAL_RCC_ClockConfig+0x200>
 8000a94:	4b4c      	ldr	r3, [pc, #304]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000a96:	685b      	ldr	r3, [r3, #4]
 8000a98:	f023 0203 	bic.w	r2, r3, #3
 8000a9c:	687b      	ldr	r3, [r7, #4]
 8000a9e:	685b      	ldr	r3, [r3, #4]
 8000aa0:	4949      	ldr	r1, [pc, #292]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000aa2:	4313      	orrs	r3, r2
 8000aa4:	604b      	str	r3, [r1, #4]
 8000aa6:	f7ff fc15 	bl	80002d4 <HAL_GetTick>
 8000aaa:	60f8      	str	r0, [r7, #12]
 8000aac:	687b      	ldr	r3, [r7, #4]
 8000aae:	685b      	ldr	r3, [r3, #4]
 8000ab0:	2b01      	cmp	r3, #1
 8000ab2:	d112      	bne.n	8000ada <HAL_RCC_ClockConfig+0x11e>
 8000ab4:	e00a      	b.n	8000acc <HAL_RCC_ClockConfig+0x110>
 8000ab6:	f7ff fc0d 	bl	80002d4 <HAL_GetTick>
 8000aba:	4602      	mov	r2, r0
 8000abc:	68fb      	ldr	r3, [r7, #12]
 8000abe:	1ad3      	subs	r3, r2, r3
 8000ac0:	f241 3288 	movw	r2, #5000	; 0x1388
 8000ac4:	4293      	cmp	r3, r2
 8000ac6:	d901      	bls.n	8000acc <HAL_RCC_ClockConfig+0x110>
 8000ac8:	2303      	movs	r3, #3
 8000aca:	e077      	b.n	8000bbc <HAL_RCC_ClockConfig+0x200>
 8000acc:	4b3e      	ldr	r3, [pc, #248]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000ace:	685b      	ldr	r3, [r3, #4]
 8000ad0:	f003 030c 	and.w	r3, r3, #12
 8000ad4:	2b04      	cmp	r3, #4
 8000ad6:	d1ee      	bne.n	8000ab6 <HAL_RCC_ClockConfig+0xfa>
 8000ad8:	e027      	b.n	8000b2a <HAL_RCC_ClockConfig+0x16e>
 8000ada:	687b      	ldr	r3, [r7, #4]
 8000adc:	685b      	ldr	r3, [r3, #4]
 8000ade:	2b02      	cmp	r3, #2
 8000ae0:	d11d      	bne.n	8000b1e <HAL_RCC_ClockConfig+0x162>
 8000ae2:	e00a      	b.n	8000afa <HAL_RCC_ClockConfig+0x13e>
 8000ae4:	f7ff fbf6 	bl	80002d4 <HAL_GetTick>
 8000ae8:	4602      	mov	r2, r0
 8000aea:	68fb      	ldr	r3, [r7, #12]
 8000aec:	1ad3      	subs	r3, r2, r3
 8000aee:	f241 3288 	movw	r2, #5000	; 0x1388
 8000af2:	4293      	cmp	r3, r2
 8000af4:	d901      	bls.n	8000afa <HAL_RCC_ClockConfig+0x13e>
 8000af6:	2303      	movs	r3, #3
 8000af8:	e060      	b.n	8000bbc <HAL_RCC_ClockConfig+0x200>
 8000afa:	4b33      	ldr	r3, [pc, #204]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000afc:	685b      	ldr	r3, [r3, #4]
 8000afe:	f003 030c 	and.w	r3, r3, #12
 8000b02:	2b08      	cmp	r3, #8
 8000b04:	d1ee      	bne.n	8000ae4 <HAL_RCC_ClockConfig+0x128>
 8000b06:	e010      	b.n	8000b2a <HAL_RCC_ClockConfig+0x16e>
 8000b08:	f7ff fbe4 	bl	80002d4 <HAL_GetTick>
 8000b0c:	4602      	mov	r2, r0
 8000b0e:	68fb      	ldr	r3, [r7, #12]
 8000b10:	1ad3      	subs	r3, r2, r3
 8000b12:	f241 3288 	movw	r2, #5000	; 0x1388
 8000b16:	4293      	cmp	r3, r2
 8000b18:	d901      	bls.n	8000b1e <HAL_RCC_ClockConfig+0x162>
 8000b1a:	2303      	movs	r3, #3
 8000b1c:	e04e      	b.n	8000bbc <HAL_RCC_ClockConfig+0x200>
 8000b1e:	4b2a      	ldr	r3, [pc, #168]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000b20:	685b      	ldr	r3, [r3, #4]
 8000b22:	f003 030c 	and.w	r3, r3, #12
 8000b26:	2b00      	cmp	r3, #0
 8000b28:	d1ee      	bne.n	8000b08 <HAL_RCC_ClockConfig+0x14c>
 8000b2a:	4b26      	ldr	r3, [pc, #152]	; (8000bc4 <HAL_RCC_ClockConfig+0x208>)
 8000b2c:	681b      	ldr	r3, [r3, #0]
 8000b2e:	f003 0307 	and.w	r3, r3, #7
 8000b32:	683a      	ldr	r2, [r7, #0]
 8000b34:	429a      	cmp	r2, r3
 8000b36:	d210      	bcs.n	8000b5a <HAL_RCC_ClockConfig+0x19e>
 8000b38:	4b22      	ldr	r3, [pc, #136]	; (8000bc4 <HAL_RCC_ClockConfig+0x208>)
 8000b3a:	681b      	ldr	r3, [r3, #0]
 8000b3c:	f023 0207 	bic.w	r2, r3, #7
 8000b40:	4920      	ldr	r1, [pc, #128]	; (8000bc4 <HAL_RCC_ClockConfig+0x208>)
 8000b42:	683b      	ldr	r3, [r7, #0]
 8000b44:	4313      	orrs	r3, r2
 8000b46:	600b      	str	r3, [r1, #0]
 8000b48:	4b1e      	ldr	r3, [pc, #120]	; (8000bc4 <HAL_RCC_ClockConfig+0x208>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	f003 0307 	and.w	r3, r3, #7
 8000b50:	683a      	ldr	r2, [r7, #0]
 8000b52:	429a      	cmp	r2, r3
 8000b54:	d001      	beq.n	8000b5a <HAL_RCC_ClockConfig+0x19e>
 8000b56:	2301      	movs	r3, #1
 8000b58:	e030      	b.n	8000bbc <HAL_RCC_ClockConfig+0x200>
 8000b5a:	687b      	ldr	r3, [r7, #4]
 8000b5c:	681b      	ldr	r3, [r3, #0]
 8000b5e:	f003 0304 	and.w	r3, r3, #4
 8000b62:	2b00      	cmp	r3, #0
 8000b64:	d008      	beq.n	8000b78 <HAL_RCC_ClockConfig+0x1bc>
 8000b66:	4b18      	ldr	r3, [pc, #96]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000b68:	685b      	ldr	r3, [r3, #4]
 8000b6a:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8000b6e:	687b      	ldr	r3, [r7, #4]
 8000b70:	68db      	ldr	r3, [r3, #12]
 8000b72:	4915      	ldr	r1, [pc, #84]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000b74:	4313      	orrs	r3, r2
 8000b76:	604b      	str	r3, [r1, #4]
 8000b78:	687b      	ldr	r3, [r7, #4]
 8000b7a:	681b      	ldr	r3, [r3, #0]
 8000b7c:	f003 0308 	and.w	r3, r3, #8
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	d009      	beq.n	8000b98 <HAL_RCC_ClockConfig+0x1dc>
 8000b84:	4b10      	ldr	r3, [pc, #64]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000b86:	685b      	ldr	r3, [r3, #4]
 8000b88:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8000b8c:	687b      	ldr	r3, [r7, #4]
 8000b8e:	691b      	ldr	r3, [r3, #16]
 8000b90:	00db      	lsls	r3, r3, #3
 8000b92:	490d      	ldr	r1, [pc, #52]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000b94:	4313      	orrs	r3, r2
 8000b96:	604b      	str	r3, [r1, #4]
 8000b98:	f000 f81c 	bl	8000bd4 <HAL_RCC_GetSysClockFreq>
 8000b9c:	4601      	mov	r1, r0
 8000b9e:	4b0a      	ldr	r3, [pc, #40]	; (8000bc8 <HAL_RCC_ClockConfig+0x20c>)
 8000ba0:	685b      	ldr	r3, [r3, #4]
 8000ba2:	091b      	lsrs	r3, r3, #4
 8000ba4:	f003 030f 	and.w	r3, r3, #15
 8000ba8:	4a08      	ldr	r2, [pc, #32]	; (8000bcc <HAL_RCC_ClockConfig+0x210>)
 8000baa:	5cd3      	ldrb	r3, [r2, r3]
 8000bac:	fa21 f303 	lsr.w	r3, r1, r3
 8000bb0:	4a07      	ldr	r2, [pc, #28]	; (8000bd0 <HAL_RCC_ClockConfig+0x214>)
 8000bb2:	6013      	str	r3, [r2, #0]
 8000bb4:	2000      	movs	r0, #0
 8000bb6:	f7ff fb4b 	bl	8000250 <HAL_InitTick>
 8000bba:	2300      	movs	r3, #0
 8000bbc:	4618      	mov	r0, r3
 8000bbe:	3710      	adds	r7, #16
 8000bc0:	46bd      	mov	sp, r7
 8000bc2:	bd80      	pop	{r7, pc}
 8000bc4:	40022000 	.word	0x40022000
 8000bc8:	40021000 	.word	0x40021000
 8000bcc:	0800283c 	.word	0x0800283c
 8000bd0:	20000088 	.word	0x20000088

08000bd4 <HAL_RCC_GetSysClockFreq>:
 8000bd4:	b490      	push	{r4, r7}
 8000bd6:	b08a      	sub	sp, #40	; 0x28
 8000bd8:	af00      	add	r7, sp, #0
 8000bda:	4b2a      	ldr	r3, [pc, #168]	; (8000c84 <HAL_RCC_GetSysClockFreq+0xb0>)
 8000bdc:	1d3c      	adds	r4, r7, #4
 8000bde:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000be0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8000be4:	4b28      	ldr	r3, [pc, #160]	; (8000c88 <HAL_RCC_GetSysClockFreq+0xb4>)
 8000be6:	881b      	ldrh	r3, [r3, #0]
 8000be8:	803b      	strh	r3, [r7, #0]
 8000bea:	2300      	movs	r3, #0
 8000bec:	61fb      	str	r3, [r7, #28]
 8000bee:	2300      	movs	r3, #0
 8000bf0:	61bb      	str	r3, [r7, #24]
 8000bf2:	2300      	movs	r3, #0
 8000bf4:	627b      	str	r3, [r7, #36]	; 0x24
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	617b      	str	r3, [r7, #20]
 8000bfa:	2300      	movs	r3, #0
 8000bfc:	623b      	str	r3, [r7, #32]
 8000bfe:	4b23      	ldr	r3, [pc, #140]	; (8000c8c <HAL_RCC_GetSysClockFreq+0xb8>)
 8000c00:	685b      	ldr	r3, [r3, #4]
 8000c02:	61fb      	str	r3, [r7, #28]
 8000c04:	69fb      	ldr	r3, [r7, #28]
 8000c06:	f003 030c 	and.w	r3, r3, #12
 8000c0a:	2b04      	cmp	r3, #4
 8000c0c:	d002      	beq.n	8000c14 <HAL_RCC_GetSysClockFreq+0x40>
 8000c0e:	2b08      	cmp	r3, #8
 8000c10:	d003      	beq.n	8000c1a <HAL_RCC_GetSysClockFreq+0x46>
 8000c12:	e02d      	b.n	8000c70 <HAL_RCC_GetSysClockFreq+0x9c>
 8000c14:	4b1e      	ldr	r3, [pc, #120]	; (8000c90 <HAL_RCC_GetSysClockFreq+0xbc>)
 8000c16:	623b      	str	r3, [r7, #32]
 8000c18:	e02d      	b.n	8000c76 <HAL_RCC_GetSysClockFreq+0xa2>
 8000c1a:	69fb      	ldr	r3, [r7, #28]
 8000c1c:	0c9b      	lsrs	r3, r3, #18
 8000c1e:	f003 030f 	and.w	r3, r3, #15
 8000c22:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8000c26:	4413      	add	r3, r2
 8000c28:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8000c2c:	617b      	str	r3, [r7, #20]
 8000c2e:	69fb      	ldr	r3, [r7, #28]
 8000c30:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8000c34:	2b00      	cmp	r3, #0
 8000c36:	d013      	beq.n	8000c60 <HAL_RCC_GetSysClockFreq+0x8c>
 8000c38:	4b14      	ldr	r3, [pc, #80]	; (8000c8c <HAL_RCC_GetSysClockFreq+0xb8>)
 8000c3a:	685b      	ldr	r3, [r3, #4]
 8000c3c:	0c5b      	lsrs	r3, r3, #17
 8000c3e:	f003 0301 	and.w	r3, r3, #1
 8000c42:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8000c46:	4413      	add	r3, r2
 8000c48:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8000c4c:	61bb      	str	r3, [r7, #24]
 8000c4e:	697b      	ldr	r3, [r7, #20]
 8000c50:	4a0f      	ldr	r2, [pc, #60]	; (8000c90 <HAL_RCC_GetSysClockFreq+0xbc>)
 8000c52:	fb02 f203 	mul.w	r2, r2, r3
 8000c56:	69bb      	ldr	r3, [r7, #24]
 8000c58:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c5c:	627b      	str	r3, [r7, #36]	; 0x24
 8000c5e:	e004      	b.n	8000c6a <HAL_RCC_GetSysClockFreq+0x96>
 8000c60:	697b      	ldr	r3, [r7, #20]
 8000c62:	4a0c      	ldr	r2, [pc, #48]	; (8000c94 <HAL_RCC_GetSysClockFreq+0xc0>)
 8000c64:	fb02 f303 	mul.w	r3, r2, r3
 8000c68:	627b      	str	r3, [r7, #36]	; 0x24
 8000c6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000c6c:	623b      	str	r3, [r7, #32]
 8000c6e:	e002      	b.n	8000c76 <HAL_RCC_GetSysClockFreq+0xa2>
 8000c70:	4b07      	ldr	r3, [pc, #28]	; (8000c90 <HAL_RCC_GetSysClockFreq+0xbc>)
 8000c72:	623b      	str	r3, [r7, #32]
 8000c74:	bf00      	nop
 8000c76:	6a3b      	ldr	r3, [r7, #32]
 8000c78:	4618      	mov	r0, r3
 8000c7a:	3728      	adds	r7, #40	; 0x28
 8000c7c:	46bd      	mov	sp, r7
 8000c7e:	bc90      	pop	{r4, r7}
 8000c80:	4770      	bx	lr
 8000c82:	bf00      	nop
 8000c84:	08002818 	.word	0x08002818
 8000c88:	08002828 	.word	0x08002828
 8000c8c:	40021000 	.word	0x40021000
 8000c90:	007a1200 	.word	0x007a1200
 8000c94:	003d0900 	.word	0x003d0900

08000c98 <RCC_Delay>:
 8000c98:	b480      	push	{r7}
 8000c9a:	b085      	sub	sp, #20
 8000c9c:	af00      	add	r7, sp, #0
 8000c9e:	6078      	str	r0, [r7, #4]
 8000ca0:	4b0a      	ldr	r3, [pc, #40]	; (8000ccc <RCC_Delay+0x34>)
 8000ca2:	681b      	ldr	r3, [r3, #0]
 8000ca4:	4a0a      	ldr	r2, [pc, #40]	; (8000cd0 <RCC_Delay+0x38>)
 8000ca6:	fba2 2303 	umull	r2, r3, r2, r3
 8000caa:	0a5b      	lsrs	r3, r3, #9
 8000cac:	687a      	ldr	r2, [r7, #4]
 8000cae:	fb02 f303 	mul.w	r3, r2, r3
 8000cb2:	60fb      	str	r3, [r7, #12]
 8000cb4:	bf00      	nop
 8000cb6:	68fb      	ldr	r3, [r7, #12]
 8000cb8:	1e5a      	subs	r2, r3, #1
 8000cba:	60fa      	str	r2, [r7, #12]
 8000cbc:	2b00      	cmp	r3, #0
 8000cbe:	d1f9      	bne.n	8000cb4 <RCC_Delay+0x1c>
 8000cc0:	bf00      	nop
 8000cc2:	3714      	adds	r7, #20
 8000cc4:	46bd      	mov	sp, r7
 8000cc6:	bc80      	pop	{r7}
 8000cc8:	4770      	bx	lr
 8000cca:	bf00      	nop
 8000ccc:	20000088 	.word	0x20000088
 8000cd0:	10624dd3 	.word	0x10624dd3

08000cd4 <LL_GPIO_SetPinMode>:
 8000cd4:	b490      	push	{r4, r7}
 8000cd6:	b088      	sub	sp, #32
 8000cd8:	af00      	add	r7, sp, #0
 8000cda:	60f8      	str	r0, [r7, #12]
 8000cdc:	60b9      	str	r1, [r7, #8]
 8000cde:	607a      	str	r2, [r7, #4]
 8000ce0:	68fb      	ldr	r3, [r7, #12]
 8000ce2:	461a      	mov	r2, r3
 8000ce4:	68bb      	ldr	r3, [r7, #8]
 8000ce6:	0e1b      	lsrs	r3, r3, #24
 8000ce8:	4413      	add	r3, r2
 8000cea:	461c      	mov	r4, r3
 8000cec:	6822      	ldr	r2, [r4, #0]
 8000cee:	68bb      	ldr	r3, [r7, #8]
 8000cf0:	617b      	str	r3, [r7, #20]
 8000cf2:	697b      	ldr	r3, [r7, #20]
 8000cf4:	fa93 f3a3 	rbit	r3, r3
 8000cf8:	613b      	str	r3, [r7, #16]
 8000cfa:	693b      	ldr	r3, [r7, #16]
 8000cfc:	fab3 f383 	clz	r3, r3
 8000d00:	009b      	lsls	r3, r3, #2
 8000d02:	210f      	movs	r1, #15
 8000d04:	fa01 f303 	lsl.w	r3, r1, r3
 8000d08:	43db      	mvns	r3, r3
 8000d0a:	401a      	ands	r2, r3
 8000d0c:	68bb      	ldr	r3, [r7, #8]
 8000d0e:	61fb      	str	r3, [r7, #28]
 8000d10:	69fb      	ldr	r3, [r7, #28]
 8000d12:	fa93 f3a3 	rbit	r3, r3
 8000d16:	61bb      	str	r3, [r7, #24]
 8000d18:	69bb      	ldr	r3, [r7, #24]
 8000d1a:	fab3 f383 	clz	r3, r3
 8000d1e:	009b      	lsls	r3, r3, #2
 8000d20:	6879      	ldr	r1, [r7, #4]
 8000d22:	fa01 f303 	lsl.w	r3, r1, r3
 8000d26:	4313      	orrs	r3, r2
 8000d28:	6023      	str	r3, [r4, #0]
 8000d2a:	bf00      	nop
 8000d2c:	3720      	adds	r7, #32
 8000d2e:	46bd      	mov	sp, r7
 8000d30:	bc90      	pop	{r4, r7}
 8000d32:	4770      	bx	lr

08000d34 <LL_GPIO_SetPinSpeed>:
 8000d34:	b490      	push	{r4, r7}
 8000d36:	b088      	sub	sp, #32
 8000d38:	af00      	add	r7, sp, #0
 8000d3a:	60f8      	str	r0, [r7, #12]
 8000d3c:	60b9      	str	r1, [r7, #8]
 8000d3e:	607a      	str	r2, [r7, #4]
 8000d40:	68fb      	ldr	r3, [r7, #12]
 8000d42:	461a      	mov	r2, r3
 8000d44:	68bb      	ldr	r3, [r7, #8]
 8000d46:	0e1b      	lsrs	r3, r3, #24
 8000d48:	4413      	add	r3, r2
 8000d4a:	461c      	mov	r4, r3
 8000d4c:	6822      	ldr	r2, [r4, #0]
 8000d4e:	68bb      	ldr	r3, [r7, #8]
 8000d50:	617b      	str	r3, [r7, #20]
 8000d52:	697b      	ldr	r3, [r7, #20]
 8000d54:	fa93 f3a3 	rbit	r3, r3
 8000d58:	613b      	str	r3, [r7, #16]
 8000d5a:	693b      	ldr	r3, [r7, #16]
 8000d5c:	fab3 f383 	clz	r3, r3
 8000d60:	009b      	lsls	r3, r3, #2
 8000d62:	2103      	movs	r1, #3
 8000d64:	fa01 f303 	lsl.w	r3, r1, r3
 8000d68:	43db      	mvns	r3, r3
 8000d6a:	401a      	ands	r2, r3
 8000d6c:	68bb      	ldr	r3, [r7, #8]
 8000d6e:	61fb      	str	r3, [r7, #28]
 8000d70:	69fb      	ldr	r3, [r7, #28]
 8000d72:	fa93 f3a3 	rbit	r3, r3
 8000d76:	61bb      	str	r3, [r7, #24]
 8000d78:	69bb      	ldr	r3, [r7, #24]
 8000d7a:	fab3 f383 	clz	r3, r3
 8000d7e:	009b      	lsls	r3, r3, #2
 8000d80:	6879      	ldr	r1, [r7, #4]
 8000d82:	fa01 f303 	lsl.w	r3, r1, r3
 8000d86:	4313      	orrs	r3, r2
 8000d88:	6023      	str	r3, [r4, #0]
 8000d8a:	bf00      	nop
 8000d8c:	3720      	adds	r7, #32
 8000d8e:	46bd      	mov	sp, r7
 8000d90:	bc90      	pop	{r4, r7}
 8000d92:	4770      	bx	lr

08000d94 <LL_GPIO_SetPinOutputType>:
 8000d94:	b490      	push	{r4, r7}
 8000d96:	b088      	sub	sp, #32
 8000d98:	af00      	add	r7, sp, #0
 8000d9a:	60f8      	str	r0, [r7, #12]
 8000d9c:	60b9      	str	r1, [r7, #8]
 8000d9e:	607a      	str	r2, [r7, #4]
 8000da0:	68fb      	ldr	r3, [r7, #12]
 8000da2:	461a      	mov	r2, r3
 8000da4:	68bb      	ldr	r3, [r7, #8]
 8000da6:	0e1b      	lsrs	r3, r3, #24
 8000da8:	4413      	add	r3, r2
 8000daa:	461c      	mov	r4, r3
 8000dac:	6822      	ldr	r2, [r4, #0]
 8000dae:	68bb      	ldr	r3, [r7, #8]
 8000db0:	617b      	str	r3, [r7, #20]
 8000db2:	697b      	ldr	r3, [r7, #20]
 8000db4:	fa93 f3a3 	rbit	r3, r3
 8000db8:	613b      	str	r3, [r7, #16]
 8000dba:	693b      	ldr	r3, [r7, #16]
 8000dbc:	fab3 f383 	clz	r3, r3
 8000dc0:	009b      	lsls	r3, r3, #2
 8000dc2:	2104      	movs	r1, #4
 8000dc4:	fa01 f303 	lsl.w	r3, r1, r3
 8000dc8:	43db      	mvns	r3, r3
 8000dca:	401a      	ands	r2, r3
 8000dcc:	68bb      	ldr	r3, [r7, #8]
 8000dce:	61fb      	str	r3, [r7, #28]
 8000dd0:	69fb      	ldr	r3, [r7, #28]
 8000dd2:	fa93 f3a3 	rbit	r3, r3
 8000dd6:	61bb      	str	r3, [r7, #24]
 8000dd8:	69bb      	ldr	r3, [r7, #24]
 8000dda:	fab3 f383 	clz	r3, r3
 8000dde:	009b      	lsls	r3, r3, #2
 8000de0:	6879      	ldr	r1, [r7, #4]
 8000de2:	fa01 f303 	lsl.w	r3, r1, r3
 8000de6:	4313      	orrs	r3, r2
 8000de8:	6023      	str	r3, [r4, #0]
 8000dea:	bf00      	nop
 8000dec:	3720      	adds	r7, #32
 8000dee:	46bd      	mov	sp, r7
 8000df0:	bc90      	pop	{r4, r7}
 8000df2:	4770      	bx	lr

08000df4 <LL_GPIO_SetPinPull>:
 8000df4:	b480      	push	{r7}
 8000df6:	b087      	sub	sp, #28
 8000df8:	af00      	add	r7, sp, #0
 8000dfa:	60f8      	str	r0, [r7, #12]
 8000dfc:	60b9      	str	r1, [r7, #8]
 8000dfe:	607a      	str	r2, [r7, #4]
 8000e00:	68fb      	ldr	r3, [r7, #12]
 8000e02:	68da      	ldr	r2, [r3, #12]
 8000e04:	68bb      	ldr	r3, [r7, #8]
 8000e06:	0a1b      	lsrs	r3, r3, #8
 8000e08:	43db      	mvns	r3, r3
 8000e0a:	401a      	ands	r2, r3
 8000e0c:	68bb      	ldr	r3, [r7, #8]
 8000e0e:	0a1b      	lsrs	r3, r3, #8
 8000e10:	617b      	str	r3, [r7, #20]
 8000e12:	697b      	ldr	r3, [r7, #20]
 8000e14:	fa93 f3a3 	rbit	r3, r3
 8000e18:	613b      	str	r3, [r7, #16]
 8000e1a:	693b      	ldr	r3, [r7, #16]
 8000e1c:	fab3 f383 	clz	r3, r3
 8000e20:	6879      	ldr	r1, [r7, #4]
 8000e22:	fa01 f303 	lsl.w	r3, r1, r3
 8000e26:	431a      	orrs	r2, r3
 8000e28:	68fb      	ldr	r3, [r7, #12]
 8000e2a:	60da      	str	r2, [r3, #12]
 8000e2c:	bf00      	nop
 8000e2e:	371c      	adds	r7, #28
 8000e30:	46bd      	mov	sp, r7
 8000e32:	bc80      	pop	{r7}
 8000e34:	4770      	bx	lr

08000e36 <LL_GPIO_Init>:
 8000e36:	b580      	push	{r7, lr}
 8000e38:	b088      	sub	sp, #32
 8000e3a:	af00      	add	r7, sp, #0
 8000e3c:	6078      	str	r0, [r7, #4]
 8000e3e:	6039      	str	r1, [r7, #0]
 8000e40:	683b      	ldr	r3, [r7, #0]
 8000e42:	681b      	ldr	r3, [r3, #0]
 8000e44:	021b      	lsls	r3, r3, #8
 8000e46:	0c1b      	lsrs	r3, r3, #16
 8000e48:	617b      	str	r3, [r7, #20]
 8000e4a:	697b      	ldr	r3, [r7, #20]
 8000e4c:	613b      	str	r3, [r7, #16]
 8000e4e:	693b      	ldr	r3, [r7, #16]
 8000e50:	fa93 f3a3 	rbit	r3, r3
 8000e54:	60fb      	str	r3, [r7, #12]
 8000e56:	68fb      	ldr	r3, [r7, #12]
 8000e58:	fab3 f383 	clz	r3, r3
 8000e5c:	61fb      	str	r3, [r7, #28]
 8000e5e:	e040      	b.n	8000ee2 <LL_GPIO_Init+0xac>
 8000e60:	2201      	movs	r2, #1
 8000e62:	69fb      	ldr	r3, [r7, #28]
 8000e64:	409a      	lsls	r2, r3
 8000e66:	697b      	ldr	r3, [r7, #20]
 8000e68:	4013      	ands	r3, r2
 8000e6a:	2b00      	cmp	r3, #0
 8000e6c:	d036      	beq.n	8000edc <LL_GPIO_Init+0xa6>
 8000e6e:	69fb      	ldr	r3, [r7, #28]
 8000e70:	2b07      	cmp	r3, #7
 8000e72:	d806      	bhi.n	8000e82 <LL_GPIO_Init+0x4c>
 8000e74:	f240 1201 	movw	r2, #257	; 0x101
 8000e78:	69fb      	ldr	r3, [r7, #28]
 8000e7a:	fa02 f303 	lsl.w	r3, r2, r3
 8000e7e:	61bb      	str	r3, [r7, #24]
 8000e80:	e008      	b.n	8000e94 <LL_GPIO_Init+0x5e>
 8000e82:	69fb      	ldr	r3, [r7, #28]
 8000e84:	3b08      	subs	r3, #8
 8000e86:	f04f 1201 	mov.w	r2, #65537	; 0x10001
 8000e8a:	fa02 f303 	lsl.w	r3, r2, r3
 8000e8e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000e92:	61bb      	str	r3, [r7, #24]
 8000e94:	683b      	ldr	r3, [r7, #0]
 8000e96:	685b      	ldr	r3, [r3, #4]
 8000e98:	461a      	mov	r2, r3
 8000e9a:	69b9      	ldr	r1, [r7, #24]
 8000e9c:	6878      	ldr	r0, [r7, #4]
 8000e9e:	f7ff ff19 	bl	8000cd4 <LL_GPIO_SetPinMode>
 8000ea2:	683b      	ldr	r3, [r7, #0]
 8000ea4:	691b      	ldr	r3, [r3, #16]
 8000ea6:	461a      	mov	r2, r3
 8000ea8:	69b9      	ldr	r1, [r7, #24]
 8000eaa:	6878      	ldr	r0, [r7, #4]
 8000eac:	f7ff ffa2 	bl	8000df4 <LL_GPIO_SetPinPull>
 8000eb0:	683b      	ldr	r3, [r7, #0]
 8000eb2:	685b      	ldr	r3, [r3, #4]
 8000eb4:	2b01      	cmp	r3, #1
 8000eb6:	d003      	beq.n	8000ec0 <LL_GPIO_Init+0x8a>
 8000eb8:	683b      	ldr	r3, [r7, #0]
 8000eba:	685b      	ldr	r3, [r3, #4]
 8000ebc:	2b09      	cmp	r3, #9
 8000ebe:	d10d      	bne.n	8000edc <LL_GPIO_Init+0xa6>
 8000ec0:	683b      	ldr	r3, [r7, #0]
 8000ec2:	689b      	ldr	r3, [r3, #8]
 8000ec4:	461a      	mov	r2, r3
 8000ec6:	69b9      	ldr	r1, [r7, #24]
 8000ec8:	6878      	ldr	r0, [r7, #4]
 8000eca:	f7ff ff33 	bl	8000d34 <LL_GPIO_SetPinSpeed>
 8000ece:	683b      	ldr	r3, [r7, #0]
 8000ed0:	68db      	ldr	r3, [r3, #12]
 8000ed2:	461a      	mov	r2, r3
 8000ed4:	69b9      	ldr	r1, [r7, #24]
 8000ed6:	6878      	ldr	r0, [r7, #4]
 8000ed8:	f7ff ff5c 	bl	8000d94 <LL_GPIO_SetPinOutputType>
 8000edc:	69fb      	ldr	r3, [r7, #28]
 8000ede:	3301      	adds	r3, #1
 8000ee0:	61fb      	str	r3, [r7, #28]
 8000ee2:	697a      	ldr	r2, [r7, #20]
 8000ee4:	69fb      	ldr	r3, [r7, #28]
 8000ee6:	fa22 f303 	lsr.w	r3, r2, r3
 8000eea:	2b00      	cmp	r3, #0
 8000eec:	d1b8      	bne.n	8000e60 <LL_GPIO_Init+0x2a>
 8000eee:	2301      	movs	r3, #1
 8000ef0:	4618      	mov	r0, r3
 8000ef2:	3720      	adds	r7, #32
 8000ef4:	46bd      	mov	sp, r7
 8000ef6:	bd80      	pop	{r7, pc}

08000ef8 <LL_RCC_GetSysClkSource>:
 8000ef8:	b480      	push	{r7}
 8000efa:	af00      	add	r7, sp, #0
 8000efc:	4b03      	ldr	r3, [pc, #12]	; (8000f0c <LL_RCC_GetSysClkSource+0x14>)
 8000efe:	685b      	ldr	r3, [r3, #4]
 8000f00:	f003 030c 	and.w	r3, r3, #12
 8000f04:	4618      	mov	r0, r3
 8000f06:	46bd      	mov	sp, r7
 8000f08:	bc80      	pop	{r7}
 8000f0a:	4770      	bx	lr
 8000f0c:	40021000 	.word	0x40021000

08000f10 <LL_RCC_GetAHBPrescaler>:
 8000f10:	b480      	push	{r7}
 8000f12:	af00      	add	r7, sp, #0
 8000f14:	4b03      	ldr	r3, [pc, #12]	; (8000f24 <LL_RCC_GetAHBPrescaler+0x14>)
 8000f16:	685b      	ldr	r3, [r3, #4]
 8000f18:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8000f1c:	4618      	mov	r0, r3
 8000f1e:	46bd      	mov	sp, r7
 8000f20:	bc80      	pop	{r7}
 8000f22:	4770      	bx	lr
 8000f24:	40021000 	.word	0x40021000

08000f28 <LL_RCC_GetAPB1Prescaler>:
 8000f28:	b480      	push	{r7}
 8000f2a:	af00      	add	r7, sp, #0
 8000f2c:	4b03      	ldr	r3, [pc, #12]	; (8000f3c <LL_RCC_GetAPB1Prescaler+0x14>)
 8000f2e:	685b      	ldr	r3, [r3, #4]
 8000f30:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8000f34:	4618      	mov	r0, r3
 8000f36:	46bd      	mov	sp, r7
 8000f38:	bc80      	pop	{r7}
 8000f3a:	4770      	bx	lr
 8000f3c:	40021000 	.word	0x40021000

08000f40 <LL_RCC_GetAPB2Prescaler>:
 8000f40:	b480      	push	{r7}
 8000f42:	af00      	add	r7, sp, #0
 8000f44:	4b03      	ldr	r3, [pc, #12]	; (8000f54 <LL_RCC_GetAPB2Prescaler+0x14>)
 8000f46:	685b      	ldr	r3, [r3, #4]
 8000f48:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 8000f4c:	4618      	mov	r0, r3
 8000f4e:	46bd      	mov	sp, r7
 8000f50:	bc80      	pop	{r7}
 8000f52:	4770      	bx	lr
 8000f54:	40021000 	.word	0x40021000

08000f58 <LL_RCC_PLL_GetMainSource>:
 8000f58:	b480      	push	{r7}
 8000f5a:	af00      	add	r7, sp, #0
 8000f5c:	4b03      	ldr	r3, [pc, #12]	; (8000f6c <LL_RCC_PLL_GetMainSource+0x14>)
 8000f5e:	685b      	ldr	r3, [r3, #4]
 8000f60:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8000f64:	4618      	mov	r0, r3
 8000f66:	46bd      	mov	sp, r7
 8000f68:	bc80      	pop	{r7}
 8000f6a:	4770      	bx	lr
 8000f6c:	40021000 	.word	0x40021000

08000f70 <LL_RCC_PLL_GetMultiplicator>:
 8000f70:	b480      	push	{r7}
 8000f72:	af00      	add	r7, sp, #0
 8000f74:	4b03      	ldr	r3, [pc, #12]	; (8000f84 <LL_RCC_PLL_GetMultiplicator+0x14>)
 8000f76:	685b      	ldr	r3, [r3, #4]
 8000f78:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 8000f7c:	4618      	mov	r0, r3
 8000f7e:	46bd      	mov	sp, r7
 8000f80:	bc80      	pop	{r7}
 8000f82:	4770      	bx	lr
 8000f84:	40021000 	.word	0x40021000

08000f88 <LL_RCC_PLL_GetPrediv>:
 8000f88:	b480      	push	{r7}
 8000f8a:	af00      	add	r7, sp, #0
 8000f8c:	4b04      	ldr	r3, [pc, #16]	; (8000fa0 <LL_RCC_PLL_GetPrediv+0x18>)
 8000f8e:	685b      	ldr	r3, [r3, #4]
 8000f90:	0c5b      	lsrs	r3, r3, #17
 8000f92:	f003 0301 	and.w	r3, r3, #1
 8000f96:	4618      	mov	r0, r3
 8000f98:	46bd      	mov	sp, r7
 8000f9a:	bc80      	pop	{r7}
 8000f9c:	4770      	bx	lr
 8000f9e:	bf00      	nop
 8000fa0:	40021000 	.word	0x40021000

08000fa4 <LL_RCC_GetSystemClocksFreq>:
 8000fa4:	b580      	push	{r7, lr}
 8000fa6:	b082      	sub	sp, #8
 8000fa8:	af00      	add	r7, sp, #0
 8000faa:	6078      	str	r0, [r7, #4]
 8000fac:	f000 f820 	bl	8000ff0 <RCC_GetSystemClockFreq>
 8000fb0:	4602      	mov	r2, r0
 8000fb2:	687b      	ldr	r3, [r7, #4]
 8000fb4:	601a      	str	r2, [r3, #0]
 8000fb6:	687b      	ldr	r3, [r7, #4]
 8000fb8:	681b      	ldr	r3, [r3, #0]
 8000fba:	4618      	mov	r0, r3
 8000fbc:	f000 f83a 	bl	8001034 <RCC_GetHCLKClockFreq>
 8000fc0:	4602      	mov	r2, r0
 8000fc2:	687b      	ldr	r3, [r7, #4]
 8000fc4:	605a      	str	r2, [r3, #4]
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	685b      	ldr	r3, [r3, #4]
 8000fca:	4618      	mov	r0, r3
 8000fcc:	f000 f848 	bl	8001060 <RCC_GetPCLK1ClockFreq>
 8000fd0:	4602      	mov	r2, r0
 8000fd2:	687b      	ldr	r3, [r7, #4]
 8000fd4:	609a      	str	r2, [r3, #8]
 8000fd6:	687b      	ldr	r3, [r7, #4]
 8000fd8:	685b      	ldr	r3, [r3, #4]
 8000fda:	4618      	mov	r0, r3
 8000fdc:	f000 f854 	bl	8001088 <RCC_GetPCLK2ClockFreq>
 8000fe0:	4602      	mov	r2, r0
 8000fe2:	687b      	ldr	r3, [r7, #4]
 8000fe4:	60da      	str	r2, [r3, #12]
 8000fe6:	bf00      	nop
 8000fe8:	3708      	adds	r7, #8
 8000fea:	46bd      	mov	sp, r7
 8000fec:	bd80      	pop	{r7, pc}
	...

08000ff0 <RCC_GetSystemClockFreq>:
 8000ff0:	b580      	push	{r7, lr}
 8000ff2:	b082      	sub	sp, #8
 8000ff4:	af00      	add	r7, sp, #0
 8000ff6:	2300      	movs	r3, #0
 8000ff8:	607b      	str	r3, [r7, #4]
 8000ffa:	f7ff ff7d 	bl	8000ef8 <LL_RCC_GetSysClkSource>
 8000ffe:	4603      	mov	r3, r0
 8001000:	2b04      	cmp	r3, #4
 8001002:	d006      	beq.n	8001012 <RCC_GetSystemClockFreq+0x22>
 8001004:	2b08      	cmp	r3, #8
 8001006:	d007      	beq.n	8001018 <RCC_GetSystemClockFreq+0x28>
 8001008:	2b00      	cmp	r3, #0
 800100a:	d109      	bne.n	8001020 <RCC_GetSystemClockFreq+0x30>
 800100c:	4b08      	ldr	r3, [pc, #32]	; (8001030 <RCC_GetSystemClockFreq+0x40>)
 800100e:	607b      	str	r3, [r7, #4]
 8001010:	e009      	b.n	8001026 <RCC_GetSystemClockFreq+0x36>
 8001012:	4b07      	ldr	r3, [pc, #28]	; (8001030 <RCC_GetSystemClockFreq+0x40>)
 8001014:	607b      	str	r3, [r7, #4]
 8001016:	e006      	b.n	8001026 <RCC_GetSystemClockFreq+0x36>
 8001018:	f000 f84a 	bl	80010b0 <RCC_PLL_GetFreqDomain_SYS>
 800101c:	6078      	str	r0, [r7, #4]
 800101e:	e002      	b.n	8001026 <RCC_GetSystemClockFreq+0x36>
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <RCC_GetSystemClockFreq+0x40>)
 8001022:	607b      	str	r3, [r7, #4]
 8001024:	bf00      	nop
 8001026:	687b      	ldr	r3, [r7, #4]
 8001028:	4618      	mov	r0, r3
 800102a:	3708      	adds	r7, #8
 800102c:	46bd      	mov	sp, r7
 800102e:	bd80      	pop	{r7, pc}
 8001030:	007a1200 	.word	0x007a1200

08001034 <RCC_GetHCLKClockFreq>:
 8001034:	b580      	push	{r7, lr}
 8001036:	b082      	sub	sp, #8
 8001038:	af00      	add	r7, sp, #0
 800103a:	6078      	str	r0, [r7, #4]
 800103c:	f7ff ff68 	bl	8000f10 <LL_RCC_GetAHBPrescaler>
 8001040:	4603      	mov	r3, r0
 8001042:	091b      	lsrs	r3, r3, #4
 8001044:	f003 030f 	and.w	r3, r3, #15
 8001048:	4a04      	ldr	r2, [pc, #16]	; (800105c <RCC_GetHCLKClockFreq+0x28>)
 800104a:	5cd3      	ldrb	r3, [r2, r3]
 800104c:	461a      	mov	r2, r3
 800104e:	687b      	ldr	r3, [r7, #4]
 8001050:	40d3      	lsrs	r3, r2
 8001052:	4618      	mov	r0, r3
 8001054:	3708      	adds	r7, #8
 8001056:	46bd      	mov	sp, r7
 8001058:	bd80      	pop	{r7, pc}
 800105a:	bf00      	nop
 800105c:	0800283c 	.word	0x0800283c

08001060 <RCC_GetPCLK1ClockFreq>:
 8001060:	b580      	push	{r7, lr}
 8001062:	b082      	sub	sp, #8
 8001064:	af00      	add	r7, sp, #0
 8001066:	6078      	str	r0, [r7, #4]
 8001068:	f7ff ff5e 	bl	8000f28 <LL_RCC_GetAPB1Prescaler>
 800106c:	4603      	mov	r3, r0
 800106e:	0a1b      	lsrs	r3, r3, #8
 8001070:	4a04      	ldr	r2, [pc, #16]	; (8001084 <RCC_GetPCLK1ClockFreq+0x24>)
 8001072:	5cd3      	ldrb	r3, [r2, r3]
 8001074:	461a      	mov	r2, r3
 8001076:	687b      	ldr	r3, [r7, #4]
 8001078:	40d3      	lsrs	r3, r2
 800107a:	4618      	mov	r0, r3
 800107c:	3708      	adds	r7, #8
 800107e:	46bd      	mov	sp, r7
 8001080:	bd80      	pop	{r7, pc}
 8001082:	bf00      	nop
 8001084:	0800284c 	.word	0x0800284c

08001088 <RCC_GetPCLK2ClockFreq>:
 8001088:	b580      	push	{r7, lr}
 800108a:	b082      	sub	sp, #8
 800108c:	af00      	add	r7, sp, #0
 800108e:	6078      	str	r0, [r7, #4]
 8001090:	f7ff ff56 	bl	8000f40 <LL_RCC_GetAPB2Prescaler>
 8001094:	4603      	mov	r3, r0
 8001096:	0adb      	lsrs	r3, r3, #11
 8001098:	4a04      	ldr	r2, [pc, #16]	; (80010ac <RCC_GetPCLK2ClockFreq+0x24>)
 800109a:	5cd3      	ldrb	r3, [r2, r3]
 800109c:	461a      	mov	r2, r3
 800109e:	687b      	ldr	r3, [r7, #4]
 80010a0:	40d3      	lsrs	r3, r2
 80010a2:	4618      	mov	r0, r3
 80010a4:	3708      	adds	r7, #8
 80010a6:	46bd      	mov	sp, r7
 80010a8:	bd80      	pop	{r7, pc}
 80010aa:	bf00      	nop
 80010ac:	0800284c 	.word	0x0800284c

080010b0 <RCC_PLL_GetFreqDomain_SYS>:
 80010b0:	b580      	push	{r7, lr}
 80010b2:	b082      	sub	sp, #8
 80010b4:	af00      	add	r7, sp, #0
 80010b6:	2300      	movs	r3, #0
 80010b8:	607b      	str	r3, [r7, #4]
 80010ba:	2300      	movs	r3, #0
 80010bc:	603b      	str	r3, [r7, #0]
 80010be:	f7ff ff4b 	bl	8000f58 <LL_RCC_PLL_GetMainSource>
 80010c2:	6038      	str	r0, [r7, #0]
 80010c4:	683b      	ldr	r3, [r7, #0]
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	d003      	beq.n	80010d2 <RCC_PLL_GetFreqDomain_SYS+0x22>
 80010ca:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80010ce:	d003      	beq.n	80010d8 <RCC_PLL_GetFreqDomain_SYS+0x28>
 80010d0:	e00b      	b.n	80010ea <RCC_PLL_GetFreqDomain_SYS+0x3a>
 80010d2:	4b0d      	ldr	r3, [pc, #52]	; (8001108 <RCC_PLL_GetFreqDomain_SYS+0x58>)
 80010d4:	607b      	str	r3, [r7, #4]
 80010d6:	e00b      	b.n	80010f0 <RCC_PLL_GetFreqDomain_SYS+0x40>
 80010d8:	f7ff ff56 	bl	8000f88 <LL_RCC_PLL_GetPrediv>
 80010dc:	4603      	mov	r3, r0
 80010de:	3301      	adds	r3, #1
 80010e0:	4a0a      	ldr	r2, [pc, #40]	; (800110c <RCC_PLL_GetFreqDomain_SYS+0x5c>)
 80010e2:	fbb2 f3f3 	udiv	r3, r2, r3
 80010e6:	607b      	str	r3, [r7, #4]
 80010e8:	e002      	b.n	80010f0 <RCC_PLL_GetFreqDomain_SYS+0x40>
 80010ea:	4b07      	ldr	r3, [pc, #28]	; (8001108 <RCC_PLL_GetFreqDomain_SYS+0x58>)
 80010ec:	607b      	str	r3, [r7, #4]
 80010ee:	bf00      	nop
 80010f0:	f7ff ff3e 	bl	8000f70 <LL_RCC_PLL_GetMultiplicator>
 80010f4:	4603      	mov	r3, r0
 80010f6:	0c9b      	lsrs	r3, r3, #18
 80010f8:	3302      	adds	r3, #2
 80010fa:	687a      	ldr	r2, [r7, #4]
 80010fc:	fb02 f303 	mul.w	r3, r2, r3
 8001100:	4618      	mov	r0, r3
 8001102:	3708      	adds	r7, #8
 8001104:	46bd      	mov	sp, r7
 8001106:	bd80      	pop	{r7, pc}
 8001108:	003d0900 	.word	0x003d0900
 800110c:	007a1200 	.word	0x007a1200

08001110 <LL_SPI_IsEnabled>:
 8001110:	b480      	push	{r7}
 8001112:	b083      	sub	sp, #12
 8001114:	af00      	add	r7, sp, #0
 8001116:	6078      	str	r0, [r7, #4]
 8001118:	687b      	ldr	r3, [r7, #4]
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001120:	2b40      	cmp	r3, #64	; 0x40
 8001122:	bf0c      	ite	eq
 8001124:	2301      	moveq	r3, #1
 8001126:	2300      	movne	r3, #0
 8001128:	b2db      	uxtb	r3, r3
 800112a:	4618      	mov	r0, r3
 800112c:	370c      	adds	r7, #12
 800112e:	46bd      	mov	sp, r7
 8001130:	bc80      	pop	{r7}
 8001132:	4770      	bx	lr

08001134 <LL_SPI_SetCRCPolynomial>:
 8001134:	b480      	push	{r7}
 8001136:	b083      	sub	sp, #12
 8001138:	af00      	add	r7, sp, #0
 800113a:	6078      	str	r0, [r7, #4]
 800113c:	6039      	str	r1, [r7, #0]
 800113e:	683b      	ldr	r3, [r7, #0]
 8001140:	b29b      	uxth	r3, r3
 8001142:	461a      	mov	r2, r3
 8001144:	687b      	ldr	r3, [r7, #4]
 8001146:	611a      	str	r2, [r3, #16]
 8001148:	bf00      	nop
 800114a:	370c      	adds	r7, #12
 800114c:	46bd      	mov	sp, r7
 800114e:	bc80      	pop	{r7}
 8001150:	4770      	bx	lr

08001152 <LL_SPI_Init>:
 8001152:	b580      	push	{r7, lr}
 8001154:	b084      	sub	sp, #16
 8001156:	af00      	add	r7, sp, #0
 8001158:	6078      	str	r0, [r7, #4]
 800115a:	6039      	str	r1, [r7, #0]
 800115c:	2300      	movs	r3, #0
 800115e:	73fb      	strb	r3, [r7, #15]
 8001160:	6878      	ldr	r0, [r7, #4]
 8001162:	f7ff ffd5 	bl	8001110 <LL_SPI_IsEnabled>
 8001166:	4603      	mov	r3, r0
 8001168:	2b00      	cmp	r3, #0
 800116a:	d139      	bne.n	80011e0 <LL_SPI_Init+0x8e>
 800116c:	687b      	ldr	r3, [r7, #4]
 800116e:	681b      	ldr	r3, [r3, #0]
 8001170:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8001174:	f023 03bf 	bic.w	r3, r3, #191	; 0xbf
 8001178:	683a      	ldr	r2, [r7, #0]
 800117a:	6811      	ldr	r1, [r2, #0]
 800117c:	683a      	ldr	r2, [r7, #0]
 800117e:	6852      	ldr	r2, [r2, #4]
 8001180:	4311      	orrs	r1, r2
 8001182:	683a      	ldr	r2, [r7, #0]
 8001184:	6892      	ldr	r2, [r2, #8]
 8001186:	4311      	orrs	r1, r2
 8001188:	683a      	ldr	r2, [r7, #0]
 800118a:	68d2      	ldr	r2, [r2, #12]
 800118c:	4311      	orrs	r1, r2
 800118e:	683a      	ldr	r2, [r7, #0]
 8001190:	6912      	ldr	r2, [r2, #16]
 8001192:	4311      	orrs	r1, r2
 8001194:	683a      	ldr	r2, [r7, #0]
 8001196:	6952      	ldr	r2, [r2, #20]
 8001198:	4311      	orrs	r1, r2
 800119a:	683a      	ldr	r2, [r7, #0]
 800119c:	6992      	ldr	r2, [r2, #24]
 800119e:	4311      	orrs	r1, r2
 80011a0:	683a      	ldr	r2, [r7, #0]
 80011a2:	69d2      	ldr	r2, [r2, #28]
 80011a4:	4311      	orrs	r1, r2
 80011a6:	683a      	ldr	r2, [r7, #0]
 80011a8:	6a12      	ldr	r2, [r2, #32]
 80011aa:	430a      	orrs	r2, r1
 80011ac:	431a      	orrs	r2, r3
 80011ae:	687b      	ldr	r3, [r7, #4]
 80011b0:	601a      	str	r2, [r3, #0]
 80011b2:	687b      	ldr	r3, [r7, #4]
 80011b4:	685b      	ldr	r3, [r3, #4]
 80011b6:	f023 0204 	bic.w	r2, r3, #4
 80011ba:	683b      	ldr	r3, [r7, #0]
 80011bc:	695b      	ldr	r3, [r3, #20]
 80011be:	0c1b      	lsrs	r3, r3, #16
 80011c0:	431a      	orrs	r2, r3
 80011c2:	687b      	ldr	r3, [r7, #4]
 80011c4:	605a      	str	r2, [r3, #4]
 80011c6:	683b      	ldr	r3, [r7, #0]
 80011c8:	6a1b      	ldr	r3, [r3, #32]
 80011ca:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80011ce:	d105      	bne.n	80011dc <LL_SPI_Init+0x8a>
 80011d0:	683b      	ldr	r3, [r7, #0]
 80011d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80011d4:	4619      	mov	r1, r3
 80011d6:	6878      	ldr	r0, [r7, #4]
 80011d8:	f7ff ffac 	bl	8001134 <LL_SPI_SetCRCPolynomial>
 80011dc:	2301      	movs	r3, #1
 80011de:	73fb      	strb	r3, [r7, #15]
 80011e0:	687b      	ldr	r3, [r7, #4]
 80011e2:	69db      	ldr	r3, [r3, #28]
 80011e4:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 80011e8:	687b      	ldr	r3, [r7, #4]
 80011ea:	61da      	str	r2, [r3, #28]
 80011ec:	7bfb      	ldrb	r3, [r7, #15]
 80011ee:	4618      	mov	r0, r3
 80011f0:	3710      	adds	r7, #16
 80011f2:	46bd      	mov	sp, r7
 80011f4:	bd80      	pop	{r7, pc}

080011f6 <LL_USART_IsEnabled>:
 80011f6:	b480      	push	{r7}
 80011f8:	b083      	sub	sp, #12
 80011fa:	af00      	add	r7, sp, #0
 80011fc:	6078      	str	r0, [r7, #4]
 80011fe:	687b      	ldr	r3, [r7, #4]
 8001200:	68db      	ldr	r3, [r3, #12]
 8001202:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8001206:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800120a:	bf0c      	ite	eq
 800120c:	2301      	moveq	r3, #1
 800120e:	2300      	movne	r3, #0
 8001210:	b2db      	uxtb	r3, r3
 8001212:	4618      	mov	r0, r3
 8001214:	370c      	adds	r7, #12
 8001216:	46bd      	mov	sp, r7
 8001218:	bc80      	pop	{r7}
 800121a:	4770      	bx	lr

0800121c <LL_USART_SetStopBitsLength>:
 800121c:	b480      	push	{r7}
 800121e:	b083      	sub	sp, #12
 8001220:	af00      	add	r7, sp, #0
 8001222:	6078      	str	r0, [r7, #4]
 8001224:	6039      	str	r1, [r7, #0]
 8001226:	687b      	ldr	r3, [r7, #4]
 8001228:	691b      	ldr	r3, [r3, #16]
 800122a:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 800122e:	683b      	ldr	r3, [r7, #0]
 8001230:	431a      	orrs	r2, r3
 8001232:	687b      	ldr	r3, [r7, #4]
 8001234:	611a      	str	r2, [r3, #16]
 8001236:	bf00      	nop
 8001238:	370c      	adds	r7, #12
 800123a:	46bd      	mov	sp, r7
 800123c:	bc80      	pop	{r7}
 800123e:	4770      	bx	lr

08001240 <LL_USART_SetHWFlowCtrl>:
 8001240:	b480      	push	{r7}
 8001242:	b083      	sub	sp, #12
 8001244:	af00      	add	r7, sp, #0
 8001246:	6078      	str	r0, [r7, #4]
 8001248:	6039      	str	r1, [r7, #0]
 800124a:	687b      	ldr	r3, [r7, #4]
 800124c:	695b      	ldr	r3, [r3, #20]
 800124e:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8001252:	683b      	ldr	r3, [r7, #0]
 8001254:	431a      	orrs	r2, r3
 8001256:	687b      	ldr	r3, [r7, #4]
 8001258:	615a      	str	r2, [r3, #20]
 800125a:	bf00      	nop
 800125c:	370c      	adds	r7, #12
 800125e:	46bd      	mov	sp, r7
 8001260:	bc80      	pop	{r7}
 8001262:	4770      	bx	lr

08001264 <LL_USART_SetBaudRate>:
 8001264:	b480      	push	{r7}
 8001266:	b085      	sub	sp, #20
 8001268:	af00      	add	r7, sp, #0
 800126a:	60f8      	str	r0, [r7, #12]
 800126c:	60b9      	str	r1, [r7, #8]
 800126e:	607a      	str	r2, [r7, #4]
 8001270:	68ba      	ldr	r2, [r7, #8]
 8001272:	4613      	mov	r3, r2
 8001274:	009b      	lsls	r3, r3, #2
 8001276:	4413      	add	r3, r2
 8001278:	009a      	lsls	r2, r3, #2
 800127a:	441a      	add	r2, r3
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	009b      	lsls	r3, r3, #2
 8001280:	fbb2 f3f3 	udiv	r3, r2, r3
 8001284:	4a25      	ldr	r2, [pc, #148]	; (800131c <LL_USART_SetBaudRate+0xb8>)
 8001286:	fba2 2303 	umull	r2, r3, r2, r3
 800128a:	095b      	lsrs	r3, r3, #5
 800128c:	b29b      	uxth	r3, r3
 800128e:	011b      	lsls	r3, r3, #4
 8001290:	b299      	uxth	r1, r3
 8001292:	68ba      	ldr	r2, [r7, #8]
 8001294:	4613      	mov	r3, r2
 8001296:	009b      	lsls	r3, r3, #2
 8001298:	4413      	add	r3, r2
 800129a:	009a      	lsls	r2, r3, #2
 800129c:	441a      	add	r2, r3
 800129e:	687b      	ldr	r3, [r7, #4]
 80012a0:	009b      	lsls	r3, r3, #2
 80012a2:	fbb2 f2f3 	udiv	r2, r2, r3
 80012a6:	4b1d      	ldr	r3, [pc, #116]	; (800131c <LL_USART_SetBaudRate+0xb8>)
 80012a8:	fba3 0302 	umull	r0, r3, r3, r2
 80012ac:	095b      	lsrs	r3, r3, #5
 80012ae:	2064      	movs	r0, #100	; 0x64
 80012b0:	fb00 f303 	mul.w	r3, r0, r3
 80012b4:	1ad3      	subs	r3, r2, r3
 80012b6:	011b      	lsls	r3, r3, #4
 80012b8:	3332      	adds	r3, #50	; 0x32
 80012ba:	4a18      	ldr	r2, [pc, #96]	; (800131c <LL_USART_SetBaudRate+0xb8>)
 80012bc:	fba2 2303 	umull	r2, r3, r2, r3
 80012c0:	095b      	lsrs	r3, r3, #5
 80012c2:	b29b      	uxth	r3, r3
 80012c4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80012c8:	b29b      	uxth	r3, r3
 80012ca:	440b      	add	r3, r1
 80012cc:	b299      	uxth	r1, r3
 80012ce:	68ba      	ldr	r2, [r7, #8]
 80012d0:	4613      	mov	r3, r2
 80012d2:	009b      	lsls	r3, r3, #2
 80012d4:	4413      	add	r3, r2
 80012d6:	009a      	lsls	r2, r3, #2
 80012d8:	441a      	add	r2, r3
 80012da:	687b      	ldr	r3, [r7, #4]
 80012dc:	009b      	lsls	r3, r3, #2
 80012de:	fbb2 f2f3 	udiv	r2, r2, r3
 80012e2:	4b0e      	ldr	r3, [pc, #56]	; (800131c <LL_USART_SetBaudRate+0xb8>)
 80012e4:	fba3 0302 	umull	r0, r3, r3, r2
 80012e8:	095b      	lsrs	r3, r3, #5
 80012ea:	2064      	movs	r0, #100	; 0x64
 80012ec:	fb00 f303 	mul.w	r3, r0, r3
 80012f0:	1ad3      	subs	r3, r2, r3
 80012f2:	011b      	lsls	r3, r3, #4
 80012f4:	3332      	adds	r3, #50	; 0x32
 80012f6:	4a09      	ldr	r2, [pc, #36]	; (800131c <LL_USART_SetBaudRate+0xb8>)
 80012f8:	fba2 2303 	umull	r2, r3, r2, r3
 80012fc:	095b      	lsrs	r3, r3, #5
 80012fe:	b29b      	uxth	r3, r3
 8001300:	f003 030f 	and.w	r3, r3, #15
 8001304:	b29b      	uxth	r3, r3
 8001306:	440b      	add	r3, r1
 8001308:	b29b      	uxth	r3, r3
 800130a:	461a      	mov	r2, r3
 800130c:	68fb      	ldr	r3, [r7, #12]
 800130e:	609a      	str	r2, [r3, #8]
 8001310:	bf00      	nop
 8001312:	3714      	adds	r7, #20
 8001314:	46bd      	mov	sp, r7
 8001316:	bc80      	pop	{r7}
 8001318:	4770      	bx	lr
 800131a:	bf00      	nop
 800131c:	51eb851f 	.word	0x51eb851f

08001320 <LL_USART_Init>:
 8001320:	b580      	push	{r7, lr}
 8001322:	b088      	sub	sp, #32
 8001324:	af00      	add	r7, sp, #0
 8001326:	6078      	str	r0, [r7, #4]
 8001328:	6039      	str	r1, [r7, #0]
 800132a:	2300      	movs	r3, #0
 800132c:	77fb      	strb	r3, [r7, #31]
 800132e:	2300      	movs	r3, #0
 8001330:	61bb      	str	r3, [r7, #24]
 8001332:	6878      	ldr	r0, [r7, #4]
 8001334:	f7ff ff5f 	bl	80011f6 <LL_USART_IsEnabled>
 8001338:	4603      	mov	r3, r0
 800133a:	2b00      	cmp	r3, #0
 800133c:	d153      	bne.n	80013e6 <LL_USART_Init+0xc6>
 800133e:	687b      	ldr	r3, [r7, #4]
 8001340:	68db      	ldr	r3, [r3, #12]
 8001342:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8001346:	f023 030c 	bic.w	r3, r3, #12
 800134a:	683a      	ldr	r2, [r7, #0]
 800134c:	6851      	ldr	r1, [r2, #4]
 800134e:	683a      	ldr	r2, [r7, #0]
 8001350:	68d2      	ldr	r2, [r2, #12]
 8001352:	4311      	orrs	r1, r2
 8001354:	683a      	ldr	r2, [r7, #0]
 8001356:	6912      	ldr	r2, [r2, #16]
 8001358:	430a      	orrs	r2, r1
 800135a:	431a      	orrs	r2, r3
 800135c:	687b      	ldr	r3, [r7, #4]
 800135e:	60da      	str	r2, [r3, #12]
 8001360:	683b      	ldr	r3, [r7, #0]
 8001362:	689b      	ldr	r3, [r3, #8]
 8001364:	4619      	mov	r1, r3
 8001366:	6878      	ldr	r0, [r7, #4]
 8001368:	f7ff ff58 	bl	800121c <LL_USART_SetStopBitsLength>
 800136c:	683b      	ldr	r3, [r7, #0]
 800136e:	695b      	ldr	r3, [r3, #20]
 8001370:	4619      	mov	r1, r3
 8001372:	6878      	ldr	r0, [r7, #4]
 8001374:	f7ff ff64 	bl	8001240 <LL_USART_SetHWFlowCtrl>
 8001378:	f107 0308 	add.w	r3, r7, #8
 800137c:	4618      	mov	r0, r3
 800137e:	f7ff fe11 	bl	8000fa4 <LL_RCC_GetSystemClocksFreq>
 8001382:	687b      	ldr	r3, [r7, #4]
 8001384:	4a1a      	ldr	r2, [pc, #104]	; (80013f0 <LL_USART_Init+0xd0>)
 8001386:	4293      	cmp	r3, r2
 8001388:	d102      	bne.n	8001390 <LL_USART_Init+0x70>
 800138a:	697b      	ldr	r3, [r7, #20]
 800138c:	61bb      	str	r3, [r7, #24]
 800138e:	e01a      	b.n	80013c6 <LL_USART_Init+0xa6>
 8001390:	687b      	ldr	r3, [r7, #4]
 8001392:	4a18      	ldr	r2, [pc, #96]	; (80013f4 <LL_USART_Init+0xd4>)
 8001394:	4293      	cmp	r3, r2
 8001396:	d102      	bne.n	800139e <LL_USART_Init+0x7e>
 8001398:	693b      	ldr	r3, [r7, #16]
 800139a:	61bb      	str	r3, [r7, #24]
 800139c:	e013      	b.n	80013c6 <LL_USART_Init+0xa6>
 800139e:	687b      	ldr	r3, [r7, #4]
 80013a0:	4a15      	ldr	r2, [pc, #84]	; (80013f8 <LL_USART_Init+0xd8>)
 80013a2:	4293      	cmp	r3, r2
 80013a4:	d102      	bne.n	80013ac <LL_USART_Init+0x8c>
 80013a6:	693b      	ldr	r3, [r7, #16]
 80013a8:	61bb      	str	r3, [r7, #24]
 80013aa:	e00c      	b.n	80013c6 <LL_USART_Init+0xa6>
 80013ac:	687b      	ldr	r3, [r7, #4]
 80013ae:	4a13      	ldr	r2, [pc, #76]	; (80013fc <LL_USART_Init+0xdc>)
 80013b0:	4293      	cmp	r3, r2
 80013b2:	d102      	bne.n	80013ba <LL_USART_Init+0x9a>
 80013b4:	693b      	ldr	r3, [r7, #16]
 80013b6:	61bb      	str	r3, [r7, #24]
 80013b8:	e005      	b.n	80013c6 <LL_USART_Init+0xa6>
 80013ba:	687b      	ldr	r3, [r7, #4]
 80013bc:	4a10      	ldr	r2, [pc, #64]	; (8001400 <LL_USART_Init+0xe0>)
 80013be:	4293      	cmp	r3, r2
 80013c0:	d101      	bne.n	80013c6 <LL_USART_Init+0xa6>
 80013c2:	693b      	ldr	r3, [r7, #16]
 80013c4:	61bb      	str	r3, [r7, #24]
 80013c6:	69bb      	ldr	r3, [r7, #24]
 80013c8:	2b00      	cmp	r3, #0
 80013ca:	d00c      	beq.n	80013e6 <LL_USART_Init+0xc6>
 80013cc:	683b      	ldr	r3, [r7, #0]
 80013ce:	681b      	ldr	r3, [r3, #0]
 80013d0:	2b00      	cmp	r3, #0
 80013d2:	d008      	beq.n	80013e6 <LL_USART_Init+0xc6>
 80013d4:	2301      	movs	r3, #1
 80013d6:	77fb      	strb	r3, [r7, #31]
 80013d8:	683b      	ldr	r3, [r7, #0]
 80013da:	681b      	ldr	r3, [r3, #0]
 80013dc:	461a      	mov	r2, r3
 80013de:	69b9      	ldr	r1, [r7, #24]
 80013e0:	6878      	ldr	r0, [r7, #4]
 80013e2:	f7ff ff3f 	bl	8001264 <LL_USART_SetBaudRate>
 80013e6:	7ffb      	ldrb	r3, [r7, #31]
 80013e8:	4618      	mov	r0, r3
 80013ea:	3720      	adds	r7, #32
 80013ec:	46bd      	mov	sp, r7
 80013ee:	bd80      	pop	{r7, pc}
 80013f0:	40013800 	.word	0x40013800
 80013f4:	40004400 	.word	0x40004400
 80013f8:	40004800 	.word	0x40004800
 80013fc:	40004c00 	.word	0x40004c00
 8001400:	40005000 	.word	0x40005000

08001404 <LL_APB2_GRP1_EnableClock>:
 8001404:	b480      	push	{r7}
 8001406:	b085      	sub	sp, #20
 8001408:	af00      	add	r7, sp, #0
 800140a:	6078      	str	r0, [r7, #4]
 800140c:	4b08      	ldr	r3, [pc, #32]	; (8001430 <LL_APB2_GRP1_EnableClock+0x2c>)
 800140e:	699a      	ldr	r2, [r3, #24]
 8001410:	4907      	ldr	r1, [pc, #28]	; (8001430 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001412:	687b      	ldr	r3, [r7, #4]
 8001414:	4313      	orrs	r3, r2
 8001416:	618b      	str	r3, [r1, #24]
 8001418:	4b05      	ldr	r3, [pc, #20]	; (8001430 <LL_APB2_GRP1_EnableClock+0x2c>)
 800141a:	699a      	ldr	r2, [r3, #24]
 800141c:	687b      	ldr	r3, [r7, #4]
 800141e:	4013      	ands	r3, r2
 8001420:	60fb      	str	r3, [r7, #12]
 8001422:	68fb      	ldr	r3, [r7, #12]
 8001424:	bf00      	nop
 8001426:	3714      	adds	r7, #20
 8001428:	46bd      	mov	sp, r7
 800142a:	bc80      	pop	{r7}
 800142c:	4770      	bx	lr
 800142e:	bf00      	nop
 8001430:	40021000 	.word	0x40021000

08001434 <LL_GPIO_ResetOutputPin>:
 8001434:	b480      	push	{r7}
 8001436:	b083      	sub	sp, #12
 8001438:	af00      	add	r7, sp, #0
 800143a:	6078      	str	r0, [r7, #4]
 800143c:	6039      	str	r1, [r7, #0]
 800143e:	683b      	ldr	r3, [r7, #0]
 8001440:	0a1b      	lsrs	r3, r3, #8
 8001442:	b29a      	uxth	r2, r3
 8001444:	687b      	ldr	r3, [r7, #4]
 8001446:	615a      	str	r2, [r3, #20]
 8001448:	bf00      	nop
 800144a:	370c      	adds	r7, #12
 800144c:	46bd      	mov	sp, r7
 800144e:	bc80      	pop	{r7}
 8001450:	4770      	bx	lr
	...

08001454 <MX_GPIO_Init>:
 8001454:	b580      	push	{r7, lr}
 8001456:	b086      	sub	sp, #24
 8001458:	af00      	add	r7, sp, #0
 800145a:	1d3b      	adds	r3, r7, #4
 800145c:	2200      	movs	r2, #0
 800145e:	601a      	str	r2, [r3, #0]
 8001460:	605a      	str	r2, [r3, #4]
 8001462:	609a      	str	r2, [r3, #8]
 8001464:	60da      	str	r2, [r3, #12]
 8001466:	611a      	str	r2, [r3, #16]
 8001468:	2020      	movs	r0, #32
 800146a:	f7ff ffcb 	bl	8001404 <LL_APB2_GRP1_EnableClock>
 800146e:	2008      	movs	r0, #8
 8001470:	f7ff ffc8 	bl	8001404 <LL_APB2_GRP1_EnableClock>
 8001474:	2004      	movs	r0, #4
 8001476:	f7ff ffc5 	bl	8001404 <LL_APB2_GRP1_EnableClock>
 800147a:	4914      	ldr	r1, [pc, #80]	; (80014cc <MX_GPIO_Init+0x78>)
 800147c:	4814      	ldr	r0, [pc, #80]	; (80014d0 <MX_GPIO_Init+0x7c>)
 800147e:	f7ff ffd9 	bl	8001434 <LL_GPIO_ResetOutputPin>
 8001482:	f240 4104 	movw	r1, #1028	; 0x404
 8001486:	4813      	ldr	r0, [pc, #76]	; (80014d4 <MX_GPIO_Init+0x80>)
 8001488:	f7ff ffd4 	bl	8001434 <LL_GPIO_ResetOutputPin>
 800148c:	4b0f      	ldr	r3, [pc, #60]	; (80014cc <MX_GPIO_Init+0x78>)
 800148e:	607b      	str	r3, [r7, #4]
 8001490:	2301      	movs	r3, #1
 8001492:	60bb      	str	r3, [r7, #8]
 8001494:	2302      	movs	r3, #2
 8001496:	60fb      	str	r3, [r7, #12]
 8001498:	2300      	movs	r3, #0
 800149a:	613b      	str	r3, [r7, #16]
 800149c:	1d3b      	adds	r3, r7, #4
 800149e:	4619      	mov	r1, r3
 80014a0:	480b      	ldr	r0, [pc, #44]	; (80014d0 <MX_GPIO_Init+0x7c>)
 80014a2:	f7ff fcc8 	bl	8000e36 <LL_GPIO_Init>
 80014a6:	f240 4304 	movw	r3, #1028	; 0x404
 80014aa:	607b      	str	r3, [r7, #4]
 80014ac:	2301      	movs	r3, #1
 80014ae:	60bb      	str	r3, [r7, #8]
 80014b0:	2302      	movs	r3, #2
 80014b2:	60fb      	str	r3, [r7, #12]
 80014b4:	2300      	movs	r3, #0
 80014b6:	613b      	str	r3, [r7, #16]
 80014b8:	1d3b      	adds	r3, r7, #4
 80014ba:	4619      	mov	r1, r3
 80014bc:	4805      	ldr	r0, [pc, #20]	; (80014d4 <MX_GPIO_Init+0x80>)
 80014be:	f7ff fcba 	bl	8000e36 <LL_GPIO_Init>
 80014c2:	bf00      	nop
 80014c4:	3718      	adds	r7, #24
 80014c6:	46bd      	mov	sp, r7
 80014c8:	bd80      	pop	{r7, pc}
 80014ca:	bf00      	nop
 80014cc:	04100010 	.word	0x04100010
 80014d0:	40010c00 	.word	0x40010c00
 80014d4:	40011400 	.word	0x40011400

080014d8 <LL_SPI_Enable>:
  * @rmtoll CR1          SPE           LL_SPI_Enable
  * @param  SPIx SPI Instance
  * @retval None
  */
__STATIC_INLINE void LL_SPI_Enable(SPI_TypeDef *SPIx)
{
 80014d8:	b480      	push	{r7}
 80014da:	b083      	sub	sp, #12
 80014dc:	af00      	add	r7, sp, #0
 80014de:	6078      	str	r0, [r7, #4]
  SET_BIT(SPIx->CR1, SPI_CR1_SPE);
 80014e0:	687b      	ldr	r3, [r7, #4]
 80014e2:	681b      	ldr	r3, [r3, #0]
 80014e4:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	601a      	str	r2, [r3, #0]
}
 80014ec:	bf00      	nop
 80014ee:	370c      	adds	r7, #12
 80014f0:	46bd      	mov	sp, r7
 80014f2:	bc80      	pop	{r7}
 80014f4:	4770      	bx	lr

080014f6 <LL_SPI_TransmitData8>:
  * @param  SPIx SPI Instance
  * @param  TxData Value between Min_Data=0x00 and Max_Data=0xFF
  * @retval None
  */
__STATIC_INLINE void LL_SPI_TransmitData8(SPI_TypeDef *SPIx, uint8_t TxData)
{
 80014f6:	b480      	push	{r7}
 80014f8:	b083      	sub	sp, #12
 80014fa:	af00      	add	r7, sp, #0
 80014fc:	6078      	str	r0, [r7, #4]
 80014fe:	460b      	mov	r3, r1
 8001500:	70fb      	strb	r3, [r7, #3]
  SPIx->DR = TxData;
 8001502:	78fa      	ldrb	r2, [r7, #3]
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	60da      	str	r2, [r3, #12]
}
 8001508:	bf00      	nop
 800150a:	370c      	adds	r7, #12
 800150c:	46bd      	mov	sp, r7
 800150e:	bc80      	pop	{r7}
 8001510:	4770      	bx	lr

08001512 <LL_USART_EnableIT_RXNE>:
  * @rmtoll CR1          RXNEIE        LL_USART_EnableIT_RXNE
  * @param  USARTx USART Instance
  * @retval None
  */
__STATIC_INLINE void LL_USART_EnableIT_RXNE(USART_TypeDef *USARTx)
{
 8001512:	b480      	push	{r7}
 8001514:	b083      	sub	sp, #12
 8001516:	af00      	add	r7, sp, #0
 8001518:	6078      	str	r0, [r7, #4]
  SET_BIT(USARTx->CR1, USART_CR1_RXNEIE);
 800151a:	687b      	ldr	r3, [r7, #4]
 800151c:	68db      	ldr	r3, [r3, #12]
 800151e:	f043 0220 	orr.w	r2, r3, #32
 8001522:	687b      	ldr	r3, [r7, #4]
 8001524:	60da      	str	r2, [r3, #12]
}
 8001526:	bf00      	nop
 8001528:	370c      	adds	r7, #12
 800152a:	46bd      	mov	sp, r7
 800152c:	bc80      	pop	{r7}
 800152e:	4770      	bx	lr

08001530 <LL_USART_TransmitData8>:
  * @param  USARTx USART Instance
  * @param  Value between Min_Data=0x00 and Max_Data=0xFF
  * @retval None
  */
__STATIC_INLINE void LL_USART_TransmitData8(USART_TypeDef *USARTx, uint8_t Value)
{
 8001530:	b480      	push	{r7}
 8001532:	b083      	sub	sp, #12
 8001534:	af00      	add	r7, sp, #0
 8001536:	6078      	str	r0, [r7, #4]
 8001538:	460b      	mov	r3, r1
 800153a:	70fb      	strb	r3, [r7, #3]
  USARTx->DR = Value;
 800153c:	78fa      	ldrb	r2, [r7, #3]
 800153e:	687b      	ldr	r3, [r7, #4]
 8001540:	605a      	str	r2, [r3, #4]
}
 8001542:	bf00      	nop
 8001544:	370c      	adds	r7, #12
 8001546:	46bd      	mov	sp, r7
 8001548:	bc80      	pop	{r7}
 800154a:	4770      	bx	lr

0800154c <LL_GPIO_SetOutputPin>:
  *         @arg @ref LL_GPIO_PIN_15
  *         @arg @ref LL_GPIO_PIN_ALL
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
{
 800154c:	b480      	push	{r7}
 800154e:	b083      	sub	sp, #12
 8001550:	af00      	add	r7, sp, #0
 8001552:	6078      	str	r0, [r7, #4]
 8001554:	6039      	str	r1, [r7, #0]
  WRITE_REG(GPIOx->BSRR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU);
 8001556:	683b      	ldr	r3, [r7, #0]
 8001558:	0a1b      	lsrs	r3, r3, #8
 800155a:	b29a      	uxth	r2, r3
 800155c:	687b      	ldr	r3, [r7, #4]
 800155e:	611a      	str	r2, [r3, #16]
}
 8001560:	bf00      	nop
 8001562:	370c      	adds	r7, #12
 8001564:	46bd      	mov	sp, r7
 8001566:	bc80      	pop	{r7}
 8001568:	4770      	bx	lr

0800156a <LL_GPIO_ResetOutputPin>:
  *         @arg @ref LL_GPIO_PIN_15
  *         @arg @ref LL_GPIO_PIN_ALL
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
{
 800156a:	b480      	push	{r7}
 800156c:	b083      	sub	sp, #12
 800156e:	af00      	add	r7, sp, #0
 8001570:	6078      	str	r0, [r7, #4]
 8001572:	6039      	str	r1, [r7, #0]
  WRITE_REG(GPIOx->BRR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU);
 8001574:	683b      	ldr	r3, [r7, #0]
 8001576:	0a1b      	lsrs	r3, r3, #8
 8001578:	b29a      	uxth	r2, r3
 800157a:	687b      	ldr	r3, [r7, #4]
 800157c:	615a      	str	r2, [r3, #20]
}
 800157e:	bf00      	nop
 8001580:	370c      	adds	r7, #12
 8001582:	46bd      	mov	sp, r7
 8001584:	bc80      	pop	{r7}
 8001586:	4770      	bx	lr

08001588 <_write>:
/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
/* USER CODE BEGIN PFP */

int _write(int file, char* pi, int len)
{
 8001588:	b580      	push	{r7, lr}
 800158a:	b086      	sub	sp, #24
 800158c:	af00      	add	r7, sp, #0
 800158e:	60f8      	str	r0, [r7, #12]
 8001590:	60b9      	str	r1, [r7, #8]
 8001592:	607a      	str	r2, [r7, #4]
	for(int i=0; i<len; i++)
 8001594:	2300      	movs	r3, #0
 8001596:	617b      	str	r3, [r7, #20]
 8001598:	e00d      	b.n	80015b6 <_write+0x2e>
	{
		LL_USART_TransmitData8(USART3, *(pi+i));
 800159a:	697b      	ldr	r3, [r7, #20]
 800159c:	68ba      	ldr	r2, [r7, #8]
 800159e:	4413      	add	r3, r2
 80015a0:	781b      	ldrb	r3, [r3, #0]
 80015a2:	4619      	mov	r1, r3
 80015a4:	4808      	ldr	r0, [pc, #32]	; (80015c8 <_write+0x40>)
 80015a6:	f7ff ffc3 	bl	8001530 <LL_USART_TransmitData8>
		HAL_Delay(1);
 80015aa:	2001      	movs	r0, #1
 80015ac:	f7fe fe9c 	bl	80002e8 <HAL_Delay>
	for(int i=0; i<len; i++)
 80015b0:	697b      	ldr	r3, [r7, #20]
 80015b2:	3301      	adds	r3, #1
 80015b4:	617b      	str	r3, [r7, #20]
 80015b6:	697a      	ldr	r2, [r7, #20]
 80015b8:	687b      	ldr	r3, [r7, #4]
 80015ba:	429a      	cmp	r2, r3
 80015bc:	dbed      	blt.n	800159a <_write+0x12>
	}

	return len;
 80015be:	687b      	ldr	r3, [r7, #4]
}
 80015c0:	4618      	mov	r0, r3
 80015c2:	3718      	adds	r7, #24
 80015c4:	46bd      	mov	sp, r7
 80015c6:	bd80      	pop	{r7, pc}
 80015c8:	40004800 	.word	0x40004800

080015cc <max7219SendToAll>:
	LL_SPI_TransmitData8(SPI2, Data);
	CS_HIGH;
}

void max7219SendToAll(uint8_t ADDR, uint8_t data)
{
 80015cc:	b580      	push	{r7, lr}
 80015ce:	b084      	sub	sp, #16
 80015d0:	af00      	add	r7, sp, #0
 80015d2:	4603      	mov	r3, r0
 80015d4:	460a      	mov	r2, r1
 80015d6:	71fb      	strb	r3, [r7, #7]
 80015d8:	4613      	mov	r3, r2
 80015da:	71bb      	strb	r3, [r7, #6]
	CS_LOW;
 80015dc:	490f      	ldr	r1, [pc, #60]	; (800161c <max7219SendToAll+0x50>)
 80015de:	4810      	ldr	r0, [pc, #64]	; (8001620 <max7219SendToAll+0x54>)
 80015e0:	f7ff ffc3 	bl	800156a <LL_GPIO_ResetOutputPin>
	for(int i=0; i<4; i++)
 80015e4:	2300      	movs	r3, #0
 80015e6:	60fb      	str	r3, [r7, #12]
 80015e8:	e00c      	b.n	8001604 <max7219SendToAll+0x38>
	{
		LL_SPI_TransmitData8(SPI2, ADDR);
 80015ea:	79fb      	ldrb	r3, [r7, #7]
 80015ec:	4619      	mov	r1, r3
 80015ee:	480d      	ldr	r0, [pc, #52]	; (8001624 <max7219SendToAll+0x58>)
 80015f0:	f7ff ff81 	bl	80014f6 <LL_SPI_TransmitData8>
		LL_SPI_TransmitData8(SPI2, data);
 80015f4:	79bb      	ldrb	r3, [r7, #6]
 80015f6:	4619      	mov	r1, r3
 80015f8:	480a      	ldr	r0, [pc, #40]	; (8001624 <max7219SendToAll+0x58>)
 80015fa:	f7ff ff7c 	bl	80014f6 <LL_SPI_TransmitData8>
	for(int i=0; i<4; i++)
 80015fe:	68fb      	ldr	r3, [r7, #12]
 8001600:	3301      	adds	r3, #1
 8001602:	60fb      	str	r3, [r7, #12]
 8001604:	68fb      	ldr	r3, [r7, #12]
 8001606:	2b03      	cmp	r3, #3
 8001608:	ddef      	ble.n	80015ea <max7219SendToAll+0x1e>
	}
	CS_HIGH;
 800160a:	4904      	ldr	r1, [pc, #16]	; (800161c <max7219SendToAll+0x50>)
 800160c:	4804      	ldr	r0, [pc, #16]	; (8001620 <max7219SendToAll+0x54>)
 800160e:	f7ff ff9d 	bl	800154c <LL_GPIO_SetOutputPin>
}
 8001612:	bf00      	nop
 8001614:	3710      	adds	r7, #16
 8001616:	46bd      	mov	sp, r7
 8001618:	bd80      	pop	{r7, pc}
 800161a:	bf00      	nop
 800161c:	04100010 	.word	0x04100010
 8001620:	40010c00 	.word	0x40010c00
 8001624:	40003800 	.word	0x40003800

08001628 <max7219SendDis>:

void max7219SendDis(uint8_t ADDR, uint8_t *buf)
{
 8001628:	b580      	push	{r7, lr}
 800162a:	b084      	sub	sp, #16
 800162c:	af00      	add	r7, sp, #0
 800162e:	4603      	mov	r3, r0
 8001630:	6039      	str	r1, [r7, #0]
 8001632:	71fb      	strb	r3, [r7, #7]
	uint8_t cnt = 4;
 8001634:	2304      	movs	r3, #4
 8001636:	73fb      	strb	r3, [r7, #15]
	CS_LOW;
 8001638:	4912      	ldr	r1, [pc, #72]	; (8001684 <max7219SendDis+0x5c>)
 800163a:	4813      	ldr	r0, [pc, #76]	; (8001688 <max7219SendDis+0x60>)
 800163c:	f7ff ff95 	bl	800156a <LL_GPIO_ResetOutputPin>
	uint8_t buffer = 0;
 8001640:	2300      	movs	r3, #0
 8001642:	73bb      	strb	r3, [r7, #14]
	while(cnt)
 8001644:	e012      	b.n	800166c <max7219SendDis+0x44>
	{
		buffer = *buf;
 8001646:	683b      	ldr	r3, [r7, #0]
 8001648:	781b      	ldrb	r3, [r3, #0]
 800164a:	73bb      	strb	r3, [r7, #14]
		LL_SPI_TransmitData8(SPI2, ADDR);
 800164c:	79fb      	ldrb	r3, [r7, #7]
 800164e:	4619      	mov	r1, r3
 8001650:	480e      	ldr	r0, [pc, #56]	; (800168c <max7219SendDis+0x64>)
 8001652:	f7ff ff50 	bl	80014f6 <LL_SPI_TransmitData8>
		LL_SPI_TransmitData8(SPI2, buffer);
 8001656:	7bbb      	ldrb	r3, [r7, #14]
 8001658:	4619      	mov	r1, r3
 800165a:	480c      	ldr	r0, [pc, #48]	; (800168c <max7219SendDis+0x64>)
 800165c:	f7ff ff4b 	bl	80014f6 <LL_SPI_TransmitData8>
		*buf++;
 8001660:	683b      	ldr	r3, [r7, #0]
 8001662:	3301      	adds	r3, #1
 8001664:	603b      	str	r3, [r7, #0]
		cnt--;
 8001666:	7bfb      	ldrb	r3, [r7, #15]
 8001668:	3b01      	subs	r3, #1
 800166a:	73fb      	strb	r3, [r7, #15]
	while(cnt)
 800166c:	7bfb      	ldrb	r3, [r7, #15]
 800166e:	2b00      	cmp	r3, #0
 8001670:	d1e9      	bne.n	8001646 <max7219SendDis+0x1e>
	}
	CS_HIGH;
 8001672:	4904      	ldr	r1, [pc, #16]	; (8001684 <max7219SendDis+0x5c>)
 8001674:	4804      	ldr	r0, [pc, #16]	; (8001688 <max7219SendDis+0x60>)
 8001676:	f7ff ff69 	bl	800154c <LL_GPIO_SetOutputPin>
}
 800167a:	bf00      	nop
 800167c:	3710      	adds	r7, #16
 800167e:	46bd      	mov	sp, r7
 8001680:	bd80      	pop	{r7, pc}
 8001682:	bf00      	nop
 8001684:	04100010 	.word	0x04100010
 8001688:	40010c00 	.word	0x40010c00
 800168c:	40003800 	.word	0x40003800

08001690 <max7219Init>:

void max7219Init(void)
{
 8001690:	b580      	push	{r7, lr}
 8001692:	af00      	add	r7, sp, #0
	max7219SendToAll(0x0B, 0x07);		// Scan Limit
 8001694:	2107      	movs	r1, #7
 8001696:	200b      	movs	r0, #11
 8001698:	f7ff ff98 	bl	80015cc <max7219SendToAll>
	max7219SendToAll(0x09, 0x00);		// Decode Mode
 800169c:	2100      	movs	r1, #0
 800169e:	2009      	movs	r0, #9
 80016a0:	f7ff ff94 	bl	80015cc <max7219SendToAll>
	max7219SendToAll(0x0C, 0x01);		// ShutDown Register (Normal Operation)
 80016a4:	2101      	movs	r1, #1
 80016a6:	200c      	movs	r0, #12
 80016a8:	f7ff ff90 	bl	80015cc <max7219SendToAll>
	max7219SendToAll(0x0A, 0x00);		// Intensity (0x00 ~ 0x0F)
 80016ac:	2100      	movs	r1, #0
 80016ae:	200a      	movs	r0, #10
 80016b0:	f7ff ff8c 	bl	80015cc <max7219SendToAll>
	max7219SendToAll(0x0F, 0x00);		// Display (Turns all LED on)
 80016b4:	2100      	movs	r1, #0
 80016b6:	200f      	movs	r0, #15
 80016b8:	f7ff ff88 	bl	80015cc <max7219SendToAll>
}
 80016bc:	bf00      	nop
 80016be:	bd80      	pop	{r7, pc}

080016c0 <max7219Clear>:

void max7219Clear(void)
{
 80016c0:	b580      	push	{r7, lr}
 80016c2:	b082      	sub	sp, #8
 80016c4:	af00      	add	r7, sp, #0
	for(int i=1; i<9; i++)	max7219SendToAll(i, 0);
 80016c6:	2301      	movs	r3, #1
 80016c8:	607b      	str	r3, [r7, #4]
 80016ca:	e008      	b.n	80016de <max7219Clear+0x1e>
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	b2db      	uxtb	r3, r3
 80016d0:	2100      	movs	r1, #0
 80016d2:	4618      	mov	r0, r3
 80016d4:	f7ff ff7a 	bl	80015cc <max7219SendToAll>
 80016d8:	687b      	ldr	r3, [r7, #4]
 80016da:	3301      	adds	r3, #1
 80016dc:	607b      	str	r3, [r7, #4]
 80016de:	687b      	ldr	r3, [r7, #4]
 80016e0:	2b08      	cmp	r3, #8
 80016e2:	ddf3      	ble.n	80016cc <max7219Clear+0xc>
}
 80016e4:	bf00      	nop
 80016e6:	3708      	adds	r7, #8
 80016e8:	46bd      	mov	sp, r7
 80016ea:	bd80      	pop	{r7, pc}

080016ec <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80016ec:	b580      	push	{r7, lr}
 80016ee:	b084      	sub	sp, #16
 80016f0:	af00      	add	r7, sp, #0
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 80016f2:	f7fe fd97 	bl	8000224 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80016f6:	f000 f863 	bl	80017c0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80016fa:	f7ff feab 	bl	8001454 <MX_GPIO_Init>
  MX_SPI2_Init();
 80016fe:	f000 f8db 	bl	80018b8 <MX_SPI2_Init>
  MX_USART3_UART_Init();
 8001702:	f000 fb59 	bl	8001db8 <MX_USART3_UART_Init>
  /* USER CODE BEGIN 2 */
  LL_SPI_Enable(SPI2);
 8001706:	482a      	ldr	r0, [pc, #168]	; (80017b0 <main+0xc4>)
 8001708:	f7ff fee6 	bl	80014d8 <LL_SPI_Enable>
  LL_USART_EnableIT_RXNE(USART3);
 800170c:	4829      	ldr	r0, [pc, #164]	; (80017b4 <main+0xc8>)
 800170e:	f7ff ff00 	bl	8001512 <LL_USART_EnableIT_RXNE>


  max7219Init();
 8001712:	f7ff ffbd 	bl	8001690 <max7219Init>
  HAL_Delay(1000);
 8001716:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800171a:	f7fe fde5 	bl	80002e8 <HAL_Delay>
  max7219Clear();
 800171e:	f7ff ffcf 	bl	80016c0 <max7219Clear>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  printf("EXAMPLE TETRIS\r\n");
 8001722:	4825      	ldr	r0, [pc, #148]	; (80017b8 <main+0xcc>)
 8001724:	f000 fc62 	bl	8001fec <puts>


  uint8_t buf[4];
  uint8_t i = 0, digit = 1;
 8001728:	2300      	movs	r3, #0
 800172a:	71fb      	strb	r3, [r7, #7]
 800172c:	2301      	movs	r3, #1
 800172e:	71bb      	strb	r3, [r7, #6]
  uint8_t x = 3;
 8001730:	2303      	movs	r3, #3
 8001732:	717b      	strb	r3, [r7, #5]

  uint8_t rotate = 0;
 8001734:	2300      	movs	r3, #0
 8001736:	713b      	strb	r3, [r7, #4]
//	  max7219SendDis(5, buf);	// SCAN
//	  max7219SendDis(6, buf);	// SCAN
//	  max7219SendDis(7, buf);	// SCAN
//	  max7219SendDis(8, buf);	// SCAN

	  for(int i=0; i<8; i++)
 8001738:	2300      	movs	r3, #0
 800173a:	60fb      	str	r3, [r7, #12]
 800173c:	e034      	b.n	80017a8 <main+0xbc>
	  {
		  for(int j=0; j<16; j++)
 800173e:	2300      	movs	r3, #0
 8001740:	60bb      	str	r3, [r7, #8]
 8001742:	e01a      	b.n	800177a <main+0x8e>
		  {
			  buf[j/8] |= 0xFF & playPlace[j][i];
 8001744:	68bb      	ldr	r3, [r7, #8]
 8001746:	2b00      	cmp	r3, #0
 8001748:	da00      	bge.n	800174c <main+0x60>
 800174a:	3307      	adds	r3, #7
 800174c:	10db      	asrs	r3, r3, #3
 800174e:	f107 0210 	add.w	r2, r7, #16
 8001752:	441a      	add	r2, r3
 8001754:	f812 1c10 	ldrb.w	r1, [r2, #-16]
 8001758:	4818      	ldr	r0, [pc, #96]	; (80017bc <main+0xd0>)
 800175a:	68ba      	ldr	r2, [r7, #8]
 800175c:	00d2      	lsls	r2, r2, #3
 800175e:	4410      	add	r0, r2
 8001760:	68fa      	ldr	r2, [r7, #12]
 8001762:	4402      	add	r2, r0
 8001764:	7812      	ldrb	r2, [r2, #0]
 8001766:	430a      	orrs	r2, r1
 8001768:	b2d2      	uxtb	r2, r2
 800176a:	f107 0110 	add.w	r1, r7, #16
 800176e:	440b      	add	r3, r1
 8001770:	f803 2c10 	strb.w	r2, [r3, #-16]
		  for(int j=0; j<16; j++)
 8001774:	68bb      	ldr	r3, [r7, #8]
 8001776:	3301      	adds	r3, #1
 8001778:	60bb      	str	r3, [r7, #8]
 800177a:	68bb      	ldr	r3, [r7, #8]
 800177c:	2b0f      	cmp	r3, #15
 800177e:	dde1      	ble.n	8001744 <main+0x58>
		  }
	  	  max7219SendDis(i+1, buf);
 8001780:	68fb      	ldr	r3, [r7, #12]
 8001782:	b2db      	uxtb	r3, r3
 8001784:	3301      	adds	r3, #1
 8001786:	b2db      	uxtb	r3, r3
 8001788:	463a      	mov	r2, r7
 800178a:	4611      	mov	r1, r2
 800178c:	4618      	mov	r0, r3
 800178e:	f7ff ff4b 	bl	8001628 <max7219SendDis>
	  	  buf[0] = 0;
 8001792:	2300      	movs	r3, #0
 8001794:	703b      	strb	r3, [r7, #0]
	  	  buf[1] = 0;
 8001796:	2300      	movs	r3, #0
 8001798:	707b      	strb	r3, [r7, #1]
	  	  buf[2] = 0;
 800179a:	2300      	movs	r3, #0
 800179c:	70bb      	strb	r3, [r7, #2]
	  	  buf[3] = 0;
 800179e:	2300      	movs	r3, #0
 80017a0:	70fb      	strb	r3, [r7, #3]
	  for(int i=0; i<8; i++)
 80017a2:	68fb      	ldr	r3, [r7, #12]
 80017a4:	3301      	adds	r3, #1
 80017a6:	60fb      	str	r3, [r7, #12]
 80017a8:	68fb      	ldr	r3, [r7, #12]
 80017aa:	2b07      	cmp	r3, #7
 80017ac:	ddc7      	ble.n	800173e <main+0x52>
 80017ae:	e7c3      	b.n	8001738 <main+0x4c>
 80017b0:	40003800 	.word	0x40003800
 80017b4:	40004800 	.word	0x40004800
 80017b8:	0800282c 	.word	0x0800282c
 80017bc:	20000008 	.word	0x20000008

080017c0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80017c0:	b580      	push	{r7, lr}
 80017c2:	b090      	sub	sp, #64	; 0x40
 80017c4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80017c6:	f107 0318 	add.w	r3, r7, #24
 80017ca:	2228      	movs	r2, #40	; 0x28
 80017cc:	2100      	movs	r1, #0
 80017ce:	4618      	mov	r0, r3
 80017d0:	f000 fba8 	bl	8001f24 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80017d4:	1d3b      	adds	r3, r7, #4
 80017d6:	2200      	movs	r2, #0
 80017d8:	601a      	str	r2, [r3, #0]
 80017da:	605a      	str	r2, [r3, #4]
 80017dc:	609a      	str	r2, [r3, #8]
 80017de:	60da      	str	r2, [r3, #12]
 80017e0:	611a      	str	r2, [r3, #16]

  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80017e2:	2301      	movs	r3, #1
 80017e4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80017e6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80017ea:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80017ec:	2300      	movs	r3, #0
 80017ee:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80017f0:	2301      	movs	r3, #1
 80017f2:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80017f4:	2302      	movs	r3, #2
 80017f6:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80017f8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80017fc:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80017fe:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8001802:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001804:	f107 0318 	add.w	r3, r7, #24
 8001808:	4618      	mov	r0, r3
 800180a:	f7fe fe73 	bl	80004f4 <HAL_RCC_OscConfig>
 800180e:	4603      	mov	r3, r0
 8001810:	2b00      	cmp	r3, #0
 8001812:	d001      	beq.n	8001818 <SystemClock_Config+0x58>
  {
    Error_Handler();
 8001814:	f000 f819 	bl	800184a <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001818:	230f      	movs	r3, #15
 800181a:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800181c:	2302      	movs	r3, #2
 800181e:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001820:	2300      	movs	r3, #0
 8001822:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001824:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001828:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800182a:	2300      	movs	r3, #0
 800182c:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800182e:	1d3b      	adds	r3, r7, #4
 8001830:	2102      	movs	r1, #2
 8001832:	4618      	mov	r0, r3
 8001834:	f7ff f8c2 	bl	80009bc <HAL_RCC_ClockConfig>
 8001838:	4603      	mov	r3, r0
 800183a:	2b00      	cmp	r3, #0
 800183c:	d001      	beq.n	8001842 <SystemClock_Config+0x82>
  {
    Error_Handler();
 800183e:	f000 f804 	bl	800184a <Error_Handler>
  }
}
 8001842:	bf00      	nop
 8001844:	3740      	adds	r7, #64	; 0x40
 8001846:	46bd      	mov	sp, r7
 8001848:	bd80      	pop	{r7, pc}

0800184a <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800184a:	b480      	push	{r7}
 800184c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 800184e:	bf00      	nop
 8001850:	46bd      	mov	sp, r7
 8001852:	bc80      	pop	{r7}
 8001854:	4770      	bx	lr
	...

08001858 <LL_APB1_GRP1_EnableClock>:
 8001858:	b480      	push	{r7}
 800185a:	b085      	sub	sp, #20
 800185c:	af00      	add	r7, sp, #0
 800185e:	6078      	str	r0, [r7, #4]
 8001860:	4b08      	ldr	r3, [pc, #32]	; (8001884 <LL_APB1_GRP1_EnableClock+0x2c>)
 8001862:	69da      	ldr	r2, [r3, #28]
 8001864:	4907      	ldr	r1, [pc, #28]	; (8001884 <LL_APB1_GRP1_EnableClock+0x2c>)
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	4313      	orrs	r3, r2
 800186a:	61cb      	str	r3, [r1, #28]
 800186c:	4b05      	ldr	r3, [pc, #20]	; (8001884 <LL_APB1_GRP1_EnableClock+0x2c>)
 800186e:	69da      	ldr	r2, [r3, #28]
 8001870:	687b      	ldr	r3, [r7, #4]
 8001872:	4013      	ands	r3, r2
 8001874:	60fb      	str	r3, [r7, #12]
 8001876:	68fb      	ldr	r3, [r7, #12]
 8001878:	bf00      	nop
 800187a:	3714      	adds	r7, #20
 800187c:	46bd      	mov	sp, r7
 800187e:	bc80      	pop	{r7}
 8001880:	4770      	bx	lr
 8001882:	bf00      	nop
 8001884:	40021000 	.word	0x40021000

08001888 <LL_APB2_GRP1_EnableClock>:
 8001888:	b480      	push	{r7}
 800188a:	b085      	sub	sp, #20
 800188c:	af00      	add	r7, sp, #0
 800188e:	6078      	str	r0, [r7, #4]
 8001890:	4b08      	ldr	r3, [pc, #32]	; (80018b4 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001892:	699a      	ldr	r2, [r3, #24]
 8001894:	4907      	ldr	r1, [pc, #28]	; (80018b4 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001896:	687b      	ldr	r3, [r7, #4]
 8001898:	4313      	orrs	r3, r2
 800189a:	618b      	str	r3, [r1, #24]
 800189c:	4b05      	ldr	r3, [pc, #20]	; (80018b4 <LL_APB2_GRP1_EnableClock+0x2c>)
 800189e:	699a      	ldr	r2, [r3, #24]
 80018a0:	687b      	ldr	r3, [r7, #4]
 80018a2:	4013      	ands	r3, r2
 80018a4:	60fb      	str	r3, [r7, #12]
 80018a6:	68fb      	ldr	r3, [r7, #12]
 80018a8:	bf00      	nop
 80018aa:	3714      	adds	r7, #20
 80018ac:	46bd      	mov	sp, r7
 80018ae:	bc80      	pop	{r7}
 80018b0:	4770      	bx	lr
 80018b2:	bf00      	nop
 80018b4:	40021000 	.word	0x40021000

080018b8 <MX_SPI2_Init>:
 80018b8:	b580      	push	{r7, lr}
 80018ba:	b090      	sub	sp, #64	; 0x40
 80018bc:	af00      	add	r7, sp, #0
 80018be:	f107 0318 	add.w	r3, r7, #24
 80018c2:	2228      	movs	r2, #40	; 0x28
 80018c4:	2100      	movs	r1, #0
 80018c6:	4618      	mov	r0, r3
 80018c8:	f000 fb2c 	bl	8001f24 <memset>
 80018cc:	1d3b      	adds	r3, r7, #4
 80018ce:	2200      	movs	r2, #0
 80018d0:	601a      	str	r2, [r3, #0]
 80018d2:	605a      	str	r2, [r3, #4]
 80018d4:	609a      	str	r2, [r3, #8]
 80018d6:	60da      	str	r2, [r3, #12]
 80018d8:	611a      	str	r2, [r3, #16]
 80018da:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80018de:	f7ff ffbb 	bl	8001858 <LL_APB1_GRP1_EnableClock>
 80018e2:	2008      	movs	r0, #8
 80018e4:	f7ff ffd0 	bl	8001888 <LL_APB2_GRP1_EnableClock>
 80018e8:	4b1a      	ldr	r3, [pc, #104]	; (8001954 <MX_SPI2_Init+0x9c>)
 80018ea:	607b      	str	r3, [r7, #4]
 80018ec:	2309      	movs	r3, #9
 80018ee:	60bb      	str	r3, [r7, #8]
 80018f0:	2303      	movs	r3, #3
 80018f2:	60fb      	str	r3, [r7, #12]
 80018f4:	2300      	movs	r3, #0
 80018f6:	613b      	str	r3, [r7, #16]
 80018f8:	1d3b      	adds	r3, r7, #4
 80018fa:	4619      	mov	r1, r3
 80018fc:	4816      	ldr	r0, [pc, #88]	; (8001958 <MX_SPI2_Init+0xa0>)
 80018fe:	f7ff fa9a 	bl	8000e36 <LL_GPIO_Init>
 8001902:	4b16      	ldr	r3, [pc, #88]	; (800195c <MX_SPI2_Init+0xa4>)
 8001904:	607b      	str	r3, [r7, #4]
 8001906:	2304      	movs	r3, #4
 8001908:	60bb      	str	r3, [r7, #8]
 800190a:	1d3b      	adds	r3, r7, #4
 800190c:	4619      	mov	r1, r3
 800190e:	4812      	ldr	r0, [pc, #72]	; (8001958 <MX_SPI2_Init+0xa0>)
 8001910:	f7ff fa91 	bl	8000e36 <LL_GPIO_Init>
 8001914:	2300      	movs	r3, #0
 8001916:	61bb      	str	r3, [r7, #24]
 8001918:	f44f 7382 	mov.w	r3, #260	; 0x104
 800191c:	61fb      	str	r3, [r7, #28]
 800191e:	2300      	movs	r3, #0
 8001920:	623b      	str	r3, [r7, #32]
 8001922:	2300      	movs	r3, #0
 8001924:	627b      	str	r3, [r7, #36]	; 0x24
 8001926:	2300      	movs	r3, #0
 8001928:	62bb      	str	r3, [r7, #40]	; 0x28
 800192a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800192e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001930:	2300      	movs	r3, #0
 8001932:	633b      	str	r3, [r7, #48]	; 0x30
 8001934:	2300      	movs	r3, #0
 8001936:	637b      	str	r3, [r7, #52]	; 0x34
 8001938:	2300      	movs	r3, #0
 800193a:	63bb      	str	r3, [r7, #56]	; 0x38
 800193c:	230a      	movs	r3, #10
 800193e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001940:	f107 0318 	add.w	r3, r7, #24
 8001944:	4619      	mov	r1, r3
 8001946:	4806      	ldr	r0, [pc, #24]	; (8001960 <MX_SPI2_Init+0xa8>)
 8001948:	f7ff fc03 	bl	8001152 <LL_SPI_Init>
 800194c:	bf00      	nop
 800194e:	3740      	adds	r7, #64	; 0x40
 8001950:	46bd      	mov	sp, r7
 8001952:	bd80      	pop	{r7, pc}
 8001954:	04a000a0 	.word	0x04a000a0
 8001958:	40010c00 	.word	0x40010c00
 800195c:	04400040 	.word	0x04400040
 8001960:	40003800 	.word	0x40003800

08001964 <HAL_MspInit>:
 8001964:	b480      	push	{r7}
 8001966:	b085      	sub	sp, #20
 8001968:	af00      	add	r7, sp, #0
 800196a:	4b15      	ldr	r3, [pc, #84]	; (80019c0 <HAL_MspInit+0x5c>)
 800196c:	699b      	ldr	r3, [r3, #24]
 800196e:	4a14      	ldr	r2, [pc, #80]	; (80019c0 <HAL_MspInit+0x5c>)
 8001970:	f043 0301 	orr.w	r3, r3, #1
 8001974:	6193      	str	r3, [r2, #24]
 8001976:	4b12      	ldr	r3, [pc, #72]	; (80019c0 <HAL_MspInit+0x5c>)
 8001978:	699b      	ldr	r3, [r3, #24]
 800197a:	f003 0301 	and.w	r3, r3, #1
 800197e:	60bb      	str	r3, [r7, #8]
 8001980:	68bb      	ldr	r3, [r7, #8]
 8001982:	4b0f      	ldr	r3, [pc, #60]	; (80019c0 <HAL_MspInit+0x5c>)
 8001984:	69db      	ldr	r3, [r3, #28]
 8001986:	4a0e      	ldr	r2, [pc, #56]	; (80019c0 <HAL_MspInit+0x5c>)
 8001988:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800198c:	61d3      	str	r3, [r2, #28]
 800198e:	4b0c      	ldr	r3, [pc, #48]	; (80019c0 <HAL_MspInit+0x5c>)
 8001990:	69db      	ldr	r3, [r3, #28]
 8001992:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001996:	607b      	str	r3, [r7, #4]
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	4b0a      	ldr	r3, [pc, #40]	; (80019c4 <HAL_MspInit+0x60>)
 800199c:	685b      	ldr	r3, [r3, #4]
 800199e:	60fb      	str	r3, [r7, #12]
 80019a0:	68fb      	ldr	r3, [r7, #12]
 80019a2:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80019a6:	60fb      	str	r3, [r7, #12]
 80019a8:	68fb      	ldr	r3, [r7, #12]
 80019aa:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80019ae:	60fb      	str	r3, [r7, #12]
 80019b0:	4a04      	ldr	r2, [pc, #16]	; (80019c4 <HAL_MspInit+0x60>)
 80019b2:	68fb      	ldr	r3, [r7, #12]
 80019b4:	6053      	str	r3, [r2, #4]
 80019b6:	bf00      	nop
 80019b8:	3714      	adds	r7, #20
 80019ba:	46bd      	mov	sp, r7
 80019bc:	bc80      	pop	{r7}
 80019be:	4770      	bx	lr
 80019c0:	40021000 	.word	0x40021000
 80019c4:	40010000 	.word	0x40010000

080019c8 <LL_USART_IsActiveFlag_RXNE>:
 80019c8:	b480      	push	{r7}
 80019ca:	b083      	sub	sp, #12
 80019cc:	af00      	add	r7, sp, #0
 80019ce:	6078      	str	r0, [r7, #4]
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	681b      	ldr	r3, [r3, #0]
 80019d4:	f003 0320 	and.w	r3, r3, #32
 80019d8:	2b20      	cmp	r3, #32
 80019da:	bf0c      	ite	eq
 80019dc:	2301      	moveq	r3, #1
 80019de:	2300      	movne	r3, #0
 80019e0:	b2db      	uxtb	r3, r3
 80019e2:	4618      	mov	r0, r3
 80019e4:	370c      	adds	r7, #12
 80019e6:	46bd      	mov	sp, r7
 80019e8:	bc80      	pop	{r7}
 80019ea:	4770      	bx	lr

080019ec <LL_USART_ClearFlag_RXNE>:
 80019ec:	b480      	push	{r7}
 80019ee:	b083      	sub	sp, #12
 80019f0:	af00      	add	r7, sp, #0
 80019f2:	6078      	str	r0, [r7, #4]
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	f06f 0220 	mvn.w	r2, #32
 80019fa:	601a      	str	r2, [r3, #0]
 80019fc:	bf00      	nop
 80019fe:	370c      	adds	r7, #12
 8001a00:	46bd      	mov	sp, r7
 8001a02:	bc80      	pop	{r7}
 8001a04:	4770      	bx	lr

08001a06 <LL_USART_ReceiveData8>:
 8001a06:	b480      	push	{r7}
 8001a08:	b083      	sub	sp, #12
 8001a0a:	af00      	add	r7, sp, #0
 8001a0c:	6078      	str	r0, [r7, #4]
 8001a0e:	687b      	ldr	r3, [r7, #4]
 8001a10:	685b      	ldr	r3, [r3, #4]
 8001a12:	b2db      	uxtb	r3, r3
 8001a14:	4618      	mov	r0, r3
 8001a16:	370c      	adds	r7, #12
 8001a18:	46bd      	mov	sp, r7
 8001a1a:	bc80      	pop	{r7}
 8001a1c:	4770      	bx	lr

08001a1e <NMI_Handler>:
 8001a1e:	b480      	push	{r7}
 8001a20:	af00      	add	r7, sp, #0
 8001a22:	bf00      	nop
 8001a24:	46bd      	mov	sp, r7
 8001a26:	bc80      	pop	{r7}
 8001a28:	4770      	bx	lr

08001a2a <HardFault_Handler>:
 8001a2a:	b480      	push	{r7}
 8001a2c:	af00      	add	r7, sp, #0
 8001a2e:	e7fe      	b.n	8001a2e <HardFault_Handler+0x4>

08001a30 <MemManage_Handler>:
 8001a30:	b480      	push	{r7}
 8001a32:	af00      	add	r7, sp, #0
 8001a34:	e7fe      	b.n	8001a34 <MemManage_Handler+0x4>

08001a36 <BusFault_Handler>:
 8001a36:	b480      	push	{r7}
 8001a38:	af00      	add	r7, sp, #0
 8001a3a:	e7fe      	b.n	8001a3a <BusFault_Handler+0x4>

08001a3c <UsageFault_Handler>:
 8001a3c:	b480      	push	{r7}
 8001a3e:	af00      	add	r7, sp, #0
 8001a40:	e7fe      	b.n	8001a40 <UsageFault_Handler+0x4>

08001a42 <SVC_Handler>:
 8001a42:	b480      	push	{r7}
 8001a44:	af00      	add	r7, sp, #0
 8001a46:	bf00      	nop
 8001a48:	46bd      	mov	sp, r7
 8001a4a:	bc80      	pop	{r7}
 8001a4c:	4770      	bx	lr

08001a4e <DebugMon_Handler>:
 8001a4e:	b480      	push	{r7}
 8001a50:	af00      	add	r7, sp, #0
 8001a52:	bf00      	nop
 8001a54:	46bd      	mov	sp, r7
 8001a56:	bc80      	pop	{r7}
 8001a58:	4770      	bx	lr

08001a5a <PendSV_Handler>:
 8001a5a:	b480      	push	{r7}
 8001a5c:	af00      	add	r7, sp, #0
 8001a5e:	bf00      	nop
 8001a60:	46bd      	mov	sp, r7
 8001a62:	bc80      	pop	{r7}
 8001a64:	4770      	bx	lr

08001a66 <SysTick_Handler>:
 8001a66:	b580      	push	{r7, lr}
 8001a68:	af00      	add	r7, sp, #0
 8001a6a:	f7fe fc21 	bl	80002b0 <HAL_IncTick>
 8001a6e:	bf00      	nop
 8001a70:	bd80      	pop	{r7, pc}
	...

08001a74 <USART3_IRQHandler>:
 8001a74:	b580      	push	{r7, lr}
 8001a76:	af00      	add	r7, sp, #0
 8001a78:	480a      	ldr	r0, [pc, #40]	; (8001aa4 <USART3_IRQHandler+0x30>)
 8001a7a:	f7ff ffa5 	bl	80019c8 <LL_USART_IsActiveFlag_RXNE>
 8001a7e:	4603      	mov	r3, r0
 8001a80:	2b00      	cmp	r3, #0
 8001a82:	d00c      	beq.n	8001a9e <USART3_IRQHandler+0x2a>
 8001a84:	4807      	ldr	r0, [pc, #28]	; (8001aa4 <USART3_IRQHandler+0x30>)
 8001a86:	f7ff ffb1 	bl	80019ec <LL_USART_ClearFlag_RXNE>
 8001a8a:	4806      	ldr	r0, [pc, #24]	; (8001aa4 <USART3_IRQHandler+0x30>)
 8001a8c:	f7ff ffbb 	bl	8001a06 <LL_USART_ReceiveData8>
 8001a90:	4603      	mov	r3, r0
 8001a92:	461a      	mov	r2, r3
 8001a94:	4b04      	ldr	r3, [pc, #16]	; (8001aa8 <USART3_IRQHandler+0x34>)
 8001a96:	701a      	strb	r2, [r3, #0]
 8001a98:	4b04      	ldr	r3, [pc, #16]	; (8001aac <USART3_IRQHandler+0x38>)
 8001a9a:	2201      	movs	r2, #1
 8001a9c:	701a      	strb	r2, [r3, #0]
 8001a9e:	bf00      	nop
 8001aa0:	bd80      	pop	{r7, pc}
 8001aa2:	bf00      	nop
 8001aa4:	40004800 	.word	0x40004800
 8001aa8:	2000010c 	.word	0x2000010c
 8001aac:	2000010d 	.word	0x2000010d

08001ab0 <_read>:
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	b086      	sub	sp, #24
 8001ab4:	af00      	add	r7, sp, #0
 8001ab6:	60f8      	str	r0, [r7, #12]
 8001ab8:	60b9      	str	r1, [r7, #8]
 8001aba:	607a      	str	r2, [r7, #4]
 8001abc:	2300      	movs	r3, #0
 8001abe:	617b      	str	r3, [r7, #20]
 8001ac0:	e00a      	b.n	8001ad8 <_read+0x28>
 8001ac2:	f3af 8000 	nop.w
 8001ac6:	4601      	mov	r1, r0
 8001ac8:	68bb      	ldr	r3, [r7, #8]
 8001aca:	1c5a      	adds	r2, r3, #1
 8001acc:	60ba      	str	r2, [r7, #8]
 8001ace:	b2ca      	uxtb	r2, r1
 8001ad0:	701a      	strb	r2, [r3, #0]
 8001ad2:	697b      	ldr	r3, [r7, #20]
 8001ad4:	3301      	adds	r3, #1
 8001ad6:	617b      	str	r3, [r7, #20]
 8001ad8:	697a      	ldr	r2, [r7, #20]
 8001ada:	687b      	ldr	r3, [r7, #4]
 8001adc:	429a      	cmp	r2, r3
 8001ade:	dbf0      	blt.n	8001ac2 <_read+0x12>
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	4618      	mov	r0, r3
 8001ae4:	3718      	adds	r7, #24
 8001ae6:	46bd      	mov	sp, r7
 8001ae8:	bd80      	pop	{r7, pc}

08001aea <_close>:
 8001aea:	b480      	push	{r7}
 8001aec:	b083      	sub	sp, #12
 8001aee:	af00      	add	r7, sp, #0
 8001af0:	6078      	str	r0, [r7, #4]
 8001af2:	f04f 33ff 	mov.w	r3, #4294967295
 8001af6:	4618      	mov	r0, r3
 8001af8:	370c      	adds	r7, #12
 8001afa:	46bd      	mov	sp, r7
 8001afc:	bc80      	pop	{r7}
 8001afe:	4770      	bx	lr

08001b00 <_fstat>:
 8001b00:	b480      	push	{r7}
 8001b02:	b083      	sub	sp, #12
 8001b04:	af00      	add	r7, sp, #0
 8001b06:	6078      	str	r0, [r7, #4]
 8001b08:	6039      	str	r1, [r7, #0]
 8001b0a:	683b      	ldr	r3, [r7, #0]
 8001b0c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001b10:	605a      	str	r2, [r3, #4]
 8001b12:	2300      	movs	r3, #0
 8001b14:	4618      	mov	r0, r3
 8001b16:	370c      	adds	r7, #12
 8001b18:	46bd      	mov	sp, r7
 8001b1a:	bc80      	pop	{r7}
 8001b1c:	4770      	bx	lr

08001b1e <_isatty>:
 8001b1e:	b480      	push	{r7}
 8001b20:	b083      	sub	sp, #12
 8001b22:	af00      	add	r7, sp, #0
 8001b24:	6078      	str	r0, [r7, #4]
 8001b26:	2301      	movs	r3, #1
 8001b28:	4618      	mov	r0, r3
 8001b2a:	370c      	adds	r7, #12
 8001b2c:	46bd      	mov	sp, r7
 8001b2e:	bc80      	pop	{r7}
 8001b30:	4770      	bx	lr

08001b32 <_lseek>:
 8001b32:	b480      	push	{r7}
 8001b34:	b085      	sub	sp, #20
 8001b36:	af00      	add	r7, sp, #0
 8001b38:	60f8      	str	r0, [r7, #12]
 8001b3a:	60b9      	str	r1, [r7, #8]
 8001b3c:	607a      	str	r2, [r7, #4]
 8001b3e:	2300      	movs	r3, #0
 8001b40:	4618      	mov	r0, r3
 8001b42:	3714      	adds	r7, #20
 8001b44:	46bd      	mov	sp, r7
 8001b46:	bc80      	pop	{r7}
 8001b48:	4770      	bx	lr
	...

08001b4c <_sbrk>:
 8001b4c:	b580      	push	{r7, lr}
 8001b4e:	b084      	sub	sp, #16
 8001b50:	af00      	add	r7, sp, #0
 8001b52:	6078      	str	r0, [r7, #4]
 8001b54:	4b11      	ldr	r3, [pc, #68]	; (8001b9c <_sbrk+0x50>)
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	2b00      	cmp	r3, #0
 8001b5a:	d102      	bne.n	8001b62 <_sbrk+0x16>
 8001b5c:	4b0f      	ldr	r3, [pc, #60]	; (8001b9c <_sbrk+0x50>)
 8001b5e:	4a10      	ldr	r2, [pc, #64]	; (8001ba0 <_sbrk+0x54>)
 8001b60:	601a      	str	r2, [r3, #0]
 8001b62:	4b0e      	ldr	r3, [pc, #56]	; (8001b9c <_sbrk+0x50>)
 8001b64:	681b      	ldr	r3, [r3, #0]
 8001b66:	60fb      	str	r3, [r7, #12]
 8001b68:	4b0c      	ldr	r3, [pc, #48]	; (8001b9c <_sbrk+0x50>)
 8001b6a:	681a      	ldr	r2, [r3, #0]
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	4413      	add	r3, r2
 8001b70:	466a      	mov	r2, sp
 8001b72:	4293      	cmp	r3, r2
 8001b74:	d907      	bls.n	8001b86 <_sbrk+0x3a>
 8001b76:	f000 f9ab 	bl	8001ed0 <__errno>
 8001b7a:	4602      	mov	r2, r0
 8001b7c:	230c      	movs	r3, #12
 8001b7e:	6013      	str	r3, [r2, #0]
 8001b80:	f04f 33ff 	mov.w	r3, #4294967295
 8001b84:	e006      	b.n	8001b94 <_sbrk+0x48>
 8001b86:	4b05      	ldr	r3, [pc, #20]	; (8001b9c <_sbrk+0x50>)
 8001b88:	681a      	ldr	r2, [r3, #0]
 8001b8a:	687b      	ldr	r3, [r7, #4]
 8001b8c:	4413      	add	r3, r2
 8001b8e:	4a03      	ldr	r2, [pc, #12]	; (8001b9c <_sbrk+0x50>)
 8001b90:	6013      	str	r3, [r2, #0]
 8001b92:	68fb      	ldr	r3, [r7, #12]
 8001b94:	4618      	mov	r0, r3
 8001b96:	3710      	adds	r7, #16
 8001b98:	46bd      	mov	sp, r7
 8001b9a:	bd80      	pop	{r7, pc}
 8001b9c:	20000110 	.word	0x20000110
 8001ba0:	20000128 	.word	0x20000128

08001ba4 <SystemInit>:
 8001ba4:	b480      	push	{r7}
 8001ba6:	af00      	add	r7, sp, #0
 8001ba8:	4b15      	ldr	r3, [pc, #84]	; (8001c00 <SystemInit+0x5c>)
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	4a14      	ldr	r2, [pc, #80]	; (8001c00 <SystemInit+0x5c>)
 8001bae:	f043 0301 	orr.w	r3, r3, #1
 8001bb2:	6013      	str	r3, [r2, #0]
 8001bb4:	4b12      	ldr	r3, [pc, #72]	; (8001c00 <SystemInit+0x5c>)
 8001bb6:	685a      	ldr	r2, [r3, #4]
 8001bb8:	4911      	ldr	r1, [pc, #68]	; (8001c00 <SystemInit+0x5c>)
 8001bba:	4b12      	ldr	r3, [pc, #72]	; (8001c04 <SystemInit+0x60>)
 8001bbc:	4013      	ands	r3, r2
 8001bbe:	604b      	str	r3, [r1, #4]
 8001bc0:	4b0f      	ldr	r3, [pc, #60]	; (8001c00 <SystemInit+0x5c>)
 8001bc2:	681b      	ldr	r3, [r3, #0]
 8001bc4:	4a0e      	ldr	r2, [pc, #56]	; (8001c00 <SystemInit+0x5c>)
 8001bc6:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8001bca:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001bce:	6013      	str	r3, [r2, #0]
 8001bd0:	4b0b      	ldr	r3, [pc, #44]	; (8001c00 <SystemInit+0x5c>)
 8001bd2:	681b      	ldr	r3, [r3, #0]
 8001bd4:	4a0a      	ldr	r2, [pc, #40]	; (8001c00 <SystemInit+0x5c>)
 8001bd6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001bda:	6013      	str	r3, [r2, #0]
 8001bdc:	4b08      	ldr	r3, [pc, #32]	; (8001c00 <SystemInit+0x5c>)
 8001bde:	685b      	ldr	r3, [r3, #4]
 8001be0:	4a07      	ldr	r2, [pc, #28]	; (8001c00 <SystemInit+0x5c>)
 8001be2:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 8001be6:	6053      	str	r3, [r2, #4]
 8001be8:	4b05      	ldr	r3, [pc, #20]	; (8001c00 <SystemInit+0x5c>)
 8001bea:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8001bee:	609a      	str	r2, [r3, #8]
 8001bf0:	4b05      	ldr	r3, [pc, #20]	; (8001c08 <SystemInit+0x64>)
 8001bf2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001bf6:	609a      	str	r2, [r3, #8]
 8001bf8:	bf00      	nop
 8001bfa:	46bd      	mov	sp, r7
 8001bfc:	bc80      	pop	{r7}
 8001bfe:	4770      	bx	lr
 8001c00:	40021000 	.word	0x40021000
 8001c04:	f8ff0000 	.word	0xf8ff0000
 8001c08:	e000ed00 	.word	0xe000ed00

08001c0c <NVIC_GetPriorityGrouping>:
 8001c0c:	b480      	push	{r7}
 8001c0e:	af00      	add	r7, sp, #0
 8001c10:	4b04      	ldr	r3, [pc, #16]	; (8001c24 <NVIC_GetPriorityGrouping+0x18>)
 8001c12:	68db      	ldr	r3, [r3, #12]
 8001c14:	0a1b      	lsrs	r3, r3, #8
 8001c16:	f003 0307 	and.w	r3, r3, #7
 8001c1a:	4618      	mov	r0, r3
 8001c1c:	46bd      	mov	sp, r7
 8001c1e:	bc80      	pop	{r7}
 8001c20:	4770      	bx	lr
 8001c22:	bf00      	nop
 8001c24:	e000ed00 	.word	0xe000ed00

08001c28 <NVIC_EnableIRQ>:
 8001c28:	b480      	push	{r7}
 8001c2a:	b083      	sub	sp, #12
 8001c2c:	af00      	add	r7, sp, #0
 8001c2e:	4603      	mov	r3, r0
 8001c30:	71fb      	strb	r3, [r7, #7]
 8001c32:	79fb      	ldrb	r3, [r7, #7]
 8001c34:	f003 021f 	and.w	r2, r3, #31
 8001c38:	4906      	ldr	r1, [pc, #24]	; (8001c54 <NVIC_EnableIRQ+0x2c>)
 8001c3a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c3e:	095b      	lsrs	r3, r3, #5
 8001c40:	2001      	movs	r0, #1
 8001c42:	fa00 f202 	lsl.w	r2, r0, r2
 8001c46:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001c4a:	bf00      	nop
 8001c4c:	370c      	adds	r7, #12
 8001c4e:	46bd      	mov	sp, r7
 8001c50:	bc80      	pop	{r7}
 8001c52:	4770      	bx	lr
 8001c54:	e000e100 	.word	0xe000e100

08001c58 <NVIC_SetPriority>:
 8001c58:	b480      	push	{r7}
 8001c5a:	b083      	sub	sp, #12
 8001c5c:	af00      	add	r7, sp, #0
 8001c5e:	4603      	mov	r3, r0
 8001c60:	6039      	str	r1, [r7, #0]
 8001c62:	71fb      	strb	r3, [r7, #7]
 8001c64:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c68:	2b00      	cmp	r3, #0
 8001c6a:	da0b      	bge.n	8001c84 <NVIC_SetPriority+0x2c>
 8001c6c:	683b      	ldr	r3, [r7, #0]
 8001c6e:	b2da      	uxtb	r2, r3
 8001c70:	490c      	ldr	r1, [pc, #48]	; (8001ca4 <NVIC_SetPriority+0x4c>)
 8001c72:	79fb      	ldrb	r3, [r7, #7]
 8001c74:	f003 030f 	and.w	r3, r3, #15
 8001c78:	3b04      	subs	r3, #4
 8001c7a:	0112      	lsls	r2, r2, #4
 8001c7c:	b2d2      	uxtb	r2, r2
 8001c7e:	440b      	add	r3, r1
 8001c80:	761a      	strb	r2, [r3, #24]
 8001c82:	e009      	b.n	8001c98 <NVIC_SetPriority+0x40>
 8001c84:	683b      	ldr	r3, [r7, #0]
 8001c86:	b2da      	uxtb	r2, r3
 8001c88:	4907      	ldr	r1, [pc, #28]	; (8001ca8 <NVIC_SetPriority+0x50>)
 8001c8a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c8e:	0112      	lsls	r2, r2, #4
 8001c90:	b2d2      	uxtb	r2, r2
 8001c92:	440b      	add	r3, r1
 8001c94:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001c98:	bf00      	nop
 8001c9a:	370c      	adds	r7, #12
 8001c9c:	46bd      	mov	sp, r7
 8001c9e:	bc80      	pop	{r7}
 8001ca0:	4770      	bx	lr
 8001ca2:	bf00      	nop
 8001ca4:	e000ed00 	.word	0xe000ed00
 8001ca8:	e000e100 	.word	0xe000e100

08001cac <NVIC_EncodePriority>:
 8001cac:	b480      	push	{r7}
 8001cae:	b089      	sub	sp, #36	; 0x24
 8001cb0:	af00      	add	r7, sp, #0
 8001cb2:	60f8      	str	r0, [r7, #12]
 8001cb4:	60b9      	str	r1, [r7, #8]
 8001cb6:	607a      	str	r2, [r7, #4]
 8001cb8:	68fb      	ldr	r3, [r7, #12]
 8001cba:	f003 0307 	and.w	r3, r3, #7
 8001cbe:	61fb      	str	r3, [r7, #28]
 8001cc0:	69fb      	ldr	r3, [r7, #28]
 8001cc2:	f1c3 0307 	rsb	r3, r3, #7
 8001cc6:	2b04      	cmp	r3, #4
 8001cc8:	bf28      	it	cs
 8001cca:	2304      	movcs	r3, #4
 8001ccc:	61bb      	str	r3, [r7, #24]
 8001cce:	69fb      	ldr	r3, [r7, #28]
 8001cd0:	3304      	adds	r3, #4
 8001cd2:	2b06      	cmp	r3, #6
 8001cd4:	d902      	bls.n	8001cdc <NVIC_EncodePriority+0x30>
 8001cd6:	69fb      	ldr	r3, [r7, #28]
 8001cd8:	3b03      	subs	r3, #3
 8001cda:	e000      	b.n	8001cde <NVIC_EncodePriority+0x32>
 8001cdc:	2300      	movs	r3, #0
 8001cde:	617b      	str	r3, [r7, #20]
 8001ce0:	f04f 32ff 	mov.w	r2, #4294967295
 8001ce4:	69bb      	ldr	r3, [r7, #24]
 8001ce6:	fa02 f303 	lsl.w	r3, r2, r3
 8001cea:	43da      	mvns	r2, r3
 8001cec:	68bb      	ldr	r3, [r7, #8]
 8001cee:	401a      	ands	r2, r3
 8001cf0:	697b      	ldr	r3, [r7, #20]
 8001cf2:	409a      	lsls	r2, r3
 8001cf4:	f04f 31ff 	mov.w	r1, #4294967295
 8001cf8:	697b      	ldr	r3, [r7, #20]
 8001cfa:	fa01 f303 	lsl.w	r3, r1, r3
 8001cfe:	43d9      	mvns	r1, r3
 8001d00:	687b      	ldr	r3, [r7, #4]
 8001d02:	400b      	ands	r3, r1
 8001d04:	4313      	orrs	r3, r2
 8001d06:	4618      	mov	r0, r3
 8001d08:	3724      	adds	r7, #36	; 0x24
 8001d0a:	46bd      	mov	sp, r7
 8001d0c:	bc80      	pop	{r7}
 8001d0e:	4770      	bx	lr

08001d10 <LL_USART_Enable>:
 8001d10:	b480      	push	{r7}
 8001d12:	b083      	sub	sp, #12
 8001d14:	af00      	add	r7, sp, #0
 8001d16:	6078      	str	r0, [r7, #4]
 8001d18:	687b      	ldr	r3, [r7, #4]
 8001d1a:	68db      	ldr	r3, [r3, #12]
 8001d1c:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	60da      	str	r2, [r3, #12]
 8001d24:	bf00      	nop
 8001d26:	370c      	adds	r7, #12
 8001d28:	46bd      	mov	sp, r7
 8001d2a:	bc80      	pop	{r7}
 8001d2c:	4770      	bx	lr

08001d2e <LL_USART_ConfigAsyncMode>:
 8001d2e:	b480      	push	{r7}
 8001d30:	b083      	sub	sp, #12
 8001d32:	af00      	add	r7, sp, #0
 8001d34:	6078      	str	r0, [r7, #4]
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	691b      	ldr	r3, [r3, #16]
 8001d3a:	f423 4290 	bic.w	r2, r3, #18432	; 0x4800
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	611a      	str	r2, [r3, #16]
 8001d42:	687b      	ldr	r3, [r7, #4]
 8001d44:	695b      	ldr	r3, [r3, #20]
 8001d46:	f023 022a 	bic.w	r2, r3, #42	; 0x2a
 8001d4a:	687b      	ldr	r3, [r7, #4]
 8001d4c:	615a      	str	r2, [r3, #20]
 8001d4e:	bf00      	nop
 8001d50:	370c      	adds	r7, #12
 8001d52:	46bd      	mov	sp, r7
 8001d54:	bc80      	pop	{r7}
 8001d56:	4770      	bx	lr

08001d58 <LL_APB1_GRP1_EnableClock>:
 8001d58:	b480      	push	{r7}
 8001d5a:	b085      	sub	sp, #20
 8001d5c:	af00      	add	r7, sp, #0
 8001d5e:	6078      	str	r0, [r7, #4]
 8001d60:	4b08      	ldr	r3, [pc, #32]	; (8001d84 <LL_APB1_GRP1_EnableClock+0x2c>)
 8001d62:	69da      	ldr	r2, [r3, #28]
 8001d64:	4907      	ldr	r1, [pc, #28]	; (8001d84 <LL_APB1_GRP1_EnableClock+0x2c>)
 8001d66:	687b      	ldr	r3, [r7, #4]
 8001d68:	4313      	orrs	r3, r2
 8001d6a:	61cb      	str	r3, [r1, #28]
 8001d6c:	4b05      	ldr	r3, [pc, #20]	; (8001d84 <LL_APB1_GRP1_EnableClock+0x2c>)
 8001d6e:	69da      	ldr	r2, [r3, #28]
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	4013      	ands	r3, r2
 8001d74:	60fb      	str	r3, [r7, #12]
 8001d76:	68fb      	ldr	r3, [r7, #12]
 8001d78:	bf00      	nop
 8001d7a:	3714      	adds	r7, #20
 8001d7c:	46bd      	mov	sp, r7
 8001d7e:	bc80      	pop	{r7}
 8001d80:	4770      	bx	lr
 8001d82:	bf00      	nop
 8001d84:	40021000 	.word	0x40021000

08001d88 <LL_APB2_GRP1_EnableClock>:
 8001d88:	b480      	push	{r7}
 8001d8a:	b085      	sub	sp, #20
 8001d8c:	af00      	add	r7, sp, #0
 8001d8e:	6078      	str	r0, [r7, #4]
 8001d90:	4b08      	ldr	r3, [pc, #32]	; (8001db4 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001d92:	699a      	ldr	r2, [r3, #24]
 8001d94:	4907      	ldr	r1, [pc, #28]	; (8001db4 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001d96:	687b      	ldr	r3, [r7, #4]
 8001d98:	4313      	orrs	r3, r2
 8001d9a:	618b      	str	r3, [r1, #24]
 8001d9c:	4b05      	ldr	r3, [pc, #20]	; (8001db4 <LL_APB2_GRP1_EnableClock+0x2c>)
 8001d9e:	699a      	ldr	r2, [r3, #24]
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	4013      	ands	r3, r2
 8001da4:	60fb      	str	r3, [r7, #12]
 8001da6:	68fb      	ldr	r3, [r7, #12]
 8001da8:	bf00      	nop
 8001daa:	3714      	adds	r7, #20
 8001dac:	46bd      	mov	sp, r7
 8001dae:	bc80      	pop	{r7}
 8001db0:	4770      	bx	lr
 8001db2:	bf00      	nop
 8001db4:	40021000 	.word	0x40021000

08001db8 <MX_USART3_UART_Init>:
 8001db8:	b580      	push	{r7, lr}
 8001dba:	b08c      	sub	sp, #48	; 0x30
 8001dbc:	af00      	add	r7, sp, #0
 8001dbe:	f107 0318 	add.w	r3, r7, #24
 8001dc2:	2200      	movs	r2, #0
 8001dc4:	601a      	str	r2, [r3, #0]
 8001dc6:	605a      	str	r2, [r3, #4]
 8001dc8:	609a      	str	r2, [r3, #8]
 8001dca:	60da      	str	r2, [r3, #12]
 8001dcc:	611a      	str	r2, [r3, #16]
 8001dce:	615a      	str	r2, [r3, #20]
 8001dd0:	1d3b      	adds	r3, r7, #4
 8001dd2:	2200      	movs	r2, #0
 8001dd4:	601a      	str	r2, [r3, #0]
 8001dd6:	605a      	str	r2, [r3, #4]
 8001dd8:	609a      	str	r2, [r3, #8]
 8001dda:	60da      	str	r2, [r3, #12]
 8001ddc:	611a      	str	r2, [r3, #16]
 8001dde:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8001de2:	f7ff ffb9 	bl	8001d58 <LL_APB1_GRP1_EnableClock>
 8001de6:	2008      	movs	r0, #8
 8001de8:	f7ff ffce 	bl	8001d88 <LL_APB2_GRP1_EnableClock>
 8001dec:	4b21      	ldr	r3, [pc, #132]	; (8001e74 <MX_USART3_UART_Init+0xbc>)
 8001dee:	607b      	str	r3, [r7, #4]
 8001df0:	2309      	movs	r3, #9
 8001df2:	60bb      	str	r3, [r7, #8]
 8001df4:	2303      	movs	r3, #3
 8001df6:	60fb      	str	r3, [r7, #12]
 8001df8:	2300      	movs	r3, #0
 8001dfa:	613b      	str	r3, [r7, #16]
 8001dfc:	1d3b      	adds	r3, r7, #4
 8001dfe:	4619      	mov	r1, r3
 8001e00:	481d      	ldr	r0, [pc, #116]	; (8001e78 <MX_USART3_UART_Init+0xc0>)
 8001e02:	f7ff f818 	bl	8000e36 <LL_GPIO_Init>
 8001e06:	4b1d      	ldr	r3, [pc, #116]	; (8001e7c <MX_USART3_UART_Init+0xc4>)
 8001e08:	607b      	str	r3, [r7, #4]
 8001e0a:	2304      	movs	r3, #4
 8001e0c:	60bb      	str	r3, [r7, #8]
 8001e0e:	1d3b      	adds	r3, r7, #4
 8001e10:	4619      	mov	r1, r3
 8001e12:	4819      	ldr	r0, [pc, #100]	; (8001e78 <MX_USART3_UART_Init+0xc0>)
 8001e14:	f7ff f80f 	bl	8000e36 <LL_GPIO_Init>
 8001e18:	f7ff fef8 	bl	8001c0c <NVIC_GetPriorityGrouping>
 8001e1c:	4603      	mov	r3, r0
 8001e1e:	2200      	movs	r2, #0
 8001e20:	2100      	movs	r1, #0
 8001e22:	4618      	mov	r0, r3
 8001e24:	f7ff ff42 	bl	8001cac <NVIC_EncodePriority>
 8001e28:	4603      	mov	r3, r0
 8001e2a:	4619      	mov	r1, r3
 8001e2c:	2027      	movs	r0, #39	; 0x27
 8001e2e:	f7ff ff13 	bl	8001c58 <NVIC_SetPriority>
 8001e32:	2027      	movs	r0, #39	; 0x27
 8001e34:	f7ff fef8 	bl	8001c28 <NVIC_EnableIRQ>
 8001e38:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8001e3c:	61bb      	str	r3, [r7, #24]
 8001e3e:	2300      	movs	r3, #0
 8001e40:	61fb      	str	r3, [r7, #28]
 8001e42:	2300      	movs	r3, #0
 8001e44:	623b      	str	r3, [r7, #32]
 8001e46:	2300      	movs	r3, #0
 8001e48:	627b      	str	r3, [r7, #36]	; 0x24
 8001e4a:	230c      	movs	r3, #12
 8001e4c:	62bb      	str	r3, [r7, #40]	; 0x28
 8001e4e:	2300      	movs	r3, #0
 8001e50:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001e52:	f107 0318 	add.w	r3, r7, #24
 8001e56:	4619      	mov	r1, r3
 8001e58:	4809      	ldr	r0, [pc, #36]	; (8001e80 <MX_USART3_UART_Init+0xc8>)
 8001e5a:	f7ff fa61 	bl	8001320 <LL_USART_Init>
 8001e5e:	4808      	ldr	r0, [pc, #32]	; (8001e80 <MX_USART3_UART_Init+0xc8>)
 8001e60:	f7ff ff65 	bl	8001d2e <LL_USART_ConfigAsyncMode>
 8001e64:	4806      	ldr	r0, [pc, #24]	; (8001e80 <MX_USART3_UART_Init+0xc8>)
 8001e66:	f7ff ff53 	bl	8001d10 <LL_USART_Enable>
 8001e6a:	bf00      	nop
 8001e6c:	3730      	adds	r7, #48	; 0x30
 8001e6e:	46bd      	mov	sp, r7
 8001e70:	bd80      	pop	{r7, pc}
 8001e72:	bf00      	nop
 8001e74:	04040004 	.word	0x04040004
 8001e78:	40010c00 	.word	0x40010c00
 8001e7c:	04080008 	.word	0x04080008
 8001e80:	40004800 	.word	0x40004800

08001e84 <Reset_Handler>:
 8001e84:	2100      	movs	r1, #0
 8001e86:	e003      	b.n	8001e90 <LoopCopyDataInit>

08001e88 <CopyDataInit>:
 8001e88:	4b0b      	ldr	r3, [pc, #44]	; (8001eb8 <LoopFillZerobss+0x14>)
 8001e8a:	585b      	ldr	r3, [r3, r1]
 8001e8c:	5043      	str	r3, [r0, r1]
 8001e8e:	3104      	adds	r1, #4

08001e90 <LoopCopyDataInit>:
 8001e90:	480a      	ldr	r0, [pc, #40]	; (8001ebc <LoopFillZerobss+0x18>)
 8001e92:	4b0b      	ldr	r3, [pc, #44]	; (8001ec0 <LoopFillZerobss+0x1c>)
 8001e94:	1842      	adds	r2, r0, r1
 8001e96:	429a      	cmp	r2, r3
 8001e98:	d3f6      	bcc.n	8001e88 <CopyDataInit>
 8001e9a:	4a0a      	ldr	r2, [pc, #40]	; (8001ec4 <LoopFillZerobss+0x20>)
 8001e9c:	e002      	b.n	8001ea4 <LoopFillZerobss>

08001e9e <FillZerobss>:
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	f842 3b04 	str.w	r3, [r2], #4

08001ea4 <LoopFillZerobss>:
 8001ea4:	4b08      	ldr	r3, [pc, #32]	; (8001ec8 <LoopFillZerobss+0x24>)
 8001ea6:	429a      	cmp	r2, r3
 8001ea8:	d3f9      	bcc.n	8001e9e <FillZerobss>
 8001eaa:	f7ff fe7b 	bl	8001ba4 <SystemInit>
 8001eae:	f000 f815 	bl	8001edc <__libc_init_array>
 8001eb2:	f7ff fc1b 	bl	80016ec <main>
 8001eb6:	4770      	bx	lr
 8001eb8:	080028c0 	.word	0x080028c0
 8001ebc:	20000000 	.word	0x20000000
 8001ec0:	200000f0 	.word	0x200000f0
 8001ec4:	200000f0 	.word	0x200000f0
 8001ec8:	20000124 	.word	0x20000124

08001ecc <ADC1_2_IRQHandler>:
 8001ecc:	e7fe      	b.n	8001ecc <ADC1_2_IRQHandler>
	...

08001ed0 <__errno>:
 8001ed0:	4b01      	ldr	r3, [pc, #4]	; (8001ed8 <__errno+0x8>)
 8001ed2:	6818      	ldr	r0, [r3, #0]
 8001ed4:	4770      	bx	lr
 8001ed6:	bf00      	nop
 8001ed8:	2000008c 	.word	0x2000008c

08001edc <__libc_init_array>:
 8001edc:	b570      	push	{r4, r5, r6, lr}
 8001ede:	2500      	movs	r5, #0
 8001ee0:	4e0c      	ldr	r6, [pc, #48]	; (8001f14 <__libc_init_array+0x38>)
 8001ee2:	4c0d      	ldr	r4, [pc, #52]	; (8001f18 <__libc_init_array+0x3c>)
 8001ee4:	1ba4      	subs	r4, r4, r6
 8001ee6:	10a4      	asrs	r4, r4, #2
 8001ee8:	42a5      	cmp	r5, r4
 8001eea:	d109      	bne.n	8001f00 <__libc_init_array+0x24>
 8001eec:	f000 fc88 	bl	8002800 <_init>
 8001ef0:	2500      	movs	r5, #0
 8001ef2:	4e0a      	ldr	r6, [pc, #40]	; (8001f1c <__libc_init_array+0x40>)
 8001ef4:	4c0a      	ldr	r4, [pc, #40]	; (8001f20 <__libc_init_array+0x44>)
 8001ef6:	1ba4      	subs	r4, r4, r6
 8001ef8:	10a4      	asrs	r4, r4, #2
 8001efa:	42a5      	cmp	r5, r4
 8001efc:	d105      	bne.n	8001f0a <__libc_init_array+0x2e>
 8001efe:	bd70      	pop	{r4, r5, r6, pc}
 8001f00:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001f04:	4798      	blx	r3
 8001f06:	3501      	adds	r5, #1
 8001f08:	e7ee      	b.n	8001ee8 <__libc_init_array+0xc>
 8001f0a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001f0e:	4798      	blx	r3
 8001f10:	3501      	adds	r5, #1
 8001f12:	e7f2      	b.n	8001efa <__libc_init_array+0x1e>
 8001f14:	080028b8 	.word	0x080028b8
 8001f18:	080028b8 	.word	0x080028b8
 8001f1c:	080028b8 	.word	0x080028b8
 8001f20:	080028bc 	.word	0x080028bc

08001f24 <memset>:
 8001f24:	4603      	mov	r3, r0
 8001f26:	4402      	add	r2, r0
 8001f28:	4293      	cmp	r3, r2
 8001f2a:	d100      	bne.n	8001f2e <memset+0xa>
 8001f2c:	4770      	bx	lr
 8001f2e:	f803 1b01 	strb.w	r1, [r3], #1
 8001f32:	e7f9      	b.n	8001f28 <memset+0x4>

08001f34 <_puts_r>:
 8001f34:	b570      	push	{r4, r5, r6, lr}
 8001f36:	460e      	mov	r6, r1
 8001f38:	4605      	mov	r5, r0
 8001f3a:	b118      	cbz	r0, 8001f44 <_puts_r+0x10>
 8001f3c:	6983      	ldr	r3, [r0, #24]
 8001f3e:	b90b      	cbnz	r3, 8001f44 <_puts_r+0x10>
 8001f40:	f000 fa0c 	bl	800235c <__sinit>
 8001f44:	69ab      	ldr	r3, [r5, #24]
 8001f46:	68ac      	ldr	r4, [r5, #8]
 8001f48:	b913      	cbnz	r3, 8001f50 <_puts_r+0x1c>
 8001f4a:	4628      	mov	r0, r5
 8001f4c:	f000 fa06 	bl	800235c <__sinit>
 8001f50:	4b23      	ldr	r3, [pc, #140]	; (8001fe0 <_puts_r+0xac>)
 8001f52:	429c      	cmp	r4, r3
 8001f54:	d117      	bne.n	8001f86 <_puts_r+0x52>
 8001f56:	686c      	ldr	r4, [r5, #4]
 8001f58:	89a3      	ldrh	r3, [r4, #12]
 8001f5a:	071b      	lsls	r3, r3, #28
 8001f5c:	d51d      	bpl.n	8001f9a <_puts_r+0x66>
 8001f5e:	6923      	ldr	r3, [r4, #16]
 8001f60:	b1db      	cbz	r3, 8001f9a <_puts_r+0x66>
 8001f62:	3e01      	subs	r6, #1
 8001f64:	68a3      	ldr	r3, [r4, #8]
 8001f66:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001f6a:	3b01      	subs	r3, #1
 8001f6c:	60a3      	str	r3, [r4, #8]
 8001f6e:	b9e9      	cbnz	r1, 8001fac <_puts_r+0x78>
 8001f70:	2b00      	cmp	r3, #0
 8001f72:	da2e      	bge.n	8001fd2 <_puts_r+0x9e>
 8001f74:	4622      	mov	r2, r4
 8001f76:	210a      	movs	r1, #10
 8001f78:	4628      	mov	r0, r5
 8001f7a:	f000 f83f 	bl	8001ffc <__swbuf_r>
 8001f7e:	3001      	adds	r0, #1
 8001f80:	d011      	beq.n	8001fa6 <_puts_r+0x72>
 8001f82:	200a      	movs	r0, #10
 8001f84:	e011      	b.n	8001faa <_puts_r+0x76>
 8001f86:	4b17      	ldr	r3, [pc, #92]	; (8001fe4 <_puts_r+0xb0>)
 8001f88:	429c      	cmp	r4, r3
 8001f8a:	d101      	bne.n	8001f90 <_puts_r+0x5c>
 8001f8c:	68ac      	ldr	r4, [r5, #8]
 8001f8e:	e7e3      	b.n	8001f58 <_puts_r+0x24>
 8001f90:	4b15      	ldr	r3, [pc, #84]	; (8001fe8 <_puts_r+0xb4>)
 8001f92:	429c      	cmp	r4, r3
 8001f94:	bf08      	it	eq
 8001f96:	68ec      	ldreq	r4, [r5, #12]
 8001f98:	e7de      	b.n	8001f58 <_puts_r+0x24>
 8001f9a:	4621      	mov	r1, r4
 8001f9c:	4628      	mov	r0, r5
 8001f9e:	f000 f87f 	bl	80020a0 <__swsetup_r>
 8001fa2:	2800      	cmp	r0, #0
 8001fa4:	d0dd      	beq.n	8001f62 <_puts_r+0x2e>
 8001fa6:	f04f 30ff 	mov.w	r0, #4294967295
 8001faa:	bd70      	pop	{r4, r5, r6, pc}
 8001fac:	2b00      	cmp	r3, #0
 8001fae:	da04      	bge.n	8001fba <_puts_r+0x86>
 8001fb0:	69a2      	ldr	r2, [r4, #24]
 8001fb2:	429a      	cmp	r2, r3
 8001fb4:	dc06      	bgt.n	8001fc4 <_puts_r+0x90>
 8001fb6:	290a      	cmp	r1, #10
 8001fb8:	d004      	beq.n	8001fc4 <_puts_r+0x90>
 8001fba:	6823      	ldr	r3, [r4, #0]
 8001fbc:	1c5a      	adds	r2, r3, #1
 8001fbe:	6022      	str	r2, [r4, #0]
 8001fc0:	7019      	strb	r1, [r3, #0]
 8001fc2:	e7cf      	b.n	8001f64 <_puts_r+0x30>
 8001fc4:	4622      	mov	r2, r4
 8001fc6:	4628      	mov	r0, r5
 8001fc8:	f000 f818 	bl	8001ffc <__swbuf_r>
 8001fcc:	3001      	adds	r0, #1
 8001fce:	d1c9      	bne.n	8001f64 <_puts_r+0x30>
 8001fd0:	e7e9      	b.n	8001fa6 <_puts_r+0x72>
 8001fd2:	200a      	movs	r0, #10
 8001fd4:	6823      	ldr	r3, [r4, #0]
 8001fd6:	1c5a      	adds	r2, r3, #1
 8001fd8:	6022      	str	r2, [r4, #0]
 8001fda:	7018      	strb	r0, [r3, #0]
 8001fdc:	e7e5      	b.n	8001faa <_puts_r+0x76>
 8001fde:	bf00      	nop
 8001fe0:	08002878 	.word	0x08002878
 8001fe4:	08002898 	.word	0x08002898
 8001fe8:	08002858 	.word	0x08002858

08001fec <puts>:
 8001fec:	4b02      	ldr	r3, [pc, #8]	; (8001ff8 <puts+0xc>)
 8001fee:	4601      	mov	r1, r0
 8001ff0:	6818      	ldr	r0, [r3, #0]
 8001ff2:	f7ff bf9f 	b.w	8001f34 <_puts_r>
 8001ff6:	bf00      	nop
 8001ff8:	2000008c 	.word	0x2000008c

08001ffc <__swbuf_r>:
 8001ffc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ffe:	460e      	mov	r6, r1
 8002000:	4614      	mov	r4, r2
 8002002:	4605      	mov	r5, r0
 8002004:	b118      	cbz	r0, 800200e <__swbuf_r+0x12>
 8002006:	6983      	ldr	r3, [r0, #24]
 8002008:	b90b      	cbnz	r3, 800200e <__swbuf_r+0x12>
 800200a:	f000 f9a7 	bl	800235c <__sinit>
 800200e:	4b21      	ldr	r3, [pc, #132]	; (8002094 <__swbuf_r+0x98>)
 8002010:	429c      	cmp	r4, r3
 8002012:	d12a      	bne.n	800206a <__swbuf_r+0x6e>
 8002014:	686c      	ldr	r4, [r5, #4]
 8002016:	69a3      	ldr	r3, [r4, #24]
 8002018:	60a3      	str	r3, [r4, #8]
 800201a:	89a3      	ldrh	r3, [r4, #12]
 800201c:	071a      	lsls	r2, r3, #28
 800201e:	d52e      	bpl.n	800207e <__swbuf_r+0x82>
 8002020:	6923      	ldr	r3, [r4, #16]
 8002022:	b363      	cbz	r3, 800207e <__swbuf_r+0x82>
 8002024:	6923      	ldr	r3, [r4, #16]
 8002026:	6820      	ldr	r0, [r4, #0]
 8002028:	b2f6      	uxtb	r6, r6
 800202a:	1ac0      	subs	r0, r0, r3
 800202c:	6963      	ldr	r3, [r4, #20]
 800202e:	4637      	mov	r7, r6
 8002030:	4283      	cmp	r3, r0
 8002032:	dc04      	bgt.n	800203e <__swbuf_r+0x42>
 8002034:	4621      	mov	r1, r4
 8002036:	4628      	mov	r0, r5
 8002038:	f000 f926 	bl	8002288 <_fflush_r>
 800203c:	bb28      	cbnz	r0, 800208a <__swbuf_r+0x8e>
 800203e:	68a3      	ldr	r3, [r4, #8]
 8002040:	3001      	adds	r0, #1
 8002042:	3b01      	subs	r3, #1
 8002044:	60a3      	str	r3, [r4, #8]
 8002046:	6823      	ldr	r3, [r4, #0]
 8002048:	1c5a      	adds	r2, r3, #1
 800204a:	6022      	str	r2, [r4, #0]
 800204c:	701e      	strb	r6, [r3, #0]
 800204e:	6963      	ldr	r3, [r4, #20]
 8002050:	4283      	cmp	r3, r0
 8002052:	d004      	beq.n	800205e <__swbuf_r+0x62>
 8002054:	89a3      	ldrh	r3, [r4, #12]
 8002056:	07db      	lsls	r3, r3, #31
 8002058:	d519      	bpl.n	800208e <__swbuf_r+0x92>
 800205a:	2e0a      	cmp	r6, #10
 800205c:	d117      	bne.n	800208e <__swbuf_r+0x92>
 800205e:	4621      	mov	r1, r4
 8002060:	4628      	mov	r0, r5
 8002062:	f000 f911 	bl	8002288 <_fflush_r>
 8002066:	b190      	cbz	r0, 800208e <__swbuf_r+0x92>
 8002068:	e00f      	b.n	800208a <__swbuf_r+0x8e>
 800206a:	4b0b      	ldr	r3, [pc, #44]	; (8002098 <__swbuf_r+0x9c>)
 800206c:	429c      	cmp	r4, r3
 800206e:	d101      	bne.n	8002074 <__swbuf_r+0x78>
 8002070:	68ac      	ldr	r4, [r5, #8]
 8002072:	e7d0      	b.n	8002016 <__swbuf_r+0x1a>
 8002074:	4b09      	ldr	r3, [pc, #36]	; (800209c <__swbuf_r+0xa0>)
 8002076:	429c      	cmp	r4, r3
 8002078:	bf08      	it	eq
 800207a:	68ec      	ldreq	r4, [r5, #12]
 800207c:	e7cb      	b.n	8002016 <__swbuf_r+0x1a>
 800207e:	4621      	mov	r1, r4
 8002080:	4628      	mov	r0, r5
 8002082:	f000 f80d 	bl	80020a0 <__swsetup_r>
 8002086:	2800      	cmp	r0, #0
 8002088:	d0cc      	beq.n	8002024 <__swbuf_r+0x28>
 800208a:	f04f 37ff 	mov.w	r7, #4294967295
 800208e:	4638      	mov	r0, r7
 8002090:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002092:	bf00      	nop
 8002094:	08002878 	.word	0x08002878
 8002098:	08002898 	.word	0x08002898
 800209c:	08002858 	.word	0x08002858

080020a0 <__swsetup_r>:
 80020a0:	4b32      	ldr	r3, [pc, #200]	; (800216c <__swsetup_r+0xcc>)
 80020a2:	b570      	push	{r4, r5, r6, lr}
 80020a4:	681d      	ldr	r5, [r3, #0]
 80020a6:	4606      	mov	r6, r0
 80020a8:	460c      	mov	r4, r1
 80020aa:	b125      	cbz	r5, 80020b6 <__swsetup_r+0x16>
 80020ac:	69ab      	ldr	r3, [r5, #24]
 80020ae:	b913      	cbnz	r3, 80020b6 <__swsetup_r+0x16>
 80020b0:	4628      	mov	r0, r5
 80020b2:	f000 f953 	bl	800235c <__sinit>
 80020b6:	4b2e      	ldr	r3, [pc, #184]	; (8002170 <__swsetup_r+0xd0>)
 80020b8:	429c      	cmp	r4, r3
 80020ba:	d10f      	bne.n	80020dc <__swsetup_r+0x3c>
 80020bc:	686c      	ldr	r4, [r5, #4]
 80020be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80020c2:	b29a      	uxth	r2, r3
 80020c4:	0715      	lsls	r5, r2, #28
 80020c6:	d42c      	bmi.n	8002122 <__swsetup_r+0x82>
 80020c8:	06d0      	lsls	r0, r2, #27
 80020ca:	d411      	bmi.n	80020f0 <__swsetup_r+0x50>
 80020cc:	2209      	movs	r2, #9
 80020ce:	6032      	str	r2, [r6, #0]
 80020d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80020d4:	81a3      	strh	r3, [r4, #12]
 80020d6:	f04f 30ff 	mov.w	r0, #4294967295
 80020da:	e03e      	b.n	800215a <__swsetup_r+0xba>
 80020dc:	4b25      	ldr	r3, [pc, #148]	; (8002174 <__swsetup_r+0xd4>)
 80020de:	429c      	cmp	r4, r3
 80020e0:	d101      	bne.n	80020e6 <__swsetup_r+0x46>
 80020e2:	68ac      	ldr	r4, [r5, #8]
 80020e4:	e7eb      	b.n	80020be <__swsetup_r+0x1e>
 80020e6:	4b24      	ldr	r3, [pc, #144]	; (8002178 <__swsetup_r+0xd8>)
 80020e8:	429c      	cmp	r4, r3
 80020ea:	bf08      	it	eq
 80020ec:	68ec      	ldreq	r4, [r5, #12]
 80020ee:	e7e6      	b.n	80020be <__swsetup_r+0x1e>
 80020f0:	0751      	lsls	r1, r2, #29
 80020f2:	d512      	bpl.n	800211a <__swsetup_r+0x7a>
 80020f4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80020f6:	b141      	cbz	r1, 800210a <__swsetup_r+0x6a>
 80020f8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80020fc:	4299      	cmp	r1, r3
 80020fe:	d002      	beq.n	8002106 <__swsetup_r+0x66>
 8002100:	4630      	mov	r0, r6
 8002102:	f000 fa19 	bl	8002538 <_free_r>
 8002106:	2300      	movs	r3, #0
 8002108:	6363      	str	r3, [r4, #52]	; 0x34
 800210a:	89a3      	ldrh	r3, [r4, #12]
 800210c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8002110:	81a3      	strh	r3, [r4, #12]
 8002112:	2300      	movs	r3, #0
 8002114:	6063      	str	r3, [r4, #4]
 8002116:	6923      	ldr	r3, [r4, #16]
 8002118:	6023      	str	r3, [r4, #0]
 800211a:	89a3      	ldrh	r3, [r4, #12]
 800211c:	f043 0308 	orr.w	r3, r3, #8
 8002120:	81a3      	strh	r3, [r4, #12]
 8002122:	6923      	ldr	r3, [r4, #16]
 8002124:	b94b      	cbnz	r3, 800213a <__swsetup_r+0x9a>
 8002126:	89a3      	ldrh	r3, [r4, #12]
 8002128:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800212c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002130:	d003      	beq.n	800213a <__swsetup_r+0x9a>
 8002132:	4621      	mov	r1, r4
 8002134:	4630      	mov	r0, r6
 8002136:	f000 f9bf 	bl	80024b8 <__smakebuf_r>
 800213a:	89a2      	ldrh	r2, [r4, #12]
 800213c:	f012 0301 	ands.w	r3, r2, #1
 8002140:	d00c      	beq.n	800215c <__swsetup_r+0xbc>
 8002142:	2300      	movs	r3, #0
 8002144:	60a3      	str	r3, [r4, #8]
 8002146:	6963      	ldr	r3, [r4, #20]
 8002148:	425b      	negs	r3, r3
 800214a:	61a3      	str	r3, [r4, #24]
 800214c:	6923      	ldr	r3, [r4, #16]
 800214e:	b953      	cbnz	r3, 8002166 <__swsetup_r+0xc6>
 8002150:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002154:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8002158:	d1ba      	bne.n	80020d0 <__swsetup_r+0x30>
 800215a:	bd70      	pop	{r4, r5, r6, pc}
 800215c:	0792      	lsls	r2, r2, #30
 800215e:	bf58      	it	pl
 8002160:	6963      	ldrpl	r3, [r4, #20]
 8002162:	60a3      	str	r3, [r4, #8]
 8002164:	e7f2      	b.n	800214c <__swsetup_r+0xac>
 8002166:	2000      	movs	r0, #0
 8002168:	e7f7      	b.n	800215a <__swsetup_r+0xba>
 800216a:	bf00      	nop
 800216c:	2000008c 	.word	0x2000008c
 8002170:	08002878 	.word	0x08002878
 8002174:	08002898 	.word	0x08002898
 8002178:	08002858 	.word	0x08002858

0800217c <__sflush_r>:
 800217c:	898a      	ldrh	r2, [r1, #12]
 800217e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002182:	4605      	mov	r5, r0
 8002184:	0710      	lsls	r0, r2, #28
 8002186:	460c      	mov	r4, r1
 8002188:	d458      	bmi.n	800223c <__sflush_r+0xc0>
 800218a:	684b      	ldr	r3, [r1, #4]
 800218c:	2b00      	cmp	r3, #0
 800218e:	dc05      	bgt.n	800219c <__sflush_r+0x20>
 8002190:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8002192:	2b00      	cmp	r3, #0
 8002194:	dc02      	bgt.n	800219c <__sflush_r+0x20>
 8002196:	2000      	movs	r0, #0
 8002198:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800219c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800219e:	2e00      	cmp	r6, #0
 80021a0:	d0f9      	beq.n	8002196 <__sflush_r+0x1a>
 80021a2:	2300      	movs	r3, #0
 80021a4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80021a8:	682f      	ldr	r7, [r5, #0]
 80021aa:	6a21      	ldr	r1, [r4, #32]
 80021ac:	602b      	str	r3, [r5, #0]
 80021ae:	d032      	beq.n	8002216 <__sflush_r+0x9a>
 80021b0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80021b2:	89a3      	ldrh	r3, [r4, #12]
 80021b4:	075a      	lsls	r2, r3, #29
 80021b6:	d505      	bpl.n	80021c4 <__sflush_r+0x48>
 80021b8:	6863      	ldr	r3, [r4, #4]
 80021ba:	1ac0      	subs	r0, r0, r3
 80021bc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80021be:	b10b      	cbz	r3, 80021c4 <__sflush_r+0x48>
 80021c0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80021c2:	1ac0      	subs	r0, r0, r3
 80021c4:	2300      	movs	r3, #0
 80021c6:	4602      	mov	r2, r0
 80021c8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80021ca:	6a21      	ldr	r1, [r4, #32]
 80021cc:	4628      	mov	r0, r5
 80021ce:	47b0      	blx	r6
 80021d0:	1c43      	adds	r3, r0, #1
 80021d2:	89a3      	ldrh	r3, [r4, #12]
 80021d4:	d106      	bne.n	80021e4 <__sflush_r+0x68>
 80021d6:	6829      	ldr	r1, [r5, #0]
 80021d8:	291d      	cmp	r1, #29
 80021da:	d848      	bhi.n	800226e <__sflush_r+0xf2>
 80021dc:	4a29      	ldr	r2, [pc, #164]	; (8002284 <__sflush_r+0x108>)
 80021de:	40ca      	lsrs	r2, r1
 80021e0:	07d6      	lsls	r6, r2, #31
 80021e2:	d544      	bpl.n	800226e <__sflush_r+0xf2>
 80021e4:	2200      	movs	r2, #0
 80021e6:	6062      	str	r2, [r4, #4]
 80021e8:	6922      	ldr	r2, [r4, #16]
 80021ea:	04d9      	lsls	r1, r3, #19
 80021ec:	6022      	str	r2, [r4, #0]
 80021ee:	d504      	bpl.n	80021fa <__sflush_r+0x7e>
 80021f0:	1c42      	adds	r2, r0, #1
 80021f2:	d101      	bne.n	80021f8 <__sflush_r+0x7c>
 80021f4:	682b      	ldr	r3, [r5, #0]
 80021f6:	b903      	cbnz	r3, 80021fa <__sflush_r+0x7e>
 80021f8:	6560      	str	r0, [r4, #84]	; 0x54
 80021fa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80021fc:	602f      	str	r7, [r5, #0]
 80021fe:	2900      	cmp	r1, #0
 8002200:	d0c9      	beq.n	8002196 <__sflush_r+0x1a>
 8002202:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002206:	4299      	cmp	r1, r3
 8002208:	d002      	beq.n	8002210 <__sflush_r+0x94>
 800220a:	4628      	mov	r0, r5
 800220c:	f000 f994 	bl	8002538 <_free_r>
 8002210:	2000      	movs	r0, #0
 8002212:	6360      	str	r0, [r4, #52]	; 0x34
 8002214:	e7c0      	b.n	8002198 <__sflush_r+0x1c>
 8002216:	2301      	movs	r3, #1
 8002218:	4628      	mov	r0, r5
 800221a:	47b0      	blx	r6
 800221c:	1c41      	adds	r1, r0, #1
 800221e:	d1c8      	bne.n	80021b2 <__sflush_r+0x36>
 8002220:	682b      	ldr	r3, [r5, #0]
 8002222:	2b00      	cmp	r3, #0
 8002224:	d0c5      	beq.n	80021b2 <__sflush_r+0x36>
 8002226:	2b1d      	cmp	r3, #29
 8002228:	d001      	beq.n	800222e <__sflush_r+0xb2>
 800222a:	2b16      	cmp	r3, #22
 800222c:	d101      	bne.n	8002232 <__sflush_r+0xb6>
 800222e:	602f      	str	r7, [r5, #0]
 8002230:	e7b1      	b.n	8002196 <__sflush_r+0x1a>
 8002232:	89a3      	ldrh	r3, [r4, #12]
 8002234:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002238:	81a3      	strh	r3, [r4, #12]
 800223a:	e7ad      	b.n	8002198 <__sflush_r+0x1c>
 800223c:	690f      	ldr	r7, [r1, #16]
 800223e:	2f00      	cmp	r7, #0
 8002240:	d0a9      	beq.n	8002196 <__sflush_r+0x1a>
 8002242:	0793      	lsls	r3, r2, #30
 8002244:	bf18      	it	ne
 8002246:	2300      	movne	r3, #0
 8002248:	680e      	ldr	r6, [r1, #0]
 800224a:	bf08      	it	eq
 800224c:	694b      	ldreq	r3, [r1, #20]
 800224e:	eba6 0807 	sub.w	r8, r6, r7
 8002252:	600f      	str	r7, [r1, #0]
 8002254:	608b      	str	r3, [r1, #8]
 8002256:	f1b8 0f00 	cmp.w	r8, #0
 800225a:	dd9c      	ble.n	8002196 <__sflush_r+0x1a>
 800225c:	4643      	mov	r3, r8
 800225e:	463a      	mov	r2, r7
 8002260:	6a21      	ldr	r1, [r4, #32]
 8002262:	4628      	mov	r0, r5
 8002264:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8002266:	47b0      	blx	r6
 8002268:	2800      	cmp	r0, #0
 800226a:	dc06      	bgt.n	800227a <__sflush_r+0xfe>
 800226c:	89a3      	ldrh	r3, [r4, #12]
 800226e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002272:	81a3      	strh	r3, [r4, #12]
 8002274:	f04f 30ff 	mov.w	r0, #4294967295
 8002278:	e78e      	b.n	8002198 <__sflush_r+0x1c>
 800227a:	4407      	add	r7, r0
 800227c:	eba8 0800 	sub.w	r8, r8, r0
 8002280:	e7e9      	b.n	8002256 <__sflush_r+0xda>
 8002282:	bf00      	nop
 8002284:	20400001 	.word	0x20400001

08002288 <_fflush_r>:
 8002288:	b538      	push	{r3, r4, r5, lr}
 800228a:	690b      	ldr	r3, [r1, #16]
 800228c:	4605      	mov	r5, r0
 800228e:	460c      	mov	r4, r1
 8002290:	b1db      	cbz	r3, 80022ca <_fflush_r+0x42>
 8002292:	b118      	cbz	r0, 800229c <_fflush_r+0x14>
 8002294:	6983      	ldr	r3, [r0, #24]
 8002296:	b90b      	cbnz	r3, 800229c <_fflush_r+0x14>
 8002298:	f000 f860 	bl	800235c <__sinit>
 800229c:	4b0c      	ldr	r3, [pc, #48]	; (80022d0 <_fflush_r+0x48>)
 800229e:	429c      	cmp	r4, r3
 80022a0:	d109      	bne.n	80022b6 <_fflush_r+0x2e>
 80022a2:	686c      	ldr	r4, [r5, #4]
 80022a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80022a8:	b17b      	cbz	r3, 80022ca <_fflush_r+0x42>
 80022aa:	4621      	mov	r1, r4
 80022ac:	4628      	mov	r0, r5
 80022ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80022b2:	f7ff bf63 	b.w	800217c <__sflush_r>
 80022b6:	4b07      	ldr	r3, [pc, #28]	; (80022d4 <_fflush_r+0x4c>)
 80022b8:	429c      	cmp	r4, r3
 80022ba:	d101      	bne.n	80022c0 <_fflush_r+0x38>
 80022bc:	68ac      	ldr	r4, [r5, #8]
 80022be:	e7f1      	b.n	80022a4 <_fflush_r+0x1c>
 80022c0:	4b05      	ldr	r3, [pc, #20]	; (80022d8 <_fflush_r+0x50>)
 80022c2:	429c      	cmp	r4, r3
 80022c4:	bf08      	it	eq
 80022c6:	68ec      	ldreq	r4, [r5, #12]
 80022c8:	e7ec      	b.n	80022a4 <_fflush_r+0x1c>
 80022ca:	2000      	movs	r0, #0
 80022cc:	bd38      	pop	{r3, r4, r5, pc}
 80022ce:	bf00      	nop
 80022d0:	08002878 	.word	0x08002878
 80022d4:	08002898 	.word	0x08002898
 80022d8:	08002858 	.word	0x08002858

080022dc <std>:
 80022dc:	2300      	movs	r3, #0
 80022de:	b510      	push	{r4, lr}
 80022e0:	4604      	mov	r4, r0
 80022e2:	e9c0 3300 	strd	r3, r3, [r0]
 80022e6:	6083      	str	r3, [r0, #8]
 80022e8:	8181      	strh	r1, [r0, #12]
 80022ea:	6643      	str	r3, [r0, #100]	; 0x64
 80022ec:	81c2      	strh	r2, [r0, #14]
 80022ee:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80022f2:	6183      	str	r3, [r0, #24]
 80022f4:	4619      	mov	r1, r3
 80022f6:	2208      	movs	r2, #8
 80022f8:	305c      	adds	r0, #92	; 0x5c
 80022fa:	f7ff fe13 	bl	8001f24 <memset>
 80022fe:	4b05      	ldr	r3, [pc, #20]	; (8002314 <std+0x38>)
 8002300:	6224      	str	r4, [r4, #32]
 8002302:	6263      	str	r3, [r4, #36]	; 0x24
 8002304:	4b04      	ldr	r3, [pc, #16]	; (8002318 <std+0x3c>)
 8002306:	62a3      	str	r3, [r4, #40]	; 0x28
 8002308:	4b04      	ldr	r3, [pc, #16]	; (800231c <std+0x40>)
 800230a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800230c:	4b04      	ldr	r3, [pc, #16]	; (8002320 <std+0x44>)
 800230e:	6323      	str	r3, [r4, #48]	; 0x30
 8002310:	bd10      	pop	{r4, pc}
 8002312:	bf00      	nop
 8002314:	080026a5 	.word	0x080026a5
 8002318:	080026c7 	.word	0x080026c7
 800231c:	080026ff 	.word	0x080026ff
 8002320:	08002723 	.word	0x08002723

08002324 <_cleanup_r>:
 8002324:	4901      	ldr	r1, [pc, #4]	; (800232c <_cleanup_r+0x8>)
 8002326:	f000 b885 	b.w	8002434 <_fwalk_reent>
 800232a:	bf00      	nop
 800232c:	08002289 	.word	0x08002289

08002330 <__sfmoreglue>:
 8002330:	b570      	push	{r4, r5, r6, lr}
 8002332:	2568      	movs	r5, #104	; 0x68
 8002334:	1e4a      	subs	r2, r1, #1
 8002336:	4355      	muls	r5, r2
 8002338:	460e      	mov	r6, r1
 800233a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800233e:	f000 f947 	bl	80025d0 <_malloc_r>
 8002342:	4604      	mov	r4, r0
 8002344:	b140      	cbz	r0, 8002358 <__sfmoreglue+0x28>
 8002346:	2100      	movs	r1, #0
 8002348:	e9c0 1600 	strd	r1, r6, [r0]
 800234c:	300c      	adds	r0, #12
 800234e:	60a0      	str	r0, [r4, #8]
 8002350:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8002354:	f7ff fde6 	bl	8001f24 <memset>
 8002358:	4620      	mov	r0, r4
 800235a:	bd70      	pop	{r4, r5, r6, pc}

0800235c <__sinit>:
 800235c:	6983      	ldr	r3, [r0, #24]
 800235e:	b510      	push	{r4, lr}
 8002360:	4604      	mov	r4, r0
 8002362:	bb33      	cbnz	r3, 80023b2 <__sinit+0x56>
 8002364:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8002368:	6503      	str	r3, [r0, #80]	; 0x50
 800236a:	4b12      	ldr	r3, [pc, #72]	; (80023b4 <__sinit+0x58>)
 800236c:	4a12      	ldr	r2, [pc, #72]	; (80023b8 <__sinit+0x5c>)
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	6282      	str	r2, [r0, #40]	; 0x28
 8002372:	4298      	cmp	r0, r3
 8002374:	bf04      	itt	eq
 8002376:	2301      	moveq	r3, #1
 8002378:	6183      	streq	r3, [r0, #24]
 800237a:	f000 f81f 	bl	80023bc <__sfp>
 800237e:	6060      	str	r0, [r4, #4]
 8002380:	4620      	mov	r0, r4
 8002382:	f000 f81b 	bl	80023bc <__sfp>
 8002386:	60a0      	str	r0, [r4, #8]
 8002388:	4620      	mov	r0, r4
 800238a:	f000 f817 	bl	80023bc <__sfp>
 800238e:	2200      	movs	r2, #0
 8002390:	60e0      	str	r0, [r4, #12]
 8002392:	2104      	movs	r1, #4
 8002394:	6860      	ldr	r0, [r4, #4]
 8002396:	f7ff ffa1 	bl	80022dc <std>
 800239a:	2201      	movs	r2, #1
 800239c:	2109      	movs	r1, #9
 800239e:	68a0      	ldr	r0, [r4, #8]
 80023a0:	f7ff ff9c 	bl	80022dc <std>
 80023a4:	2202      	movs	r2, #2
 80023a6:	2112      	movs	r1, #18
 80023a8:	68e0      	ldr	r0, [r4, #12]
 80023aa:	f7ff ff97 	bl	80022dc <std>
 80023ae:	2301      	movs	r3, #1
 80023b0:	61a3      	str	r3, [r4, #24]
 80023b2:	bd10      	pop	{r4, pc}
 80023b4:	08002854 	.word	0x08002854
 80023b8:	08002325 	.word	0x08002325

080023bc <__sfp>:
 80023bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80023be:	4b1b      	ldr	r3, [pc, #108]	; (800242c <__sfp+0x70>)
 80023c0:	4607      	mov	r7, r0
 80023c2:	681e      	ldr	r6, [r3, #0]
 80023c4:	69b3      	ldr	r3, [r6, #24]
 80023c6:	b913      	cbnz	r3, 80023ce <__sfp+0x12>
 80023c8:	4630      	mov	r0, r6
 80023ca:	f7ff ffc7 	bl	800235c <__sinit>
 80023ce:	3648      	adds	r6, #72	; 0x48
 80023d0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80023d4:	3b01      	subs	r3, #1
 80023d6:	d503      	bpl.n	80023e0 <__sfp+0x24>
 80023d8:	6833      	ldr	r3, [r6, #0]
 80023da:	b133      	cbz	r3, 80023ea <__sfp+0x2e>
 80023dc:	6836      	ldr	r6, [r6, #0]
 80023de:	e7f7      	b.n	80023d0 <__sfp+0x14>
 80023e0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80023e4:	b16d      	cbz	r5, 8002402 <__sfp+0x46>
 80023e6:	3468      	adds	r4, #104	; 0x68
 80023e8:	e7f4      	b.n	80023d4 <__sfp+0x18>
 80023ea:	2104      	movs	r1, #4
 80023ec:	4638      	mov	r0, r7
 80023ee:	f7ff ff9f 	bl	8002330 <__sfmoreglue>
 80023f2:	6030      	str	r0, [r6, #0]
 80023f4:	2800      	cmp	r0, #0
 80023f6:	d1f1      	bne.n	80023dc <__sfp+0x20>
 80023f8:	230c      	movs	r3, #12
 80023fa:	4604      	mov	r4, r0
 80023fc:	603b      	str	r3, [r7, #0]
 80023fe:	4620      	mov	r0, r4
 8002400:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002402:	4b0b      	ldr	r3, [pc, #44]	; (8002430 <__sfp+0x74>)
 8002404:	6665      	str	r5, [r4, #100]	; 0x64
 8002406:	e9c4 5500 	strd	r5, r5, [r4]
 800240a:	60a5      	str	r5, [r4, #8]
 800240c:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8002410:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8002414:	2208      	movs	r2, #8
 8002416:	4629      	mov	r1, r5
 8002418:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800241c:	f7ff fd82 	bl	8001f24 <memset>
 8002420:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8002424:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002428:	e7e9      	b.n	80023fe <__sfp+0x42>
 800242a:	bf00      	nop
 800242c:	08002854 	.word	0x08002854
 8002430:	ffff0001 	.word	0xffff0001

08002434 <_fwalk_reent>:
 8002434:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002438:	4680      	mov	r8, r0
 800243a:	4689      	mov	r9, r1
 800243c:	2600      	movs	r6, #0
 800243e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8002442:	b914      	cbnz	r4, 800244a <_fwalk_reent+0x16>
 8002444:	4630      	mov	r0, r6
 8002446:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800244a:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 800244e:	3f01      	subs	r7, #1
 8002450:	d501      	bpl.n	8002456 <_fwalk_reent+0x22>
 8002452:	6824      	ldr	r4, [r4, #0]
 8002454:	e7f5      	b.n	8002442 <_fwalk_reent+0xe>
 8002456:	89ab      	ldrh	r3, [r5, #12]
 8002458:	2b01      	cmp	r3, #1
 800245a:	d907      	bls.n	800246c <_fwalk_reent+0x38>
 800245c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002460:	3301      	adds	r3, #1
 8002462:	d003      	beq.n	800246c <_fwalk_reent+0x38>
 8002464:	4629      	mov	r1, r5
 8002466:	4640      	mov	r0, r8
 8002468:	47c8      	blx	r9
 800246a:	4306      	orrs	r6, r0
 800246c:	3568      	adds	r5, #104	; 0x68
 800246e:	e7ee      	b.n	800244e <_fwalk_reent+0x1a>

08002470 <__swhatbuf_r>:
 8002470:	b570      	push	{r4, r5, r6, lr}
 8002472:	460e      	mov	r6, r1
 8002474:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002478:	b096      	sub	sp, #88	; 0x58
 800247a:	2900      	cmp	r1, #0
 800247c:	4614      	mov	r4, r2
 800247e:	461d      	mov	r5, r3
 8002480:	da07      	bge.n	8002492 <__swhatbuf_r+0x22>
 8002482:	2300      	movs	r3, #0
 8002484:	602b      	str	r3, [r5, #0]
 8002486:	89b3      	ldrh	r3, [r6, #12]
 8002488:	061a      	lsls	r2, r3, #24
 800248a:	d410      	bmi.n	80024ae <__swhatbuf_r+0x3e>
 800248c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002490:	e00e      	b.n	80024b0 <__swhatbuf_r+0x40>
 8002492:	466a      	mov	r2, sp
 8002494:	f000 f96c 	bl	8002770 <_fstat_r>
 8002498:	2800      	cmp	r0, #0
 800249a:	dbf2      	blt.n	8002482 <__swhatbuf_r+0x12>
 800249c:	9a01      	ldr	r2, [sp, #4]
 800249e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80024a2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80024a6:	425a      	negs	r2, r3
 80024a8:	415a      	adcs	r2, r3
 80024aa:	602a      	str	r2, [r5, #0]
 80024ac:	e7ee      	b.n	800248c <__swhatbuf_r+0x1c>
 80024ae:	2340      	movs	r3, #64	; 0x40
 80024b0:	2000      	movs	r0, #0
 80024b2:	6023      	str	r3, [r4, #0]
 80024b4:	b016      	add	sp, #88	; 0x58
 80024b6:	bd70      	pop	{r4, r5, r6, pc}

080024b8 <__smakebuf_r>:
 80024b8:	898b      	ldrh	r3, [r1, #12]
 80024ba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80024bc:	079d      	lsls	r5, r3, #30
 80024be:	4606      	mov	r6, r0
 80024c0:	460c      	mov	r4, r1
 80024c2:	d507      	bpl.n	80024d4 <__smakebuf_r+0x1c>
 80024c4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80024c8:	6023      	str	r3, [r4, #0]
 80024ca:	6123      	str	r3, [r4, #16]
 80024cc:	2301      	movs	r3, #1
 80024ce:	6163      	str	r3, [r4, #20]
 80024d0:	b002      	add	sp, #8
 80024d2:	bd70      	pop	{r4, r5, r6, pc}
 80024d4:	ab01      	add	r3, sp, #4
 80024d6:	466a      	mov	r2, sp
 80024d8:	f7ff ffca 	bl	8002470 <__swhatbuf_r>
 80024dc:	9900      	ldr	r1, [sp, #0]
 80024de:	4605      	mov	r5, r0
 80024e0:	4630      	mov	r0, r6
 80024e2:	f000 f875 	bl	80025d0 <_malloc_r>
 80024e6:	b948      	cbnz	r0, 80024fc <__smakebuf_r+0x44>
 80024e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80024ec:	059a      	lsls	r2, r3, #22
 80024ee:	d4ef      	bmi.n	80024d0 <__smakebuf_r+0x18>
 80024f0:	f023 0303 	bic.w	r3, r3, #3
 80024f4:	f043 0302 	orr.w	r3, r3, #2
 80024f8:	81a3      	strh	r3, [r4, #12]
 80024fa:	e7e3      	b.n	80024c4 <__smakebuf_r+0xc>
 80024fc:	4b0d      	ldr	r3, [pc, #52]	; (8002534 <__smakebuf_r+0x7c>)
 80024fe:	62b3      	str	r3, [r6, #40]	; 0x28
 8002500:	89a3      	ldrh	r3, [r4, #12]
 8002502:	6020      	str	r0, [r4, #0]
 8002504:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002508:	81a3      	strh	r3, [r4, #12]
 800250a:	9b00      	ldr	r3, [sp, #0]
 800250c:	6120      	str	r0, [r4, #16]
 800250e:	6163      	str	r3, [r4, #20]
 8002510:	9b01      	ldr	r3, [sp, #4]
 8002512:	b15b      	cbz	r3, 800252c <__smakebuf_r+0x74>
 8002514:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002518:	4630      	mov	r0, r6
 800251a:	f000 f93b 	bl	8002794 <_isatty_r>
 800251e:	b128      	cbz	r0, 800252c <__smakebuf_r+0x74>
 8002520:	89a3      	ldrh	r3, [r4, #12]
 8002522:	f023 0303 	bic.w	r3, r3, #3
 8002526:	f043 0301 	orr.w	r3, r3, #1
 800252a:	81a3      	strh	r3, [r4, #12]
 800252c:	89a3      	ldrh	r3, [r4, #12]
 800252e:	431d      	orrs	r5, r3
 8002530:	81a5      	strh	r5, [r4, #12]
 8002532:	e7cd      	b.n	80024d0 <__smakebuf_r+0x18>
 8002534:	08002325 	.word	0x08002325

08002538 <_free_r>:
 8002538:	b538      	push	{r3, r4, r5, lr}
 800253a:	4605      	mov	r5, r0
 800253c:	2900      	cmp	r1, #0
 800253e:	d043      	beq.n	80025c8 <_free_r+0x90>
 8002540:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002544:	1f0c      	subs	r4, r1, #4
 8002546:	2b00      	cmp	r3, #0
 8002548:	bfb8      	it	lt
 800254a:	18e4      	addlt	r4, r4, r3
 800254c:	f000 f944 	bl	80027d8 <__malloc_lock>
 8002550:	4a1e      	ldr	r2, [pc, #120]	; (80025cc <_free_r+0x94>)
 8002552:	6813      	ldr	r3, [r2, #0]
 8002554:	4610      	mov	r0, r2
 8002556:	b933      	cbnz	r3, 8002566 <_free_r+0x2e>
 8002558:	6063      	str	r3, [r4, #4]
 800255a:	6014      	str	r4, [r2, #0]
 800255c:	4628      	mov	r0, r5
 800255e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002562:	f000 b93a 	b.w	80027da <__malloc_unlock>
 8002566:	42a3      	cmp	r3, r4
 8002568:	d90b      	bls.n	8002582 <_free_r+0x4a>
 800256a:	6821      	ldr	r1, [r4, #0]
 800256c:	1862      	adds	r2, r4, r1
 800256e:	4293      	cmp	r3, r2
 8002570:	bf01      	itttt	eq
 8002572:	681a      	ldreq	r2, [r3, #0]
 8002574:	685b      	ldreq	r3, [r3, #4]
 8002576:	1852      	addeq	r2, r2, r1
 8002578:	6022      	streq	r2, [r4, #0]
 800257a:	6063      	str	r3, [r4, #4]
 800257c:	6004      	str	r4, [r0, #0]
 800257e:	e7ed      	b.n	800255c <_free_r+0x24>
 8002580:	4613      	mov	r3, r2
 8002582:	685a      	ldr	r2, [r3, #4]
 8002584:	b10a      	cbz	r2, 800258a <_free_r+0x52>
 8002586:	42a2      	cmp	r2, r4
 8002588:	d9fa      	bls.n	8002580 <_free_r+0x48>
 800258a:	6819      	ldr	r1, [r3, #0]
 800258c:	1858      	adds	r0, r3, r1
 800258e:	42a0      	cmp	r0, r4
 8002590:	d10b      	bne.n	80025aa <_free_r+0x72>
 8002592:	6820      	ldr	r0, [r4, #0]
 8002594:	4401      	add	r1, r0
 8002596:	1858      	adds	r0, r3, r1
 8002598:	4282      	cmp	r2, r0
 800259a:	6019      	str	r1, [r3, #0]
 800259c:	d1de      	bne.n	800255c <_free_r+0x24>
 800259e:	6810      	ldr	r0, [r2, #0]
 80025a0:	6852      	ldr	r2, [r2, #4]
 80025a2:	4401      	add	r1, r0
 80025a4:	6019      	str	r1, [r3, #0]
 80025a6:	605a      	str	r2, [r3, #4]
 80025a8:	e7d8      	b.n	800255c <_free_r+0x24>
 80025aa:	d902      	bls.n	80025b2 <_free_r+0x7a>
 80025ac:	230c      	movs	r3, #12
 80025ae:	602b      	str	r3, [r5, #0]
 80025b0:	e7d4      	b.n	800255c <_free_r+0x24>
 80025b2:	6820      	ldr	r0, [r4, #0]
 80025b4:	1821      	adds	r1, r4, r0
 80025b6:	428a      	cmp	r2, r1
 80025b8:	bf01      	itttt	eq
 80025ba:	6811      	ldreq	r1, [r2, #0]
 80025bc:	6852      	ldreq	r2, [r2, #4]
 80025be:	1809      	addeq	r1, r1, r0
 80025c0:	6021      	streq	r1, [r4, #0]
 80025c2:	6062      	str	r2, [r4, #4]
 80025c4:	605c      	str	r4, [r3, #4]
 80025c6:	e7c9      	b.n	800255c <_free_r+0x24>
 80025c8:	bd38      	pop	{r3, r4, r5, pc}
 80025ca:	bf00      	nop
 80025cc:	20000114 	.word	0x20000114

080025d0 <_malloc_r>:
 80025d0:	b570      	push	{r4, r5, r6, lr}
 80025d2:	1ccd      	adds	r5, r1, #3
 80025d4:	f025 0503 	bic.w	r5, r5, #3
 80025d8:	3508      	adds	r5, #8
 80025da:	2d0c      	cmp	r5, #12
 80025dc:	bf38      	it	cc
 80025de:	250c      	movcc	r5, #12
 80025e0:	2d00      	cmp	r5, #0
 80025e2:	4606      	mov	r6, r0
 80025e4:	db01      	blt.n	80025ea <_malloc_r+0x1a>
 80025e6:	42a9      	cmp	r1, r5
 80025e8:	d903      	bls.n	80025f2 <_malloc_r+0x22>
 80025ea:	230c      	movs	r3, #12
 80025ec:	6033      	str	r3, [r6, #0]
 80025ee:	2000      	movs	r0, #0
 80025f0:	bd70      	pop	{r4, r5, r6, pc}
 80025f2:	f000 f8f1 	bl	80027d8 <__malloc_lock>
 80025f6:	4a21      	ldr	r2, [pc, #132]	; (800267c <_malloc_r+0xac>)
 80025f8:	6814      	ldr	r4, [r2, #0]
 80025fa:	4621      	mov	r1, r4
 80025fc:	b991      	cbnz	r1, 8002624 <_malloc_r+0x54>
 80025fe:	4c20      	ldr	r4, [pc, #128]	; (8002680 <_malloc_r+0xb0>)
 8002600:	6823      	ldr	r3, [r4, #0]
 8002602:	b91b      	cbnz	r3, 800260c <_malloc_r+0x3c>
 8002604:	4630      	mov	r0, r6
 8002606:	f000 f83d 	bl	8002684 <_sbrk_r>
 800260a:	6020      	str	r0, [r4, #0]
 800260c:	4629      	mov	r1, r5
 800260e:	4630      	mov	r0, r6
 8002610:	f000 f838 	bl	8002684 <_sbrk_r>
 8002614:	1c43      	adds	r3, r0, #1
 8002616:	d124      	bne.n	8002662 <_malloc_r+0x92>
 8002618:	230c      	movs	r3, #12
 800261a:	4630      	mov	r0, r6
 800261c:	6033      	str	r3, [r6, #0]
 800261e:	f000 f8dc 	bl	80027da <__malloc_unlock>
 8002622:	e7e4      	b.n	80025ee <_malloc_r+0x1e>
 8002624:	680b      	ldr	r3, [r1, #0]
 8002626:	1b5b      	subs	r3, r3, r5
 8002628:	d418      	bmi.n	800265c <_malloc_r+0x8c>
 800262a:	2b0b      	cmp	r3, #11
 800262c:	d90f      	bls.n	800264e <_malloc_r+0x7e>
 800262e:	600b      	str	r3, [r1, #0]
 8002630:	18cc      	adds	r4, r1, r3
 8002632:	50cd      	str	r5, [r1, r3]
 8002634:	4630      	mov	r0, r6
 8002636:	f000 f8d0 	bl	80027da <__malloc_unlock>
 800263a:	f104 000b 	add.w	r0, r4, #11
 800263e:	1d23      	adds	r3, r4, #4
 8002640:	f020 0007 	bic.w	r0, r0, #7
 8002644:	1ac3      	subs	r3, r0, r3
 8002646:	d0d3      	beq.n	80025f0 <_malloc_r+0x20>
 8002648:	425a      	negs	r2, r3
 800264a:	50e2      	str	r2, [r4, r3]
 800264c:	e7d0      	b.n	80025f0 <_malloc_r+0x20>
 800264e:	684b      	ldr	r3, [r1, #4]
 8002650:	428c      	cmp	r4, r1
 8002652:	bf16      	itet	ne
 8002654:	6063      	strne	r3, [r4, #4]
 8002656:	6013      	streq	r3, [r2, #0]
 8002658:	460c      	movne	r4, r1
 800265a:	e7eb      	b.n	8002634 <_malloc_r+0x64>
 800265c:	460c      	mov	r4, r1
 800265e:	6849      	ldr	r1, [r1, #4]
 8002660:	e7cc      	b.n	80025fc <_malloc_r+0x2c>
 8002662:	1cc4      	adds	r4, r0, #3
 8002664:	f024 0403 	bic.w	r4, r4, #3
 8002668:	42a0      	cmp	r0, r4
 800266a:	d005      	beq.n	8002678 <_malloc_r+0xa8>
 800266c:	1a21      	subs	r1, r4, r0
 800266e:	4630      	mov	r0, r6
 8002670:	f000 f808 	bl	8002684 <_sbrk_r>
 8002674:	3001      	adds	r0, #1
 8002676:	d0cf      	beq.n	8002618 <_malloc_r+0x48>
 8002678:	6025      	str	r5, [r4, #0]
 800267a:	e7db      	b.n	8002634 <_malloc_r+0x64>
 800267c:	20000114 	.word	0x20000114
 8002680:	20000118 	.word	0x20000118

08002684 <_sbrk_r>:
 8002684:	b538      	push	{r3, r4, r5, lr}
 8002686:	2300      	movs	r3, #0
 8002688:	4c05      	ldr	r4, [pc, #20]	; (80026a0 <_sbrk_r+0x1c>)
 800268a:	4605      	mov	r5, r0
 800268c:	4608      	mov	r0, r1
 800268e:	6023      	str	r3, [r4, #0]
 8002690:	f7ff fa5c 	bl	8001b4c <_sbrk>
 8002694:	1c43      	adds	r3, r0, #1
 8002696:	d102      	bne.n	800269e <_sbrk_r+0x1a>
 8002698:	6823      	ldr	r3, [r4, #0]
 800269a:	b103      	cbz	r3, 800269e <_sbrk_r+0x1a>
 800269c:	602b      	str	r3, [r5, #0]
 800269e:	bd38      	pop	{r3, r4, r5, pc}
 80026a0:	20000120 	.word	0x20000120

080026a4 <__sread>:
 80026a4:	b510      	push	{r4, lr}
 80026a6:	460c      	mov	r4, r1
 80026a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80026ac:	f000 f896 	bl	80027dc <_read_r>
 80026b0:	2800      	cmp	r0, #0
 80026b2:	bfab      	itete	ge
 80026b4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80026b6:	89a3      	ldrhlt	r3, [r4, #12]
 80026b8:	181b      	addge	r3, r3, r0
 80026ba:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80026be:	bfac      	ite	ge
 80026c0:	6563      	strge	r3, [r4, #84]	; 0x54
 80026c2:	81a3      	strhlt	r3, [r4, #12]
 80026c4:	bd10      	pop	{r4, pc}

080026c6 <__swrite>:
 80026c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80026ca:	461f      	mov	r7, r3
 80026cc:	898b      	ldrh	r3, [r1, #12]
 80026ce:	4605      	mov	r5, r0
 80026d0:	05db      	lsls	r3, r3, #23
 80026d2:	460c      	mov	r4, r1
 80026d4:	4616      	mov	r6, r2
 80026d6:	d505      	bpl.n	80026e4 <__swrite+0x1e>
 80026d8:	2302      	movs	r3, #2
 80026da:	2200      	movs	r2, #0
 80026dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80026e0:	f000 f868 	bl	80027b4 <_lseek_r>
 80026e4:	89a3      	ldrh	r3, [r4, #12]
 80026e6:	4632      	mov	r2, r6
 80026e8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80026ec:	81a3      	strh	r3, [r4, #12]
 80026ee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80026f2:	463b      	mov	r3, r7
 80026f4:	4628      	mov	r0, r5
 80026f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80026fa:	f000 b817 	b.w	800272c <_write_r>

080026fe <__sseek>:
 80026fe:	b510      	push	{r4, lr}
 8002700:	460c      	mov	r4, r1
 8002702:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002706:	f000 f855 	bl	80027b4 <_lseek_r>
 800270a:	1c43      	adds	r3, r0, #1
 800270c:	89a3      	ldrh	r3, [r4, #12]
 800270e:	bf15      	itete	ne
 8002710:	6560      	strne	r0, [r4, #84]	; 0x54
 8002712:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002716:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800271a:	81a3      	strheq	r3, [r4, #12]
 800271c:	bf18      	it	ne
 800271e:	81a3      	strhne	r3, [r4, #12]
 8002720:	bd10      	pop	{r4, pc}

08002722 <__sclose>:
 8002722:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002726:	f000 b813 	b.w	8002750 <_close_r>
	...

0800272c <_write_r>:
 800272c:	b538      	push	{r3, r4, r5, lr}
 800272e:	4605      	mov	r5, r0
 8002730:	4608      	mov	r0, r1
 8002732:	4611      	mov	r1, r2
 8002734:	2200      	movs	r2, #0
 8002736:	4c05      	ldr	r4, [pc, #20]	; (800274c <_write_r+0x20>)
 8002738:	6022      	str	r2, [r4, #0]
 800273a:	461a      	mov	r2, r3
 800273c:	f7fe ff24 	bl	8001588 <_write>
 8002740:	1c43      	adds	r3, r0, #1
 8002742:	d102      	bne.n	800274a <_write_r+0x1e>
 8002744:	6823      	ldr	r3, [r4, #0]
 8002746:	b103      	cbz	r3, 800274a <_write_r+0x1e>
 8002748:	602b      	str	r3, [r5, #0]
 800274a:	bd38      	pop	{r3, r4, r5, pc}
 800274c:	20000120 	.word	0x20000120

08002750 <_close_r>:
 8002750:	b538      	push	{r3, r4, r5, lr}
 8002752:	2300      	movs	r3, #0
 8002754:	4c05      	ldr	r4, [pc, #20]	; (800276c <_close_r+0x1c>)
 8002756:	4605      	mov	r5, r0
 8002758:	4608      	mov	r0, r1
 800275a:	6023      	str	r3, [r4, #0]
 800275c:	f7ff f9c5 	bl	8001aea <_close>
 8002760:	1c43      	adds	r3, r0, #1
 8002762:	d102      	bne.n	800276a <_close_r+0x1a>
 8002764:	6823      	ldr	r3, [r4, #0]
 8002766:	b103      	cbz	r3, 800276a <_close_r+0x1a>
 8002768:	602b      	str	r3, [r5, #0]
 800276a:	bd38      	pop	{r3, r4, r5, pc}
 800276c:	20000120 	.word	0x20000120

08002770 <_fstat_r>:
 8002770:	b538      	push	{r3, r4, r5, lr}
 8002772:	2300      	movs	r3, #0
 8002774:	4c06      	ldr	r4, [pc, #24]	; (8002790 <_fstat_r+0x20>)
 8002776:	4605      	mov	r5, r0
 8002778:	4608      	mov	r0, r1
 800277a:	4611      	mov	r1, r2
 800277c:	6023      	str	r3, [r4, #0]
 800277e:	f7ff f9bf 	bl	8001b00 <_fstat>
 8002782:	1c43      	adds	r3, r0, #1
 8002784:	d102      	bne.n	800278c <_fstat_r+0x1c>
 8002786:	6823      	ldr	r3, [r4, #0]
 8002788:	b103      	cbz	r3, 800278c <_fstat_r+0x1c>
 800278a:	602b      	str	r3, [r5, #0]
 800278c:	bd38      	pop	{r3, r4, r5, pc}
 800278e:	bf00      	nop
 8002790:	20000120 	.word	0x20000120

08002794 <_isatty_r>:
 8002794:	b538      	push	{r3, r4, r5, lr}
 8002796:	2300      	movs	r3, #0
 8002798:	4c05      	ldr	r4, [pc, #20]	; (80027b0 <_isatty_r+0x1c>)
 800279a:	4605      	mov	r5, r0
 800279c:	4608      	mov	r0, r1
 800279e:	6023      	str	r3, [r4, #0]
 80027a0:	f7ff f9bd 	bl	8001b1e <_isatty>
 80027a4:	1c43      	adds	r3, r0, #1
 80027a6:	d102      	bne.n	80027ae <_isatty_r+0x1a>
 80027a8:	6823      	ldr	r3, [r4, #0]
 80027aa:	b103      	cbz	r3, 80027ae <_isatty_r+0x1a>
 80027ac:	602b      	str	r3, [r5, #0]
 80027ae:	bd38      	pop	{r3, r4, r5, pc}
 80027b0:	20000120 	.word	0x20000120

080027b4 <_lseek_r>:
 80027b4:	b538      	push	{r3, r4, r5, lr}
 80027b6:	4605      	mov	r5, r0
 80027b8:	4608      	mov	r0, r1
 80027ba:	4611      	mov	r1, r2
 80027bc:	2200      	movs	r2, #0
 80027be:	4c05      	ldr	r4, [pc, #20]	; (80027d4 <_lseek_r+0x20>)
 80027c0:	6022      	str	r2, [r4, #0]
 80027c2:	461a      	mov	r2, r3
 80027c4:	f7ff f9b5 	bl	8001b32 <_lseek>
 80027c8:	1c43      	adds	r3, r0, #1
 80027ca:	d102      	bne.n	80027d2 <_lseek_r+0x1e>
 80027cc:	6823      	ldr	r3, [r4, #0]
 80027ce:	b103      	cbz	r3, 80027d2 <_lseek_r+0x1e>
 80027d0:	602b      	str	r3, [r5, #0]
 80027d2:	bd38      	pop	{r3, r4, r5, pc}
 80027d4:	20000120 	.word	0x20000120

080027d8 <__malloc_lock>:
 80027d8:	4770      	bx	lr

080027da <__malloc_unlock>:
 80027da:	4770      	bx	lr

080027dc <_read_r>:
 80027dc:	b538      	push	{r3, r4, r5, lr}
 80027de:	4605      	mov	r5, r0
 80027e0:	4608      	mov	r0, r1
 80027e2:	4611      	mov	r1, r2
 80027e4:	2200      	movs	r2, #0
 80027e6:	4c05      	ldr	r4, [pc, #20]	; (80027fc <_read_r+0x20>)
 80027e8:	6022      	str	r2, [r4, #0]
 80027ea:	461a      	mov	r2, r3
 80027ec:	f7ff f960 	bl	8001ab0 <_read>
 80027f0:	1c43      	adds	r3, r0, #1
 80027f2:	d102      	bne.n	80027fa <_read_r+0x1e>
 80027f4:	6823      	ldr	r3, [r4, #0]
 80027f6:	b103      	cbz	r3, 80027fa <_read_r+0x1e>
 80027f8:	602b      	str	r3, [r5, #0]
 80027fa:	bd38      	pop	{r3, r4, r5, pc}
 80027fc:	20000120 	.word	0x20000120

08002800 <_init>:
 8002800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002802:	bf00      	nop
 8002804:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002806:	bc08      	pop	{r3}
 8002808:	469e      	mov	lr, r3
 800280a:	4770      	bx	lr

0800280c <_fini>:
 800280c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800280e:	bf00      	nop
 8002810:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002812:	bc08      	pop	{r3}
 8002814:	469e      	mov	lr, r3
 8002816:	4770      	bx	lr
